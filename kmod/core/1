
core.o:     file format elf64-tradlittlemips


Disassembly of section .text:

0000000000000000 <kpatch_get_func>:
kpatch_get_func():
/home/loongson/kpatch/kmod/core/core.c:191
	result = atomic_cmpxchg(&kpatch_state, KPATCH_STATE_UPDATING, state);
	return result == KPATCH_STATE_UPDATING ? state : result;
}

static struct kpatch_func *kpatch_get_func(unsigned long ip)
{
       0:	3c030000 	lui	v1,0x0
       4:	64630000 	daddiu	v1,v1,0
       8:	03e0082d 	move	at,ra
       c:	0060f809 	jalr	v1
      10:	0000602d 	move	t0,zero
hash_64_generic():
/home/loongson/linux-4.19-loongson/./include/linux/hash.h:81
#endif
static __always_inline u32 hash_64_generic(u64 val, unsigned int bits)
{
#if BITS_PER_LONG == 64
	/* 64x64-bit multiply is efficient on all 64-bit processors */
	return val * GOLDEN_RATIO_64 >> (64 - bits);
      14:	3c0230e4 	lui	v0,0x30e4
      18:	64424323 	daddiu	v0,v0,17187
      1c:	00021438 	dsll	v0,v0,0x10
      20:	6442405b 	daddiu	v0,v0,16475
      24:	00021478 	dsll	v0,v0,0x11
      28:	644283eb 	daddiu	v0,v0,-31765
      2c:	0082001c 	dmult	a0,v0
kpatch_get_func():
/home/loongson/kpatch/kmod/core/core.c:195
	struct kpatch_func *f;

	/* Here, we have to use rcu safe hlist because of NMI concurrency */
	hash_for_each_possible_rcu(kpatch_func_hash, f, node, ip) 
      30:	3c030000 	lui	v1,0x0
      34:	64630000 	daddiu	v1,v1,0
hash_64_generic():
      38:	00001012 	mflo	v0
kpatch_get_func():
      3c:	0002163e 	dsrl32	v0,v0,0x18
      40:	000210f8 	dsll	v0,v0,0x3
      44:	0062102d 	daddu	v0,v1,v0
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
})

static __always_inline
void __read_once_size(const volatile void *p, void *res, int size)
{
	__READ_ONCE_SIZE;
      48:	dc420000 	ld	v0,0(v0)
kpatch_get_func():
/home/loongson/kpatch/kmod/core/core.c:195
      4c:	10400010 	beqz	v0,90 <kpatch_get_func+0x90>
      50:	00000000 	nop
      54:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:195 (discriminator 17)
      58:	6442ffb8 	daddiu	v0,v0,-72
/home/loongson/kpatch/kmod/core/core.c:195 (discriminator 24)
      5c:	1040000a 	beqz	v0,88 <kpatch_get_func+0x88>
      60:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:196
		if (f->old_addr == ip)
      64:	dc430010 	ld	v1,16(v0)
      68:	10640004 	beq	v1,a0,7c <kpatch_get_func+0x7c>
      6c:	00000000 	nop
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
      70:	dc420048 	ld	v0,72(v0)
kpatch_get_func():
/home/loongson/kpatch/kmod/core/core.c:195
static struct kpatch_func *kpatch_get_func(unsigned long ip)
{
	struct kpatch_func *f;

	/* Here, we have to use rcu safe hlist because of NMI concurrency */
	hash_for_each_possible_rcu(kpatch_func_hash, f, node, ip) 
      74:	1440fff8 	bnez	v0,58 <kpatch_get_func+0x58>
      78:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:199
		if (f->old_addr == ip)
			return f;
	return NULL;
}
      7c:	03e00008 	jr	ra
      80:	00000000 	nop
      84:	00000000 	nop
      88:	03e00008 	jr	ra
      8c:	0000102d 	move	v0,zero
/home/loongson/kpatch/kmod/core/core.c:195
static struct kpatch_func *kpatch_get_func(unsigned long ip)
{
	struct kpatch_func *f;

	/* Here, we have to use rcu safe hlist because of NMI concurrency */
	hash_for_each_possible_rcu(kpatch_func_hash, f, node, ip) 
      90:	08000000 	j	0 <kpatch_get_func>
      94:	0000102d 	move	v0,zero

0000000000000098 <kpatch_verify_activeness_safety>:
kpatch_find_object_symbol():
/home/loongson/kpatch/kmod/core/core.c:289
 *
 * This function is called from stop_machine() context.
 */
static int kpatch_verify_activeness_safety(struct kpatch_module *kpmod,
					   bool replace)
{
      98:	67bdff80 	daddiu	sp,sp,-128
      9c:	ffbf0078 	sd	ra,120(sp)
      a0:	ffbe0070 	sd	s8,112(sp)
      a4:	ffb70068 	sd	s7,104(sp)
      a8:	ffb60060 	sd	s6,96(sp)
      ac:	ffb50058 	sd	s5,88(sp)
      b0:	ffb40050 	sd	s4,80(sp)
      b4:	ffb30048 	sd	s3,72(sp)
      b8:	ffb20040 	sd	s2,64(sp)
      bc:	ffb10038 	sd	s1,56(sp)
      c0:	ffb00030 	sd	s0,48(sp)
      c4:	3c030000 	lui	v1,0x0
      c8:	64630000 	daddiu	v1,v1,0
      cc:	03e0082d 	move	at,ra
      d0:	0060f809 	jalr	v1
      d4:	67ac0078 	daddiu	t0,sp,120
/home/loongson/kpatch/kmod/core/core.c:295
	struct task_struct *g, *t;
	int i;
	int ret = 0;

	/* Check the stacks of all tasks. */
	do_each_thread(g, t) {
      d8:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:289
 *
 * This function is called from stop_machine() context.
 */
static int kpatch_verify_activeness_safety(struct kpatch_module *kpmod,
					   bool replace)
{
      dc:	ffa40010 	sd	a0,16(sp)
      e0:	3c040000 	lui	a0,0x0
/home/loongson/kpatch/kmod/core/core.c:295
	struct task_struct *g, *t;
	int i;
	int ret = 0;

	/* Check the stacks of all tasks. */
	do_each_thread(g, t) {
      e4:	64420000 	daddiu	v0,v0,0
      e8:	3c030000 	lui	v1,0x0
      ec:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:289
 *
 * This function is called from stop_machine() context.
 */
static int kpatch_verify_activeness_safety(struct kpatch_module *kpmod,
					   bool replace)
{
      f0:	ffa50028 	sd	a1,40(sp)
/home/loongson/kpatch/kmod/core/core.c:295
	struct task_struct *g, *t;
	int i;
	int ret = 0;

	/* Check the stacks of all tasks. */
	do_each_thread(g, t) {
      f4:	ffa20020 	sd	v0,32(sp)
      f8:	64750000 	daddiu	s5,v1,0
      fc:	64930800 	daddiu	s3,a0,2048
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193 (discriminator 2)
     100:	dfa30020 	ld	v1,32(sp)
kpatch_find_object_symbol():
/home/loongson/kpatch/kmod/core/core.c:295 (discriminator 2)
     104:	3c040000 	lui	a0,0x0
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193 (discriminator 2)
     108:	dc6203e0 	ld	v0,992(v1)
kpatch_find_object_symbol():
/home/loongson/kpatch/kmod/core/core.c:295 (discriminator 2)
     10c:	64840000 	daddiu	a0,a0,0
     110:	6442fc20 	daddiu	v0,v0,-992
     114:	104400b8 	beq	v0,a0,3f8 <kpatch_verify_activeness_safety+0x360>
     118:	ffa20020 	sd	v0,32(sp)
     11c:	dfa30020 	ld	v1,32(sp)
/home/loongson/kpatch/kmod/core/core.c:298

		trace.nr_entries = 0;
		save_stack_trace_tsk(t, &trace);
     120:	02a0282d 	move	a1,s5
     124:	ffa30018 	sd	v1,24(sp)
     128:	dfa30010 	ld	v1,16(sp)
     12c:	dfa40018 	ld	a0,24(sp)
     130:	64720008 	daddiu	s2,v1,8
     134:	3c030000 	lui	v1,0x0
     138:	64630000 	daddiu	v1,v1,0
/home/loongson/kpatch/kmod/core/core.c:297
	int ret = 0;

	/* Check the stacks of all tasks. */
	do_each_thread(g, t) {

		trace.nr_entries = 0;
     13c:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:298
		save_stack_trace_tsk(t, &trace);
     140:	0060f809 	jalr	v1
     144:	ac400000 	sw	zero,0(v0)
/home/loongson/kpatch/kmod/core/core.c:299
		if (trace.nr_entries >= trace.max_entries) {
     148:	3c040000 	lui	a0,0x0
     14c:	8c820000 	lw	v0,0(a0)
     150:	8ea50004 	lw	a1,4(s5)
     154:	0045182b 	sltu	v1,v0,a1
     158:	1060008d 	beqz	v1,390 <kpatch_verify_activeness_safety+0x2f8>
     15c:	3c110000 	lui	s1,0x0
/home/loongson/kpatch/kmod/core/core.c:306 (discriminator 1)
			pr_err("more than %u trace entries!\n",
			       trace.max_entries);
			goto out;
		}

                for (i = 0; i < trace.nr_entries; i++) {
     160:	10400078 	beqz	v0,344 <kpatch_verify_activeness_safety+0x2ac>
     164:	2402ffff 	li	v0,-1
/home/loongson/kpatch/kmod/core/core.c:307
			if (trace.entries[i] == ULONG_MAX)
     168:	dea30008 	ld	v1,8(s5)
     16c:	dc770000 	ld	s7,0(v1)
     170:	12e20075 	beq	s7,v0,348 <kpatch_verify_activeness_safety+0x2b0>
     174:	dfa30018 	ld	v1,24(sp)
     178:	ffa00008 	sd	zero,8(sp)
kpatch_backtrace_address_verify():
/home/loongson/kpatch/kmod/core/core.c:266
	} while_for_each_linked_func();

	/* in the replace case, need to check the func hash as well */
	if (replace) {
		hash_for_each_rcu(kpatch_func_hash, i, func, node) {
			if (func->op != KPATCH_OP_UNPATCH || func->force)
     17c:	24100002 	li	s0,2
/home/loongson/kpatch/kmod/core/core.c:236
	struct kpatch_func *func;
	int i;
	int ret;

	/* check kpmod funcs */
	do_for_each_linked_func(kpmod, func) {
     180:	dfa30010 	ld	v1,16(sp)
     184:	00000000 	nop
     188:	dc7e0008 	ld	s8,8(v1)
     18c:	125e004c 	beq	s2,s8,2c0 <kpatch_verify_activeness_safety+0x228>
     190:	dfa30028 	ld	v1,40(sp)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     194:	dfc20070 	ld	v0,112(s8)
     198:	1040003e 	beqz	v0,294 <kpatch_verify_activeness_safety+0x1fc>
     19c:	dfc40010 	ld	a0,16(s8)
kpatch_backtrace_address_verify():
/home/loongson/kpatch/kmod/core/core.c:236
	struct kpatch_func *func;
	int i;
	int ret;

	/* check kpmod funcs */
	do_for_each_linked_func(kpmod, func) {
     1a0:	dfc20018 	ld	v0,24(s8)
     1a4:	67d60018 	daddiu	s6,s8,24
     1a8:	16c20006 	bne	s6,v0,1c4 <kpatch_verify_activeness_safety+0x12c>
     1ac:	6454ffd0 	daddiu	s4,v0,-48
kpatch_find_object_symbol():
     1b0:	08000000 	j	0 <kpatch_get_func>
     1b4:	dfde0000 	ld	s8,0(s8)
kpatch_backtrace_address_verify():
     1b8:	de820030 	ld	v0,48(s4)
     1bc:	12c2003c 	beq	s6,v0,2b0 <kpatch_verify_activeness_safety+0x218>
     1c0:	6454ffd0 	daddiu	s4,v0,-48
/home/loongson/kpatch/kmod/core/core.c:241
		unsigned long func_addr, func_size;
		const char *func_name;
		struct kpatch_func *active_func;

		if (func->force)
     1c4:	8e820040 	lw	v0,64(s4)
     1c8:	1440fffb 	bnez	v0,1b8 <kpatch_verify_activeness_safety+0x120>
     1cc:	66220000 	daddiu	v0,s1,0
/home/loongson/kpatch/kmod/core/core.c:244
			continue;

		active_func = kpatch_get_func(func->old_addr);
     1d0:	0040f809 	jalr	v0
     1d4:	de840010 	ld	a0,16(s4)
/home/loongson/kpatch/kmod/core/core.c:245
		if (!active_func) {
     1d8:	10400083 	beqz	v0,3e8 <kpatch_verify_activeness_safety+0x350>
     1dc:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:252
			func_addr = func->old_addr;
			func_size = func->old_size;
			func_name = func->name;
		} else {
			/* repatching or unpatching */
			func_addr = active_func->new_addr;
     1e0:	dc460000 	ld	a2,0(v0)
/home/loongson/kpatch/kmod/core/core.c:253
			func_size = active_func->new_size;
     1e4:	dc440008 	ld	a0,8(v0)
/home/loongson/kpatch/kmod/core/core.c:254
			func_name = active_func->name;
     1e8:	dc450028 	ld	a1,40(v0)
kpatch_compare_addresses():
/home/loongson/kpatch/kmod/core/core.c:220
static inline int kpatch_compare_addresses(unsigned long stack_addr,
					   unsigned long func_addr,
					   unsigned long func_size,
					   const char *func_name)
{
	if (stack_addr >= func_addr && stack_addr < func_addr + func_size) {
     1ec:	0086102d 	daddu	v0,a0,a2
     1f0:	02e6302b 	sltu	a2,s7,a2
     1f4:	14c0fff0 	bnez	a2,1b8 <kpatch_verify_activeness_safety+0x120>
     1f8:	02e2102b 	sltu	v0,s7,v0
     1fc:	1040ffee 	beqz	v0,1b8 <kpatch_verify_activeness_safety+0x120>
     200:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:221
		pr_err("activeness safety check failed for %s\n", func_name);
     204:	3c100000 	lui	s0,0x0
     208:	3c040000 	lui	a0,0x0
     20c:	66100000 	daddiu	s0,s0,0
     210:	0200f809 	jalr	s0
     214:	64840000 	daddiu	a0,a0,0
kpatch_verify_activeness_safety():
/home/loongson/kpatch/kmod/core/core.c:320

	} while_each_thread(g, t);

out:
	if (ret) {
		pr_err("PID: %d Comm: %.20s\n", t->pid, t->comm);
     218:	dfa30018 	ld	v1,24(sp)
     21c:	3c040000 	lui	a0,0x0
     220:	8c6504e0 	lw	a1,1248(v1)
     224:	64840000 	daddiu	a0,a0,0
     228:	0200f809 	jalr	s0
     22c:	64660688 	daddiu	a2,v1,1672
/home/loongson/kpatch/kmod/core/core.c:321
		for (i = 0; i < trace.nr_entries; i++) {
     230:	3c040000 	lui	a0,0x0
     234:	8c820000 	lw	v0,0(a0)
     238:	10400006 	beqz	v0,254 <kpatch_verify_activeness_safety+0x1bc>
     23c:	64820000 	daddiu	v0,a0,0
/home/loongson/kpatch/kmod/core/core.c:322
			if (trace.entries[i] == ULONG_MAX)
     240:	dc430008 	ld	v1,8(v0)
     244:	2402ffff 	li	v0,-1
     248:	dc650000 	ld	a1,0(v1)
     24c:	14a2006c 	bne	a1,v0,400 <kpatch_verify_activeness_safety+0x368>
     250:	3c120000 	lui	s2,0x0
     254:	2402fff0 	li	v0,-16
/home/loongson/kpatch/kmod/core/core.c:331
			       (void *)trace.entries[i]);
		}
	}

	return ret;
}
     258:	dfbf0078 	ld	ra,120(sp)
     25c:	dfbe0070 	ld	s8,112(sp)
     260:	dfb70068 	ld	s7,104(sp)
     264:	00000000 	nop
     268:	dfb60060 	ld	s6,96(sp)
     26c:	dfb50058 	ld	s5,88(sp)
     270:	dfb40050 	ld	s4,80(sp)
     274:	00000000 	nop
     278:	dfb30048 	ld	s3,72(sp)
     27c:	dfb20040 	ld	s2,64(sp)
     280:	dfb10038 	ld	s1,56(sp)
     284:	00000000 	nop
     288:	dfb00030 	ld	s0,48(sp)
     28c:	03e00008 	jr	ra
     290:	67bd0080 	daddiu	sp,sp,128
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     294:	3c050000 	lui	a1,0x0
     298:	3c030000 	lui	v1,0x0
     29c:	64620000 	daddiu	v0,v1,0
     2a0:	0040f809 	jalr	v0
     2a4:	64a50000 	daddiu	a1,a1,0
     2a8:	1040ffbd 	beqz	v0,1a0 <kpatch_verify_activeness_safety+0x108>
     2ac:	00000000 	nop
kpatch_backtrace_address_verify():
/home/loongson/kpatch/kmod/core/core.c:236
	struct kpatch_func *func;
	int i;
	int ret;

	/* check kpmod funcs */
	do_for_each_linked_func(kpmod, func) {
     2b0:	dfde0000 	ld	s8,0(s8)
     2b4:	00000000 	nop
     2b8:	17d2ffb6 	bne	s8,s2,194 <kpatch_verify_activeness_safety+0xfc>
     2bc:	dfa30028 	ld	v1,40(sp)
/home/loongson/kpatch/kmod/core/core.c:264
		if (ret)
			return ret;
	} while_for_each_linked_func();

	/* in the replace case, need to check the func hash as well */
	if (replace) {
     2c0:	10600012 	beqz	v1,30c <kpatch_verify_activeness_safety+0x274>
     2c4:	3c030000 	lui	v1,0x0
     2c8:	3c040000 	lui	a0,0x0
     2cc:	64840000 	daddiu	a0,a0,0
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
     2d0:	dc820000 	ld	v0,0(a0)
kpatch_backtrace_address_verify():
/home/loongson/kpatch/kmod/core/core.c:265
		hash_for_each_rcu(kpatch_func_hash, i, func, node) {
     2d4:	1040000a 	beqz	v0,300 <kpatch_verify_activeness_safety+0x268>
     2d8:	6442ffb8 	daddiu	v0,v0,-72
     2dc:	00000000 	nop
     2e0:	10400007 	beqz	v0,300 <kpatch_verify_activeness_safety+0x268>
     2e4:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:266
			if (func->op != KPATCH_OP_UNPATCH || func->force)
     2e8:	8c430058 	lw	v1,88(v0)
     2ec:	10700030 	beq	v1,s0,3b0 <kpatch_verify_activeness_safety+0x318>
     2f0:	00000000 	nop
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
     2f4:	dc430048 	ld	v1,72(v0)
kpatch_backtrace_address_verify():
/home/loongson/kpatch/kmod/core/core.c:265
			return ret;
	} while_for_each_linked_func();

	/* in the replace case, need to check the func hash as well */
	if (replace) {
		hash_for_each_rcu(kpatch_func_hash, i, func, node) {
     2f8:	1460fff9 	bnez	v1,2e0 <kpatch_verify_activeness_safety+0x248>
     2fc:	6462ffb8 	daddiu	v0,v1,-72
     300:	64840008 	daddiu	a0,a0,8
     304:	1493fff2 	bne	a0,s3,2d0 <kpatch_verify_activeness_safety+0x238>
     308:	3c030000 	lui	v1,0x0
kpatch_verify_activeness_safety():
/home/loongson/kpatch/kmod/core/core.c:306
			pr_err("more than %u trace entries!\n",
			       trace.max_entries);
			goto out;
		}

                for (i = 0; i < trace.nr_entries; i++) {
     30c:	8c620000 	lw	v0,0(v1)
     310:	dfa30008 	ld	v1,8(sp)
     314:	24630001 	addiu	v1,v1,1
     318:	0062102b 	sltu	v0,v1,v0
     31c:	10400009 	beqz	v0,344 <kpatch_verify_activeness_safety+0x2ac>
     320:	ffa30008 	sd	v1,8(sp)
/home/loongson/kpatch/kmod/core/core.c:307
			if (trace.entries[i] == ULONG_MAX)
     324:	dfa40008 	ld	a0,8(sp)
     328:	dea20008 	ld	v0,8(s5)
     32c:	000418f8 	dsll	v1,a0,0x3
     330:	0043102d 	daddu	v0,v0,v1
     334:	dc570000 	ld	s7,0(v0)
     338:	2402ffff 	li	v0,-1
     33c:	16e2ff92 	bne	s7,v0,188 <kpatch_verify_activeness_safety+0xf0>
     340:	dfa30010 	ld	v1,16(sp)
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
     344:	dfa30018 	ld	v1,24(sp)
     348:	dc620590 	ld	v0,1424(v1)
kpatch_verify_activeness_safety():
/home/loongson/kpatch/kmod/core/core.c:316
							      replace);
			if (ret)
				goto out;
		}

	} while_each_thread(g, t);
     34c:	dfa30020 	ld	v1,32(sp)
next_thread():
/home/loongson/linux-4.19-loongson/./include/linux/sched/signal.h:649
	return p1->signal == p2->signal;
}

static inline struct task_struct *next_thread(const struct task_struct *p)
{
	return list_entry_rcu(p->thread_group.next,
     350:	6442fa70 	daddiu	v0,v0,-1424
kpatch_verify_activeness_safety():
/home/loongson/kpatch/kmod/core/core.c:316
     354:	1062ff6a 	beq	v1,v0,100 <kpatch_verify_activeness_safety+0x68>
     358:	ffa20018 	sd	v0,24(sp)
/home/loongson/kpatch/kmod/core/core.c:298

	/* Check the stacks of all tasks. */
	do_each_thread(g, t) {

		trace.nr_entries = 0;
		save_stack_trace_tsk(t, &trace);
     35c:	dfa40018 	ld	a0,24(sp)
     360:	3c030000 	lui	v1,0x0
     364:	02a0282d 	move	a1,s5
     368:	64630000 	daddiu	v1,v1,0
/home/loongson/kpatch/kmod/core/core.c:297
	int ret = 0;

	/* Check the stacks of all tasks. */
	do_each_thread(g, t) {

		trace.nr_entries = 0;
     36c:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:298
		save_stack_trace_tsk(t, &trace);
     370:	0060f809 	jalr	v1
     374:	ac400000 	sw	zero,0(v0)
/home/loongson/kpatch/kmod/core/core.c:299
		if (trace.nr_entries >= trace.max_entries) {
     378:	3c040000 	lui	a0,0x0
     37c:	8c820000 	lw	v0,0(a0)
     380:	8ea50004 	lw	a1,4(s5)
     384:	0045182b 	sltu	v1,v0,a1
     388:	1460ff75 	bnez	v1,160 <kpatch_verify_activeness_safety+0xc8>
     38c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:301
			ret = -EBUSY;
			pr_err("more than %u trace entries!\n",
     390:	3c100000 	lui	s0,0x0
     394:	3c040000 	lui	a0,0x0
     398:	66100000 	daddiu	s0,s0,0
     39c:	0200f809 	jalr	s0
     3a0:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:303
			       trace.max_entries);
			goto out;
     3a4:	08000000 	j	0 <kpatch_get_func>
     3a8:	dfa30018 	ld	v1,24(sp)
     3ac:	00000000 	nop
kpatch_backtrace_address_verify():
/home/loongson/kpatch/kmod/core/core.c:266
	} while_for_each_linked_func();

	/* in the replace case, need to check the func hash as well */
	if (replace) {
		hash_for_each_rcu(kpatch_func_hash, i, func, node) {
			if (func->op != KPATCH_OP_UNPATCH || func->force)
     3b0:	8c430040 	lw	v1,64(v0)
     3b4:	1460ffcf 	bnez	v1,2f4 <kpatch_verify_activeness_safety+0x25c>
     3b8:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:269
				continue;

			ret = kpatch_compare_addresses(address,
     3bc:	dc450000 	ld	a1,0(v0)
     3c0:	dc430008 	ld	v1,8(v0)
kpatch_compare_addresses():
/home/loongson/kpatch/kmod/core/core.c:220
static inline int kpatch_compare_addresses(unsigned long stack_addr,
					   unsigned long func_addr,
					   unsigned long func_size,
					   const char *func_name)
{
	if (stack_addr >= func_addr && stack_addr < func_addr + func_size) {
     3c4:	02e5302b 	sltu	a2,s7,a1
     3c8:	0065182d 	daddu	v1,v1,a1
     3cc:	02e3182b 	sltu	v1,s7,v1
     3d0:	14c0ffc8 	bnez	a2,2f4 <kpatch_verify_activeness_safety+0x25c>
     3d4:	dc450028 	ld	a1,40(v0)
     3d8:	1060ffc6 	beqz	v1,2f4 <kpatch_verify_activeness_safety+0x25c>
     3dc:	00000000 	nop
kpatch_verify_activeness_safety():
/home/loongson/kpatch/kmod/core/core.c:221
		pr_err("activeness safety check failed for %s\n", func_name);
     3e0:	08000000 	j	0 <kpatch_get_func>
     3e4:	3c100000 	lui	s0,0x0
kpatch_backtrace_address_verify():
/home/loongson/kpatch/kmod/core/core.c:247
			continue;

		active_func = kpatch_get_func(func->old_addr);
		if (!active_func) {
			/* patching an unpatched func */
			func_addr = func->old_addr;
     3e8:	de860010 	ld	a2,16(s4)
/home/loongson/kpatch/kmod/core/core.c:248
			func_size = func->old_size;
     3ec:	de840018 	ld	a0,24(s4)
kpatch_verify_activeness_safety():
/home/loongson/kpatch/kmod/core/core.c:249
			func_name = func->name;
     3f0:	08000000 	j	0 <kpatch_get_func>
     3f4:	de850028 	ld	a1,40(s4)
     3f8:	08000000 	j	0 <kpatch_get_func>
     3fc:	0000102d 	move	v0,zero
/home/loongson/kpatch/kmod/core/core.c:322 (discriminator 2)

out:
	if (ret) {
		pr_err("PID: %d Comm: %.20s\n", t->pid, t->comm);
		for (i = 0; i < trace.nr_entries; i++) {
			if (trace.entries[i] == ULONG_MAX)
     400:	0000882d 	move	s1,zero
/home/loongson/kpatch/kmod/core/core.c:324 (discriminator 2)
				break;
			pr_err("  [<%pK>] %pB\n",
     404:	66520000 	daddiu	s2,s2,0
/home/loongson/kpatch/kmod/core/core.c:322 (discriminator 2)

out:
	if (ret) {
		pr_err("PID: %d Comm: %.20s\n", t->pid, t->comm);
		for (i = 0; i < trace.nr_entries; i++) {
			if (trace.entries[i] == ULONG_MAX)
     408:	2413ffff 	li	s3,-1
/home/loongson/kpatch/kmod/core/core.c:324 (discriminator 2)
				break;
			pr_err("  [<%pK>] %pB\n",
     40c:	0240202d 	move	a0,s2
     410:	00a0302d 	move	a2,a1
     414:	0200f809 	jalr	s0
     418:	26310001 	addiu	s1,s1,1
/home/loongson/kpatch/kmod/core/core.c:321 (discriminator 2)
	} while_each_thread(g, t);

out:
	if (ret) {
		pr_err("PID: %d Comm: %.20s\n", t->pid, t->comm);
		for (i = 0; i < trace.nr_entries; i++) {
     41c:	3c040000 	lui	a0,0x0
     420:	8c820000 	lw	v0,0(a0)
     424:	0222102b 	sltu	v0,s1,v0
     428:	1040ff8a 	beqz	v0,254 <kpatch_verify_activeness_safety+0x1bc>
     42c:	001118f8 	dsll	v1,s1,0x3
/home/loongson/kpatch/kmod/core/core.c:322
			if (trace.entries[i] == ULONG_MAX)
     430:	3c040000 	lui	a0,0x0
     434:	64840000 	daddiu	a0,a0,0
     438:	dc820008 	ld	v0,8(a0)
     43c:	0043102d 	daddu	v0,v0,v1
     440:	dc450000 	ld	a1,0(v0)
     444:	10b3ff84 	beq	a1,s3,258 <kpatch_verify_activeness_safety+0x1c0>
     448:	2402fff0 	li	v0,-16
     44c:	08000000 	j	0 <kpatch_get_func>
     450:	0240202d 	move	a0,s2
     454:	00000000 	nop

0000000000000458 <kpatch_apply_patch>:
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:376
		(*object->post_unpatch_callback)(object);
}

/* Called from stop_machine */
static int kpatch_apply_patch(void *data)
{
     458:	67bdff90 	daddiu	sp,sp,-112
     45c:	ffbf0068 	sd	ra,104(sp)
     460:	ffbe0060 	sd	s8,96(sp)
     464:	ffb70058 	sd	s7,88(sp)
     468:	ffb60050 	sd	s6,80(sp)
     46c:	ffb50048 	sd	s5,72(sp)
     470:	ffb40040 	sd	s4,64(sp)
     474:	ffb30038 	sd	s3,56(sp)
     478:	ffb20030 	sd	s2,48(sp)
     47c:	ffb10028 	sd	s1,40(sp)
     480:	ffb00020 	sd	s0,32(sp)
     484:	3c030000 	lui	v1,0x0
     488:	64630000 	daddiu	v1,v1,0
     48c:	03e0082d 	move	at,ra
     490:	0060f809 	jalr	v1
     494:	67ac0068 	daddiu	t0,sp,104
/home/loongson/kpatch/kmod/core/core.c:387
	int ret;
	int i;

struct hlist_node *tmp1;

	kpmod = args->kpmod;
     498:	dc910000 	ld	s1,0(a0)
/home/loongson/kpatch/kmod/core/core.c:389

	ret = kpatch_verify_activeness_safety(kpmod, args->replace);
     49c:	90850008 	lbu	a1,8(a0)
     4a0:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:376
		(*object->post_unpatch_callback)(object);
}

/* Called from stop_machine */
static int kpatch_apply_patch(void *data)
{
     4a4:	0080802d 	move	s0,a0
/home/loongson/kpatch/kmod/core/core.c:389

struct hlist_node *tmp1;

	kpmod = args->kpmod;

	ret = kpatch_verify_activeness_safety(kpmod, args->replace);
     4a8:	64420000 	daddiu	v0,v0,0
     4ac:	0040f809 	jalr	v0
     4b0:	0220202d 	move	a0,s1
/home/loongson/kpatch/kmod/core/core.c:390
	if (ret) {
     4b4:	1040001d 	beqz	v0,52c <kpatch_apply_patch+0xd4>
     4b8:	3c150000 	lui	s5,0x0
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
static inline int kpatch_state_finish(int state)
{
	int result;

	WARN_ON(state != KPATCH_STATE_SUCCESS && state != KPATCH_STATE_FAILURE);
	result = atomic_cmpxchg(&kpatch_state, KPATCH_STATE_UPDATING, state);
     4bc:	0000000f 	sync
__cmpxchg():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/cmpxchg.h:183
	case 1:
	case 2:
		return __cmpxchg_small(ptr, old, new, size);

	case 4:
		return __cmpxchg_asm("ll", "sc", (volatile u32 *)ptr,
     4c0:	3c030000 	lui	v1,0x0
     4c4:	24050003 	li	a1,3
     4c8:	24040001 	li	a0,1
     4cc:	c0660000 	ll	a2,0(v1)
     4d0:	14c40005 	bne	a2,a0,4e8 <kpatch_apply_patch+0x90>
     4d4:	00000000 	nop
     4d8:	00a0082d 	move	at,a1
     4dc:	e0610000 	sc	at,0(v1)
     4e0:	1020fffa 	beqz	at,4cc <kpatch_apply_patch+0x74>
     4e4:	00000000 	nop
     4e8:	0000000f 	sync
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
     4ec:	0000000f 	sync
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:446
	/* run any user-defined post-patch callbacks */
	list_for_each_entry(object, &kpmod->objects, list)
		post_patch_callback(object);

	return 0;
}
     4f0:	dfbf0068 	ld	ra,104(sp)
     4f4:	dfbe0060 	ld	s8,96(sp)
     4f8:	dfb70058 	ld	s7,88(sp)
     4fc:	00000000 	nop
     500:	dfb60050 	ld	s6,80(sp)
     504:	dfb50048 	ld	s5,72(sp)
     508:	dfb40040 	ld	s4,64(sp)
     50c:	00000000 	nop
     510:	dfb30038 	ld	s3,56(sp)
     514:	dfb20030 	ld	s2,48(sp)
     518:	dfb10028 	ld	s1,40(sp)
     51c:	00000000 	nop
     520:	dfb00020 	ld	s0,32(sp)
     524:	03e00008 	jr	ra
     528:	67bd0070 	daddiu	sp,sp,112
/home/loongson/kpatch/kmod/core/core.c:396
		kpatch_state_finish(KPATCH_STATE_FAILURE);
		return ret;
	}

	/* tentatively add the new funcs to the global func hash */
	do_for_each_linked_func(kpmod, func) {
     52c:	de320008 	ld	s2,8(s1)
     530:	66340008 	daddiu	s4,s1,8
     534:	12540013 	beq	s2,s4,584 <kpatch_apply_patch+0x12c>
     538:	66b50000 	daddiu	s5,s5,0
hash_64_generic():
/home/loongson/linux-4.19-loongson/./include/linux/hash.h:81 (discriminator 22)
     53c:	3c1630e4 	lui	s6,0x30e4
     540:	66d64323 	daddiu	s6,s6,17187
     544:	0016b438 	dsll	s6,s6,0x10
     548:	3c170000 	lui	s7,0x0
     54c:	66d6405b 	daddiu	s6,s6,16475
     550:	3c1e0000 	lui	s8,0x0
     554:	66f70000 	daddiu	s7,s7,0
     558:	0016b478 	dsll	s6,s6,0x11
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212 (discriminator 22)
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     55c:	de420070 	ld	v0,112(s2)
     560:	1040003a 	beqz	v0,64c <kpatch_apply_patch+0x1f4>
     564:	de440010 	ld	a0,16(s2)
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:396
		kpatch_state_finish(KPATCH_STATE_FAILURE);
		return ret;
	}

	/* tentatively add the new funcs to the global func hash */
	do_for_each_linked_func(kpmod, func) {
     568:	de420018 	ld	v0,24(s2)
     56c:	66430018 	daddiu	v1,s2,24
     570:	1462004c 	bne	v1,v0,6a4 <kpatch_apply_patch+0x24c>
     574:	6453ffd0 	daddiu	s3,v0,-48
     578:	de520000 	ld	s2,0(s2)
     57c:	1654fff7 	bne	s2,s4,55c <kpatch_apply_patch+0x104>
     580:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:406
		hash_add_rcu(kpatch_func_hash, &func->node, func->old_addr); //哈希表添加
	} while_for_each_linked_func();


	/* memory barrier between func hash add and state change */
	smp_wmb();
     584:	0000000f 	sync
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
static inline int kpatch_state_finish(int state)
{
	int result;

	WARN_ON(state != KPATCH_STATE_SUCCESS && state != KPATCH_STATE_FAILURE);
	result = atomic_cmpxchg(&kpatch_state, KPATCH_STATE_UPDATING, state);
     588:	0000000f 	sync
__cmpxchg():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/cmpxchg.h:183
     58c:	3c030000 	lui	v1,0x0
     590:	24020001 	li	v0,1
     594:	24040002 	li	a0,2
     598:	c0650000 	ll	a1,0(v1)
     59c:	14a20005 	bne	a1,v0,5b4 <kpatch_apply_patch+0x15c>
     5a0:	00000000 	nop
     5a4:	0080082d 	move	at,a0
     5a8:	e0610000 	sc	at,0(v1)
     5ac:	1020fffa 	beqz	at,598 <kpatch_apply_patch+0x140>
     5b0:	00000000 	nop
     5b4:	0000000f 	sync
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
     5b8:	00a0902d 	move	s2,a1
     5bc:	0000000f 	sync
/home/loongson/kpatch/kmod/core/core.c:187
	return result == KPATCH_STATE_UPDATING ? state : result;
     5c0:	10a20032 	beq	a1,v0,68c <kpatch_apply_patch+0x234>
     5c4:	00000000 	nop
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:413
	/*
	 * Check if any inconsistent NMI has happened while updating.  If not,
	 * move to success state.
	 */
	ret = kpatch_state_finish(KPATCH_STATE_SUCCESS);
printk("state ret: %d\n", ret);
     5c8:	3c040000 	lui	a0,0x0
     5cc:	02a0f809 	jalr	s5
     5d0:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:415

	if (ret == KPATCH_STATE_FAILURE) {
     5d4:	24020003 	li	v0,3
     5d8:	12420069 	beq	s2,v0,780 <kpatch_apply_patch+0x328>
     5dc:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:431
	/*
	 * The new patch has been applied successfully. Remove the functions
	 * provided by the replaced patches (if any) from hash, to make sure
	 * they will not be executed anymore.
	 */
	if (args->replace) {
     5e0:	92020008 	lbu	v0,8(s0)
     5e4:	1440004f 	bnez	v0,724 <kpatch_apply_patch+0x2cc>
     5e8:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:442
			hash_del_rcu(&func->node);
		}
	}

	/* run any user-defined post-patch callbacks */
	list_for_each_entry(object, &kpmod->objects, list)
     5ec:	de300008 	ld	s0,8(s1)
     5f0:	12140014 	beq	s0,s4,644 <kpatch_apply_patch+0x1ec>
     5f4:	3c110000 	lui	s1,0x0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     5f8:	66310000 	daddiu	s1,s1,0
kpatch_apply_patch():
     5fc:	08000000 	j	0 <kpatch_get_func>
     600:	3c120000 	lui	s2,0x0
/home/loongson/kpatch/kmod/core/core.c:442 (discriminator 9)
			hash_del_rcu(&func->node);
		}
	}

	/* run any user-defined post-patch callbacks */
	list_for_each_entry(object, &kpmod->objects, list)
     604:	de100000 	ld	s0,0(s0)
     608:	1214ffb9 	beq	s0,s4,4f0 <kpatch_apply_patch+0x98>
     60c:	0000102d 	move	v0,zero
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     610:	de020070 	ld	v0,112(s0)
     614:	10400016 	beqz	v0,670 <kpatch_apply_patch+0x218>
     618:	de040010 	ld	a0,16(s0)
post_patch_callback():
/home/loongson/kpatch/kmod/core/core.c:353
}

static inline void post_patch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->post_patch_callback &&
     61c:	de020050 	ld	v0,80(s0)
/home/loongson/kpatch/kmod/core/core.c:352
	return 0;
}

static inline void post_patch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
     620:	1040fff8 	beqz	v0,604 <kpatch_apply_patch+0x1ac>
     624:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:353
	    object->post_patch_callback &&
     628:	92030068 	lbu	v1,104(s0)
     62c:	1060fff5 	beqz	v1,604 <kpatch_apply_patch+0x1ac>
     630:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:355
	    object->callbacks_enabled)
		(*object->post_patch_callback)(object);
     634:	0040f809 	jalr	v0
     638:	0200202d 	move	a0,s0
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:442
			hash_del_rcu(&func->node);
		}
	}

	/* run any user-defined post-patch callbacks */
	list_for_each_entry(object, &kpmod->objects, list)
     63c:	08000000 	j	0 <kpatch_get_func>
     640:	de100000 	ld	s0,0(s0)
/home/loongson/kpatch/kmod/core/core.c:445
		post_patch_callback(object);

	return 0;
     644:	08000000 	j	0 <kpatch_get_func>
     648:	0000102d 	move	v0,zero
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     64c:	3c050000 	lui	a1,0x0
     650:	3c020000 	lui	v0,0x0
     654:	64420000 	daddiu	v0,v0,0
     658:	0040f809 	jalr	v0
     65c:	64a50000 	daddiu	a1,a1,0
     660:	1040ffc1 	beqz	v0,568 <kpatch_apply_patch+0x110>
     664:	00000000 	nop
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:396
		kpatch_state_finish(KPATCH_STATE_FAILURE);
		return ret;
	}

	/* tentatively add the new funcs to the global func hash */
	do_for_each_linked_func(kpmod, func) {
     668:	08000000 	j	0 <kpatch_get_func>
     66c:	de520000 	ld	s2,0(s2)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     670:	66420000 	daddiu	v0,s2,0
     674:	0040f809 	jalr	v0
     678:	0220282d 	move	a1,s1
     67c:	1040ffe7 	beqz	v0,61c <kpatch_apply_patch+0x1c4>
     680:	00000000 	nop
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:442
			hash_del_rcu(&func->node);
		}
	}

	/* run any user-defined post-patch callbacks */
	list_for_each_entry(object, &kpmod->objects, list)
     684:	08000000 	j	0 <kpatch_get_func>
     688:	de100000 	ld	s0,0(s0)
/home/loongson/kpatch/kmod/core/core.c:413
	/*
	 * Check if any inconsistent NMI has happened while updating.  If not,
	 * move to success state.
	 */
	ret = kpatch_state_finish(KPATCH_STATE_SUCCESS);
printk("state ret: %d\n", ret);
     68c:	3c040000 	lui	a0,0x0
     690:	64840000 	daddiu	a0,a0,0
     694:	02a0f809 	jalr	s5
     698:	24050002 	li	a1,2
/home/loongson/kpatch/kmod/core/core.c:431
	/*
	 * The new patch has been applied successfully. Remove the functions
	 * provided by the replaced patches (if any) from hash, to make sure
	 * they will not be executed anymore.
	 */
	if (args->replace) {
     69c:	08000000 	j	0 <kpatch_get_func>
     6a0:	92020008 	lbu	v0,8(s0)
/home/loongson/kpatch/kmod/core/core.c:398
	}

	/* tentatively add the new funcs to the global func hash */
	do_for_each_linked_func(kpmod, func) {

printk("kpatch func name: %s old_addr: %lx new_addr: %lx \n", func->name, func->old_addr, func->new_addr);
     6a4:	67c90000 	daddiu	a5,s8,0
hash_64_generic():
/home/loongson/linux-4.19-loongson/./include/linux/hash.h:81
     6a8:	66c883eb 	daddiu	a4,s6,-31765
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:398 (discriminator 16)
     6ac:	de650028 	ld	a1,40(s3)
     6b0:	de660010 	ld	a2,16(s3)
     6b4:	de670000 	ld	a3,0(s3)
     6b8:	0120202d 	move	a0,a5
     6bc:	ffa80008 	sd	a4,8(sp)
     6c0:	ffa30018 	sd	v1,24(sp)
     6c4:	02a0f809 	jalr	s5
     6c8:	ffa90010 	sd	a5,16(sp)
hash_64_generic():
/home/loongson/linux-4.19-loongson/./include/linux/hash.h:81 (discriminator 16)
     6cc:	dfa80008 	ld	a4,8(sp)
     6d0:	de620010 	ld	v0,16(s3)
     6d4:	0048001c 	dmult	v0,a4
     6d8:	00001012 	mflo	v0
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:401 (discriminator 16)


		hash_add_rcu(kpatch_func_hash, &func->node, func->old_addr); //哈希表添加
     6dc:	0002163e 	dsrl32	v0,v0,0x18
     6e0:	000210f8 	dsll	v0,v0,0x3
     6e4:	02e2102d 	daddu	v0,s7,v0
hlist_add_head_rcu():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:510 (discriminator 16)
 * list-traversal primitive must be guarded by rcu_read_lock().
 */
static inline void hlist_add_head_rcu(struct hlist_node *n,
					struct hlist_head *h)
{
	struct hlist_node *first = h->first;
     6e8:	dc450000 	ld	a1,0(v0)
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:513 (discriminator 16)

	n->next = first;
	n->pprev = &h->first;
     6ec:	fe620050 	sd	v0,80(s3)
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:512 (discriminator 16)
static inline void hlist_add_head_rcu(struct hlist_node *n,
					struct hlist_head *h)
{
	struct hlist_node *first = h->first;

	n->next = first;
     6f0:	fe650048 	sd	a1,72(s3)
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:514 (discriminator 16)
	n->pprev = &h->first;
	rcu_assign_pointer(hlist_first_rcu(h), n);
     6f4:	0000000f 	sync
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:401 (discriminator 16)
     6f8:	66660048 	daddiu	a2,s3,72
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220 (discriminator 16)
{
	switch (size) {
	case 1: *(volatile __u8 *)p = *(__u8 *)res; break;
	case 2: *(volatile __u16 *)p = *(__u16 *)res; break;
	case 4: *(volatile __u32 *)p = *(__u32 *)res; break;
	case 8: *(volatile __u64 *)p = *(__u64 *)res; break;
     6fc:	fc460000 	sd	a2,0(v0)
hlist_add_head_rcu():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:515 (discriminator 16)
	if (first)
     700:	dfa30018 	ld	v1,24(sp)
     704:	10a00002 	beqz	a1,710 <kpatch_apply_patch+0x2b8>
     708:	dfa90010 	ld	a5,16(sp)
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:516
		first->pprev = &n->next;
     70c:	fca60008 	sd	a2,8(a1)
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:396 (discriminator 16)
		kpatch_state_finish(KPATCH_STATE_FAILURE);
		return ret;
	}

	/* tentatively add the new funcs to the global func hash */
	do_for_each_linked_func(kpmod, func) {
     710:	de620030 	ld	v0,48(s3)
     714:	1062ff98 	beq	v1,v0,578 <kpatch_apply_patch+0x120>
     718:	6453ffd0 	daddiu	s3,v0,-48
/home/loongson/kpatch/kmod/core/core.c:398

printk("kpatch func name: %s old_addr: %lx new_addr: %lx \n", func->name, func->old_addr, func->new_addr);
     71c:	08000000 	j	0 <kpatch_get_func>
     720:	de650028 	ld	a1,40(s3)
/home/loongson/kpatch/kmod/core/core.c:432
	 * The new patch has been applied successfully. Remove the functions
	 * provided by the replaced patches (if any) from hash, to make sure
	 * they will not be executed anymore.
	 */
	if (args->replace) {
printk("args replace: %d\n", args->replace);
     724:	3c040000 	lui	a0,0x0
     728:	64840000 	daddiu	a0,a0,0
     72c:	02a0f809 	jalr	s5
     730:	24050001 	li	a1,1
     734:	3c050000 	lui	a1,0x0
     738:	0000202d 	move	a0,zero
     73c:	64a50000 	daddiu	a1,a1,0
/home/loongson/kpatch/kmod/core/core.c:435

		hash_for_each_safe(kpatch_func_hash, i, tmp, func, node) {
			if (func->op != KPATCH_OP_UNPATCH)
     740:	24080002 	li	a4,2
/home/loongson/kpatch/kmod/core/core.c:434
	 * they will not be executed anymore.
	 */
	if (args->replace) {
printk("args replace: %d\n", args->replace);

		hash_for_each_safe(kpatch_func_hash, i, tmp, func, node) {
     744:	24070800 	li	a3,2048
     748:	00a4102d 	daddu	v0,a1,a0
/home/loongson/kpatch/kmod/core/core.c:434 (discriminator 23)
     74c:	dc420000 	ld	v0,0(v0)
     750:	1040003e 	beqz	v0,84c <kpatch_apply_patch+0x3f4>
     754:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:434 (discriminator 2)
     758:	6442ffb8 	daddiu	v0,v0,-72
/home/loongson/kpatch/kmod/core/core.c:434 (discriminator 17)
     75c:	10400036 	beqz	v0,838 <kpatch_apply_patch+0x3e0>
     760:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:435 (discriminator 18)
			if (func->op != KPATCH_OP_UNPATCH)
     764:	8c460058 	lw	a2,88(v0)
     768:	10c8002a 	beq	a2,a4,814 <kpatch_apply_patch+0x3bc>
     76c:	dc430048 	ld	v1,72(v0)
/home/loongson/kpatch/kmod/core/core.c:434
	 * they will not be executed anymore.
	 */
	if (args->replace) {
printk("args replace: %d\n", args->replace);

		hash_for_each_safe(kpatch_func_hash, i, tmp, func, node) {
     770:	10600031 	beqz	v1,838 <kpatch_apply_patch+0x3e0>
     774:	6462ffb8 	daddiu	v0,v1,-72
     778:	08000000 	j	0 <kpatch_get_func>
     77c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:416
	 */
	ret = kpatch_state_finish(KPATCH_STATE_SUCCESS);
printk("state ret: %d\n", ret);

	if (ret == KPATCH_STATE_FAILURE) {
		pr_err("NMI activeness safety check failed\n");
     780:	3c040000 	lui	a0,0x0
     784:	64840000 	daddiu	a0,a0,0
     788:	02a0f809 	jalr	s5
     78c:	3c120000 	lui	s2,0x0
/home/loongson/kpatch/kmod/core/core.c:419

		/* Failed, we have to rollback patching process */
		do_for_each_linked_func(kpmod, func) {
     790:	de300008 	ld	s0,8(s1)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     794:	3c110000 	lui	s1,0x0
     798:	66310000 	daddiu	s1,s1,0
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:419 (discriminator 21)

	if (ret == KPATCH_STATE_FAILURE) {
		pr_err("NMI activeness safety check failed\n");

		/* Failed, we have to rollback patching process */
		do_for_each_linked_func(kpmod, func) {
     79c:	1214ff54 	beq	s0,s4,4f0 <kpatch_apply_patch+0x98>
     7a0:	2402fff0 	li	v0,-16
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212 (discriminator 22)
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     7a4:	de020070 	ld	v0,112(s0)
     7a8:	10400013 	beqz	v0,7f8 <kpatch_apply_patch+0x3a0>
     7ac:	de040010 	ld	a0,16(s0)
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:419

	if (ret == KPATCH_STATE_FAILURE) {
		pr_err("NMI activeness safety check failed\n");

		/* Failed, we have to rollback patching process */
		do_for_each_linked_func(kpmod, func) {
     7b0:	de020018 	ld	v0,24(s0)
     7b4:	66050018 	daddiu	a1,s0,24
     7b8:	6442ffd0 	daddiu	v0,v0,-48
/home/loongson/kpatch/kmod/core/core.c:419 (discriminator 15)
     7bc:	64430030 	daddiu	v1,v0,48
     7c0:	10650012 	beq	v1,a1,80c <kpatch_apply_patch+0x3b4>
     7c4:	00000000 	nop
     7c8:	dc440050 	ld	a0,80(v0)
hlist_del_init_rcu():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:156 (discriminator 16)
 * perfectly legal to run concurrently with the _rcu list-traversal
 * primitives, such as hlist_for_each_entry_rcu().
 */
static inline void hlist_del_init_rcu(struct hlist_node *n)
{
	if (!hlist_unhashed(n)) {
     7cc:	10800007 	beqz	a0,7ec <kpatch_apply_patch+0x394>
     7d0:	00000000 	nop
__hlist_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:676
	return !READ_ONCE(h->first);
}

static inline void __hlist_del(struct hlist_node *n)
{
	struct hlist_node *next = n->next;
     7d4:	dc430048 	ld	v1,72(v0)
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
     7d8:	fc830000 	sd	v1,0(a0)
__hlist_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:680
	struct hlist_node **pprev = n->pprev;

	WRITE_ONCE(*pprev, next);
	if (next)
     7dc:	10600002 	beqz	v1,7e8 <kpatch_apply_patch+0x390>
     7e0:	00000000 	nop
/home/loongson/linux-4.19-loongson/./include/linux/list.h:681
		next->pprev = pprev;
     7e4:	fc640008 	sd	a0,8(v1)
hlist_del_init_rcu():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:158
		__hlist_del(n);
		n->pprev = NULL;
     7e8:	fc400050 	sd	zero,80(v0)
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:419 (discriminator 16)
     7ec:	dc420030 	ld	v0,48(v0)
     7f0:	08000000 	j	0 <kpatch_get_func>
     7f4:	6442ffd0 	daddiu	v0,v0,-48
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     7f8:	66420000 	daddiu	v0,s2,0
     7fc:	0040f809 	jalr	v0
     800:	0220282d 	move	a1,s1
     804:	1040ffea 	beqz	v0,7b0 <kpatch_apply_patch+0x358>
     808:	00000000 	nop
kpatch_apply_patch():
/home/loongson/kpatch/kmod/core/core.c:419 (discriminator 17)

	if (ret == KPATCH_STATE_FAILURE) {
		pr_err("NMI activeness safety check failed\n");

		/* Failed, we have to rollback patching process */
		do_for_each_linked_func(kpmod, func) {
     80c:	08000000 	j	0 <kpatch_get_func>
     810:	de100000 	ld	s0,0(s0)
     814:	dc460050 	ld	a2,80(v0)
hlist_del_init_rcu():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:156
 * perfectly legal to run concurrently with the _rcu list-traversal
 * primitives, such as hlist_for_each_entry_rcu().
 */
static inline void hlist_del_init_rcu(struct hlist_node *n)
{
	if (!hlist_unhashed(n)) {
     818:	10c0ffd5 	beqz	a2,770 <kpatch_apply_patch+0x318>
     81c:	00000000 	nop
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
     820:	fcc30000 	sd	v1,0(a2)
__hlist_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:680
{
	struct hlist_node *next = n->next;
	struct hlist_node **pprev = n->pprev;

	WRITE_ONCE(*pprev, next);
	if (next)
     824:	10600002 	beqz	v1,830 <kpatch_apply_patch+0x3d8>
     828:	00000000 	nop
/home/loongson/linux-4.19-loongson/./include/linux/list.h:681
		next->pprev = pprev;
     82c:	fc660008 	sd	a2,8(v1)
kpatch_apply_patch():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:158
		__hlist_del(n);
		n->pprev = NULL;
     830:	08000000 	j	0 <kpatch_get_func>
     834:	fc400050 	sd	zero,80(v0)
     838:	64840008 	daddiu	a0,a0,8
/home/loongson/kpatch/kmod/core/core.c:434 (discriminator 20)
	 * they will not be executed anymore.
	 */
	if (args->replace) {
printk("args replace: %d\n", args->replace);

		hash_for_each_safe(kpatch_func_hash, i, tmp, func, node) {
     83c:	1487ffc3 	bne	a0,a3,74c <kpatch_apply_patch+0x2f4>
     840:	00a4102d 	daddu	v0,a1,a0
/home/loongson/kpatch/kmod/core/core.c:442
			hash_del_rcu(&func->node);
		}
	}

	/* run any user-defined post-patch callbacks */
	list_for_each_entry(object, &kpmod->objects, list)
     844:	08000000 	j	0 <kpatch_get_func>
     848:	de300008 	ld	s0,8(s1)
/home/loongson/kpatch/kmod/core/core.c:434
	 * they will not be executed anymore.
	 */
	if (args->replace) {
printk("args replace: %d\n", args->replace);

		hash_for_each_safe(kpatch_func_hash, i, tmp, func, node) {
     84c:	08000000 	j	0 <kpatch_get_func>
     850:	0000102d 	move	v0,zero
     854:	00000000 	nop

0000000000000858 <kpatch_ftrace_handler>:
kpatch_ftrace_handler():
/home/loongson/kpatch/kmod/core/core.c:525
 */

static void notrace
kpatch_ftrace_handler(unsigned long ip, unsigned long parent_ip,
		      struct ftrace_ops *fops, struct pt_regs *regs)
{
     858:	67bdffa0 	daddiu	sp,sp,-96
     85c:	ffb40030 	sd	s4,48(sp)
     860:	ffb30028 	sd	s3,40(sp)
     864:	0080a02d 	move	s4,a0
/home/loongson/kpatch/kmod/core/core.c:532
	int state;
	
	//MIPS
	unsigned long insn_offset = 0;

printk("kpatch_ftrace_handler\n");
     868:	3c130000 	lui	s3,0x0
     86c:	3c040000 	lui	a0,0x0
     870:	66730000 	daddiu	s3,s3,0
     874:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:525
 */

static void notrace
kpatch_ftrace_handler(unsigned long ip, unsigned long parent_ip,
		      struct ftrace_ops *fops, struct pt_regs *regs)
{
     878:	ffbf0058 	sd	ra,88(sp)
     87c:	ffbe0050 	sd	s8,80(sp)
     880:	ffb70048 	sd	s7,72(sp)
     884:	ffb60040 	sd	s6,64(sp)
     888:	ffb50038 	sd	s5,56(sp)
     88c:	00e0b02d 	move	s6,a3
     890:	ffb20020 	sd	s2,32(sp)
     894:	ffb10018 	sd	s1,24(sp)
/home/loongson/kpatch/kmod/core/core.c:532
	int state;
	
	//MIPS
	unsigned long insn_offset = 0;

printk("kpatch_ftrace_handler\n");
     898:	0260f809 	jalr	s3
     89c:	ffb00010 	sd	s0,16(sp)
/home/loongson/kpatch/kmod/core/core.c:533
printk("ip: %lx\n", ip);
     8a0:	3c040000 	lui	a0,0x0
     8a4:	64840000 	daddiu	a0,a0,0
     8a8:	0280282d 	move	a1,s4
     8ac:	0260f809 	jalr	s3
     8b0:	3c1e0000 	lui	s8,0x0
offset_of_insn_mcount():
/home/loongson/kpatch/kmod/core/core.c:498
	struct kpatch_object *object;
	struct kpatch_insn *insn;
	unsigned long insn_offset;

	//遍历各个模块中所记录的指令偏移量，进行查找
	list_for_each_entry(kpmod, &kpmod_list, list) {
     8b4:	dfc20000 	ld	v0,0(s8)
     8b8:	67de0000 	daddiu	s8,s8,0
     8bc:	105e0012 	beq	v0,s8,908 <kpatch_ftrace_handler+0xb0>
     8c0:	6457ffe0 	daddiu	s7,v0,-32
     8c4:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:501
		list_for_each_entry(object, &kpmod->objects, list) {
			list_for_each_entry(insn, &object->insns, list) {
printk("old_addr: %lx offset: %lx\n", insn->old_addr, insn->offset);
     8c8:	64470000 	daddiu	a3,v0,0
     8cc:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:499
	struct kpatch_insn *insn;
	unsigned long insn_offset;

	//遍历各个模块中所记录的指令偏移量，进行查找
	list_for_each_entry(kpmod, &kpmod_list, list) {
		list_for_each_entry(object, &kpmod->objects, list) {
     8d0:	def00008 	ld	s0,8(s7)
     8d4:	66f20008 	daddiu	s2,s7,8
     8d8:	12120008 	beq	s0,s2,8fc <kpatch_ftrace_handler+0xa4>
     8dc:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:500
			list_for_each_entry(insn, &object->insns, list) {
     8e0:	de020038 	ld	v0,56(s0)
     8e4:	66110038 	daddiu	s1,s0,56
     8e8:	16220069 	bne	s1,v0,a90 <kpatch_ftrace_handler+0x238>
     8ec:	6443ffe8 	daddiu	v1,v0,-24
/home/loongson/kpatch/kmod/core/core.c:499
	struct kpatch_insn *insn;
	unsigned long insn_offset;

	//遍历各个模块中所记录的指令偏移量，进行查找
	list_for_each_entry(kpmod, &kpmod_list, list) {
		list_for_each_entry(object, &kpmod->objects, list) {
     8f0:	de100000 	ld	s0,0(s0)
     8f4:	1612fffa 	bne	s0,s2,8e0 <kpatch_ftrace_handler+0x88>
     8f8:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:498
	struct kpatch_object *object;
	struct kpatch_insn *insn;
	unsigned long insn_offset;

	//遍历各个模块中所记录的指令偏移量，进行查找
	list_for_each_entry(kpmod, &kpmod_list, list) {
     8fc:	dee20020 	ld	v0,32(s7)
     900:	145efff3 	bne	v0,s8,8d0 <kpatch_ftrace_handler+0x78>
     904:	6457ffe0 	daddiu	s7,v0,-32
/home/loongson/kpatch/kmod/core/core.c:509
					break;
				}
			}
		}
	}
printk("insn_offset: %lx", insn_offset);
     908:	3c040000 	lui	a0,0x0
     90c:	02a0282d 	move	a1,s5
     910:	64840000 	daddiu	a0,a0,0
     914:	0260f809 	jalr	s3
     918:	0295a02f 	dsubu	s4,s4,s5
kpatch_ftrace_handler():
/home/loongson/kpatch/kmod/core/core.c:540
	//MIPS，获取指令偏移量
	insn_offset = offset_of_insn_mcount(ip); 

	//MIPS，ftrace注册的ip为函数入口地址，该函数由内核回调，提供的ip为jal ftrace_caller指令的地址
	ip -= insn_offset;
printk("ip: %lx offset: %lx\n", ip, insn_offset);
     91c:	3c040000 	lui	a0,0x0
     920:	64840000 	daddiu	a0,a0,0
     924:	0280282d 	move	a1,s4
     928:	0260f809 	jalr	s3
     92c:	02a0302d 	move	a2,s5
__preempt_count_add():
/home/loongson/linux-4.19-loongson/./include/asm-generic/preempt.h:54
 * The various preempt_count add/sub methods
 */

static __always_inline void __preempt_count_add(int val)
{
	*preempt_count_ptr() += val;
     930:	8f83001c 	lw	v1,28(gp)
     934:	24630001 	addiu	v1,v1,1
     938:	af83001c 	sw	v1,28(gp)
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
})

static __always_inline
void __read_once_size(const volatile void *p, void *res, int size)
{
	__READ_ONCE_SIZE;
     93c:	8f82001c 	lw	v0,28(gp)
kpatch_ftrace_handler():
/home/loongson/kpatch/kmod/core/core.c:544

	preempt_disable_notrace();

	if (likely(!in_nmi()))
     940:	7c420500 	ext	v0,v0,0x14,0x1
     944:	1440002c 	bnez	v0,9f8 <kpatch_ftrace_handler+0x1a0>
     948:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:545
		func = kpatch_get_func(ip);
     94c:	64420000 	daddiu	v0,v0,0
     950:	0040f809 	jalr	v0
     954:	0280202d 	move	a0,s4
     958:	0040802d 	move	s0,v0
/home/loongson/kpatch/kmod/core/core.c:576
				func = kpatch_get_prev_func(func, ip);
		}
	}

done:
	if (func) 
     95c:	16000044 	bnez	s0,a70 <kpatch_ftrace_handler+0x218>
     960:	00000000 	nop
__preempt_count_dec_and_test():
/home/loongson/linux-4.19-loongson/./include/asm-generic/preempt.h:69
	/*
	 * Because of load-store architectures cannot do per-cpu atomic
	 * operations; we cannot use PREEMPT_NEED_RESCHED because it might get
	 * lost.
	 */
	return !--*preempt_count_ptr() && tif_need_resched();
     964:	8f82001c 	lw	v0,28(gp)
     968:	2442ffff 	addiu	v0,v0,-1
     96c:	af82001c 	sw	v0,28(gp)
     970:	14400014 	bnez	v0,9c4 <kpatch_ftrace_handler+0x16c>
     974:	dfbf0058 	ld	ra,88(sp)
test_bit():
/home/loongson/linux-4.19-loongson/./include/asm-generic/bitops/non-atomic.h:106
 * @nr: bit number to test
 * @addr: Address to start counting from
 */
static inline int test_bit(int nr, const volatile unsigned long *addr)
{
	return 1UL & (addr[BIT_WORD(nr)] >> (nr & (BITS_PER_LONG-1)));
     978:	df820008 	ld	v0,8(gp)
     97c:	7c420083 	dext	v0,v0,0x2,0x1
__preempt_count_dec_and_test():
/home/loongson/linux-4.19-loongson/./include/asm-generic/preempt.h:69
     980:	10400011 	beqz	v0,9c8 <kpatch_ftrace_handler+0x170>
     984:	dfbe0050 	ld	s8,80(sp)
kpatch_ftrace_handler():
/home/loongson/kpatch/kmod/core/core.c:583
printk("find func: %s %lx\n", func->name, func->new_addr);
		regs->regs[0] = func->new_addr;
		//regs->ip = func->new_addr + MCOUNT_INSN_SIZE;
}
	preempt_enable_notrace();
}
     988:	dfbf0058 	ld	ra,88(sp)
     98c:	dfb70048 	ld	s7,72(sp)
     990:	dfb60040 	ld	s6,64(sp)
     994:	00000000 	nop
     998:	dfb50038 	ld	s5,56(sp)
     99c:	dfb40030 	ld	s4,48(sp)
     9a0:	dfb30028 	ld	s3,40(sp)
     9a4:	00000000 	nop
     9a8:	dfb20020 	ld	s2,32(sp)
     9ac:	dfb10018 	ld	s1,24(sp)
     9b0:	dfb00010 	ld	s0,16(sp)
/home/loongson/kpatch/kmod/core/core.c:582
{
printk("find func: %s %lx\n", func->name, func->new_addr);
		regs->regs[0] = func->new_addr;
		//regs->ip = func->new_addr + MCOUNT_INSN_SIZE;
}
	preempt_enable_notrace();
     9b4:	3c190000 	lui	t9,0x0
     9b8:	67390000 	daddiu	t9,t9,0
     9bc:	03200008 	jr	t9
     9c0:	67bd0060 	daddiu	sp,sp,96
/home/loongson/kpatch/kmod/core/core.c:583
}
     9c4:	dfbe0050 	ld	s8,80(sp)
     9c8:	dfb70048 	ld	s7,72(sp)
     9cc:	dfb60040 	ld	s6,64(sp)
     9d0:	00000000 	nop
     9d4:	dfb50038 	ld	s5,56(sp)
     9d8:	dfb40030 	ld	s4,48(sp)
     9dc:	dfb30028 	ld	s3,40(sp)
     9e0:	00000000 	nop
     9e4:	dfb20020 	ld	s2,32(sp)
     9e8:	dfb10018 	ld	s1,24(sp)
     9ec:	dfb00010 	ld	s0,16(sp)
     9f0:	03e00008 	jr	ra
     9f4:	67bd0060 	daddiu	sp,sp,96
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
static inline int kpatch_state_finish(int state)
{
	int result;

	WARN_ON(state != KPATCH_STATE_SUCCESS && state != KPATCH_STATE_FAILURE);
	result = atomic_cmpxchg(&kpatch_state, KPATCH_STATE_UPDATING, state);
     9f8:	0000000f 	sync
__cmpxchg():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/cmpxchg.h:183
     9fc:	3c020000 	lui	v0,0x0
     a00:	24120001 	li	s2,1
     a04:	24110003 	li	s1,3
     a08:	c0430000 	ll	v1,0(v0)
     a0c:	14720005 	bne	v1,s2,a24 <kpatch_ftrace_handler+0x1cc>
     a10:	00000000 	nop
     a14:	0220082d 	move	at,s1
     a18:	e0410000 	sc	at,0(v0)
     a1c:	1020fffa 	beqz	at,a08 <kpatch_ftrace_handler+0x1b0>
     a20:	00000000 	nop
     a24:	0000000f 	sync
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
     a28:	0000000f 	sync
/home/loongson/kpatch/kmod/core/core.c:187
	return result == KPATCH_STATE_UPDATING ? state : result;
     a2c:	38620001 	xori	v0,v1,0x1
     a30:	0062880b 	movn	s1,v1,v0
kpatch_ftrace_handler():
/home/loongson/kpatch/kmod/core/core.c:551
	else {
		/* Checking for NMI inconsistency */
		state = kpatch_state_finish(KPATCH_STATE_FAILURE);

		/* no memory reordering between state and func hash read */
		smp_rmb();
     a34:	0000000f 	sync
/home/loongson/kpatch/kmod/core/core.c:553

		func = kpatch_get_func(ip);
     a38:	3c020000 	lui	v0,0x0
     a3c:	64420000 	daddiu	v0,v0,0
     a40:	0040f809 	jalr	v0
     a44:	0280202d 	move	a0,s4
/home/loongson/kpatch/kmod/core/core.c:555

		if (likely(state == KPATCH_STATE_IDLE))
     a48:	1220ffc4 	beqz	s1,95c <kpatch_ftrace_handler+0x104>
     a4c:	0040802d 	move	s0,v0
/home/loongson/kpatch/kmod/core/core.c:558
			goto done;

		if (state == KPATCH_STATE_SUCCESS) {
     a50:	24020002 	li	v0,2
     a54:	12220030 	beq	s1,v0,b18 <kpatch_ftrace_handler+0x2c0>
     a58:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:570
		} else {
			/*
			 * Patching failed.  If the function was being patched,
			 * roll back to the previous version.
			 */
			if (func && func->op == KPATCH_OP_PATCH)
     a5c:	1200ffc1 	beqz	s0,964 <kpatch_ftrace_handler+0x10c>
     a60:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:570 (discriminator 1)
     a64:	8e020058 	lw	v0,88(s0)
     a68:	1052001d 	beq	v0,s2,ae0 <kpatch_ftrace_handler+0x288>
     a6c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:578
	}

done:
	if (func) 
{
printk("find func: %s %lx\n", func->name, func->new_addr);
     a70:	de050028 	ld	a1,40(s0)
     a74:	de060000 	ld	a2,0(s0)
     a78:	3c040000 	lui	a0,0x0
     a7c:	0260f809 	jalr	s3
     a80:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:579
		regs->regs[0] = func->new_addr;
     a84:	de020000 	ld	v0,0(s0)
     a88:	08000000 	j	0 <kpatch_get_func>
     a8c:	fec20000 	sd	v0,0(s6)
offset_of_insn_mcount():
/home/loongson/kpatch/kmod/core/core.c:501

	//遍历各个模块中所记录的指令偏移量，进行查找
	list_for_each_entry(kpmod, &kpmod_list, list) {
		list_for_each_entry(object, &kpmod->objects, list) {
			list_for_each_entry(insn, &object->insns, list) {
printk("old_addr: %lx offset: %lx\n", insn->old_addr, insn->offset);
     a90:	dc650000 	ld	a1,0(v1)
     a94:	00000000 	nop
     a98:	dc660010 	ld	a2,16(v1)
     a9c:	00e0202d 	move	a0,a3
     aa0:	ffa30008 	sd	v1,8(sp)
     aa4:	0260f809 	jalr	s3
     aa8:	ffa70000 	sd	a3,0(sp)
/home/loongson/kpatch/kmod/core/core.c:502
				if (ip == (insn->old_addr + insn->offset)) {
     aac:	dfa30008 	ld	v1,8(sp)
     ab0:	dc640010 	ld	a0,16(v1)
     ab4:	dc620000 	ld	v0,0(v1)
     ab8:	0082102d 	daddu	v0,a0,v0
     abc:	12820006 	beq	s4,v0,ad8 <kpatch_ftrace_handler+0x280>
/home/loongson/kpatch/kmod/core/core.c:500
	unsigned long insn_offset;

	//遍历各个模块中所记录的指令偏移量，进行查找
	list_for_each_entry(kpmod, &kpmod_list, list) {
		list_for_each_entry(object, &kpmod->objects, list) {
			list_for_each_entry(insn, &object->insns, list) {
     ac0:	dfa70000 	ld	a3,0(sp)
     ac4:	dc620018 	ld	v0,24(v1)
     ac8:	1222ff89 	beq	s1,v0,8f0 <kpatch_ftrace_handler+0x98>
     acc:	6443ffe8 	daddiu	v1,v0,-24
kpatch_ftrace_handler():
/home/loongson/kpatch/kmod/core/core.c:501
printk("old_addr: %lx offset: %lx\n", insn->old_addr, insn->offset);
     ad0:	08000000 	j	0 <kpatch_get_func>
     ad4:	dc650000 	ld	a1,0(v1)
/home/loongson/kpatch/kmod/core/core.c:503
				if (ip == (insn->old_addr + insn->offset)) {
					insn_offset = insn->offset;
     ad8:	08000000 	j	0 <kpatch_get_func>
     adc:	0080a82d 	move	s5,a0
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
     ae0:	de100048 	ld	s0,72(s0)
kpatch_get_prev_func():
/home/loongson/kpatch/kmod/core/core.c:204
}

static struct kpatch_func *kpatch_get_prev_func(struct kpatch_func *f,
						unsigned long ip)
{
	hlist_for_each_entry_continue_rcu(f, node)
     ae4:	1200001f 	beqz	s0,b64 <kpatch_ftrace_handler+0x30c>
     ae8:	00000000 	nop
     aec:	6610ffb8 	daddiu	s0,s0,-72
     af0:	1200ff9c 	beqz	s0,964 <kpatch_ftrace_handler+0x10c>
     af4:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:205
		if (f->old_addr == ip)
     af8:	de020010 	ld	v0,16(s0)
     afc:	1282ffdc 	beq	s4,v0,a70 <kpatch_ftrace_handler+0x218>
     b00:	00000000 	nop
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
     b04:	de100048 	ld	s0,72(s0)
kpatch_get_prev_func():
/home/loongson/kpatch/kmod/core/core.c:204
}

static struct kpatch_func *kpatch_get_prev_func(struct kpatch_func *f,
						unsigned long ip)
{
	hlist_for_each_entry_continue_rcu(f, node)
     b08:	1200ff96 	beqz	s0,964 <kpatch_ftrace_handler+0x10c>
     b0c:	00000000 	nop
kpatch_ftrace_handler():
     b10:	08000000 	j	0 <kpatch_get_func>
     b14:	6610ffb8 	daddiu	s0,s0,-72
/home/loongson/kpatch/kmod/core/core.c:563
		if (state == KPATCH_STATE_SUCCESS) {
			/*
			 * Patching succeeded.  If the function was being
			 * unpatched, roll back to the previous version.
			 */
			if (func && func->op == KPATCH_OP_UNPATCH)
     b18:	1200ff92 	beqz	s0,964 <kpatch_ftrace_handler+0x10c>
     b1c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:563 (discriminator 1)
     b20:	8e030058 	lw	v1,88(s0)
     b24:	1462ffd2 	bne	v1,v0,a70 <kpatch_ftrace_handler+0x218>
     b28:	00000000 	nop
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
     b2c:	de100048 	ld	s0,72(s0)
kpatch_get_prev_func():
/home/loongson/kpatch/kmod/core/core.c:204
}

static struct kpatch_func *kpatch_get_prev_func(struct kpatch_func *f,
						unsigned long ip)
{
	hlist_for_each_entry_continue_rcu(f, node)
     b30:	1200000e 	beqz	s0,b6c <kpatch_ftrace_handler+0x314>
     b34:	00000000 	nop
     b38:	6610ffb8 	daddiu	s0,s0,-72
     b3c:	1200ff89 	beqz	s0,964 <kpatch_ftrace_handler+0x10c>
     b40:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:205
		if (f->old_addr == ip)
     b44:	de020010 	ld	v0,16(s0)
     b48:	1282ffc9 	beq	s4,v0,a70 <kpatch_ftrace_handler+0x218>
     b4c:	00000000 	nop
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
     b50:	de100048 	ld	s0,72(s0)
kpatch_get_prev_func():
/home/loongson/kpatch/kmod/core/core.c:204
}

static struct kpatch_func *kpatch_get_prev_func(struct kpatch_func *f,
						unsigned long ip)
{
	hlist_for_each_entry_continue_rcu(f, node)
     b54:	1200ff83 	beqz	s0,964 <kpatch_ftrace_handler+0x10c>
     b58:	00000000 	nop
kpatch_ftrace_handler():
     b5c:	08000000 	j	0 <kpatch_get_func>
     b60:	6610ffb8 	daddiu	s0,s0,-72
     b64:	08000000 	j	0 <kpatch_get_func>
     b68:	0000802d 	move	s0,zero
     b6c:	08000000 	j	0 <kpatch_get_func>
     b70:	0000802d 	move	s0,zero
     b74:	00000000 	nop

0000000000000b78 <kpatch_kallsyms_callback>:
kpatch_kallsyms_callback():
/home/loongson/kpatch/kmod/core/core.c:665
}

static int kpatch_kallsyms_callback(void *data, const char *name,
					 struct module *mod,
					 unsigned long addr)
{
     b78:	67bdffd0 	daddiu	sp,sp,-48
     b7c:	ffbf0028 	sd	ra,40(sp)
     b80:	ffb40020 	sd	s4,32(sp)
     b84:	ffb30018 	sd	s3,24(sp)
     b88:	ffb20010 	sd	s2,16(sp)
     b8c:	ffb10008 	sd	s1,8(sp)
     b90:	ffb00000 	sd	s0,0(sp)
     b94:	3c030000 	lui	v1,0x0
     b98:	64630000 	daddiu	v1,v1,0
     b9c:	03e0082d 	move	at,ra
     ba0:	0060f809 	jalr	v1
     ba4:	67ac0028 	daddiu	t0,sp,40
/home/loongson/kpatch/kmod/core/core.c:667
	struct kpatch_kallsyms_args *args = data;
	bool vmlinux = !strcmp(args->objname, "vmlinux");
     ba8:	3c100000 	lui	s0,0x0
/home/loongson/kpatch/kmod/core/core.c:665
}

static int kpatch_kallsyms_callback(void *data, const char *name,
					 struct module *mod,
					 unsigned long addr)
{
     bac:	0080882d 	move	s1,a0
     bb0:	00a0982d 	move	s3,a1
/home/loongson/kpatch/kmod/core/core.c:667
	struct kpatch_kallsyms_args *args = data;
	bool vmlinux = !strcmp(args->objname, "vmlinux");
     bb4:	dc840000 	ld	a0,0(a0)
     bb8:	3c050000 	lui	a1,0x0
     bbc:	66100000 	daddiu	s0,s0,0
     bc0:	64a50000 	daddiu	a1,a1,0
/home/loongson/kpatch/kmod/core/core.c:665
}

static int kpatch_kallsyms_callback(void *data, const char *name,
					 struct module *mod,
					 unsigned long addr)
{
     bc4:	00c0902d 	move	s2,a2
/home/loongson/kpatch/kmod/core/core.c:667
	struct kpatch_kallsyms_args *args = data;
	bool vmlinux = !strcmp(args->objname, "vmlinux");
     bc8:	0200f809 	jalr	s0
     bcc:	00e0a02d 	move	s4,a3
/home/loongson/kpatch/kmod/core/core.c:669

	if ((mod && vmlinux) || (!mod && !vmlinux))
     bd0:	1240001f 	beqz	s2,c50 <kpatch_kallsyms_callback+0xd8>
     bd4:	2c420001 	sltiu	v0,v0,1
/home/loongson/kpatch/kmod/core/core.c:669 (discriminator 1)
     bd8:	1440001f 	bnez	v0,c58 <kpatch_kallsyms_callback+0xe0>
     bdc:	dfbf0028 	ld	ra,40(sp)
/home/loongson/kpatch/kmod/core/core.c:672
		return 0;

	if (strcmp(args->name, name))
     be0:	de240008 	ld	a0,8(s1)
     be4:	0200f809 	jalr	s0
     be8:	0260282d 	move	a1,s3
     bec:	1440001a 	bnez	v0,c58 <kpatch_kallsyms_callback+0xe0>
     bf0:	dfbf0028 	ld	ra,40(sp)
/home/loongson/kpatch/kmod/core/core.c:675 (discriminator 1)
		return 0;

	if (!vmlinux && strcmp(args->objname, mod->name))
     bf4:	de240000 	ld	a0,0(s1)
     bf8:	0200f809 	jalr	s0
     bfc:	66450018 	daddiu	a1,s2,24
     c00:	14400015 	bnez	v0,c58 <kpatch_kallsyms_callback+0xe0>
     c04:	dfbf0028 	ld	ra,40(sp)
/home/loongson/kpatch/kmod/core/core.c:679
		return 0;

	args->addr = addr;
	args->count++;
     c08:	de230018 	ld	v1,24(s1)
/home/loongson/kpatch/kmod/core/core.c:685

	/*
	 * Finish the search when the symbol is found for the desired position
	 * or the position is not defined for a non-unique symbol.
	 */
	if ((args->pos && (args->count == args->pos)) ||
     c0c:	de240020 	ld	a0,32(s1)
/home/loongson/kpatch/kmod/core/core.c:679

	if (!vmlinux && strcmp(args->objname, mod->name))
		return 0;

	args->addr = addr;
	args->count++;
     c10:	64620001 	daddiu	v0,v1,1
/home/loongson/kpatch/kmod/core/core.c:678
		return 0;

	if (!vmlinux && strcmp(args->objname, mod->name))
		return 0;

	args->addr = addr;
     c14:	fe340010 	sd	s4,16(s1)
/home/loongson/kpatch/kmod/core/core.c:685

	/*
	 * Finish the search when the symbol is found for the desired position
	 * or the position is not defined for a non-unique symbol.
	 */
	if ((args->pos && (args->count == args->pos)) ||
     c18:	10800021 	beqz	a0,ca0 <kpatch_kallsyms_callback+0x128>
     c1c:	fe220018 	sd	v0,24(s1)
/home/loongson/kpatch/kmod/core/core.c:691
	    (!args->pos && (args->count > 1))) {
		return 1;
	}

	return 0;
}
     c20:	dfbf0028 	ld	ra,40(sp)
/home/loongson/kpatch/kmod/core/core.c:685

	/*
	 * Finish the search when the symbol is found for the desired position
	 * or the position is not defined for a non-unique symbol.
	 */
	if ((args->pos && (args->count == args->pos)) ||
     c24:	00441026 	xor	v0,v0,a0
/home/loongson/kpatch/kmod/core/core.c:691
	    (!args->pos && (args->count > 1))) {
		return 1;
	}

	return 0;
}
     c28:	dfb40020 	ld	s4,32(sp)
     c2c:	dfb30018 	ld	s3,24(sp)
     c30:	dfb20010 	ld	s2,16(sp)
     c34:	00000000 	nop
     c38:	dfb10008 	ld	s1,8(sp)
     c3c:	dfb00000 	ld	s0,0(sp)
/home/loongson/kpatch/kmod/core/core.c:670
{
	struct kpatch_kallsyms_args *args = data;
	bool vmlinux = !strcmp(args->objname, "vmlinux");

	if ((mod && vmlinux) || (!mod && !vmlinux))
		return 0;
     c40:	2c420001 	sltiu	v0,v0,1
/home/loongson/kpatch/kmod/core/core.c:691
	    (!args->pos && (args->count > 1))) {
		return 1;
	}

	return 0;
}
     c44:	03e00008 	jr	ra
     c48:	67bd0030 	daddiu	sp,sp,48
     c4c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:669 (discriminator 4)
					 unsigned long addr)
{
	struct kpatch_kallsyms_args *args = data;
	bool vmlinux = !strcmp(args->objname, "vmlinux");

	if ((mod && vmlinux) || (!mod && !vmlinux))
     c50:	1440000b 	bnez	v0,c80 <kpatch_kallsyms_callback+0x108>
     c54:	dfbf0028 	ld	ra,40(sp)
/home/loongson/kpatch/kmod/core/core.c:691
	    (!args->pos && (args->count > 1))) {
		return 1;
	}

	return 0;
}
     c58:	dfb40020 	ld	s4,32(sp)
     c5c:	00000000 	nop
     c60:	dfb30018 	ld	s3,24(sp)
     c64:	dfb20010 	ld	s2,16(sp)
     c68:	dfb10008 	ld	s1,8(sp)
     c6c:	00000000 	nop
     c70:	dfb00000 	ld	s0,0(sp)
/home/loongson/kpatch/kmod/core/core.c:670
{
	struct kpatch_kallsyms_args *args = data;
	bool vmlinux = !strcmp(args->objname, "vmlinux");

	if ((mod && vmlinux) || (!mod && !vmlinux))
		return 0;
     c74:	0000102d 	move	v0,zero
/home/loongson/kpatch/kmod/core/core.c:691
	    (!args->pos && (args->count > 1))) {
		return 1;
	}

	return 0;
}
     c78:	03e00008 	jr	ra
     c7c:	67bd0030 	daddiu	sp,sp,48
/home/loongson/kpatch/kmod/core/core.c:672
	bool vmlinux = !strcmp(args->objname, "vmlinux");

	if ((mod && vmlinux) || (!mod && !vmlinux))
		return 0;

	if (strcmp(args->name, name))
     c80:	de240008 	ld	a0,8(s1)
     c84:	0200f809 	jalr	s0
     c88:	0260282d 	move	a1,s3
     c8c:	1040ffde 	beqz	v0,c08 <kpatch_kallsyms_callback+0x90>
     c90:	dfbf0028 	ld	ra,40(sp)
/home/loongson/kpatch/kmod/core/core.c:691
	    (!args->pos && (args->count > 1))) {
		return 1;
	}

	return 0;
}
     c94:	08000000 	j	0 <kpatch_get_func>
     c98:	dfb40020 	ld	s4,32(sp)
     c9c:	00000000 	nop
     ca0:	dfbf0028 	ld	ra,40(sp)
/home/loongson/kpatch/kmod/core/core.c:686
	/*
	 * Finish the search when the symbol is found for the desired position
	 * or the position is not defined for a non-unique symbol.
	 */
	if ((args->pos && (args->count == args->pos)) ||
	    (!args->pos && (args->count > 1))) {
     ca4:	2c420002 	sltiu	v0,v0,2
/home/loongson/kpatch/kmod/core/core.c:691
		return 1;
	}

	return 0;
}
     ca8:	dfb40020 	ld	s4,32(sp)
     cac:	dfb30018 	ld	s3,24(sp)
     cb0:	dfb20010 	ld	s2,16(sp)
     cb4:	00000000 	nop
     cb8:	dfb10008 	ld	s1,8(sp)
     cbc:	dfb00000 	ld	s0,0(sp)
/home/loongson/kpatch/kmod/core/core.c:670
{
	struct kpatch_kallsyms_args *args = data;
	bool vmlinux = !strcmp(args->objname, "vmlinux");

	if ((mod && vmlinux) || (!mod && !vmlinux))
		return 0;
     cc0:	2c420001 	sltiu	v0,v0,1
/home/loongson/kpatch/kmod/core/core.c:691
	    (!args->pos && (args->count > 1))) {
		return 1;
	}

	return 0;
}
     cc4:	03e00008 	jr	ra
     cc8:	67bd0030 	daddiu	sp,sp,48
     ccc:	00000000 	nop

0000000000000cd0 <kpatch_remove_patch>:
kpatch_remove_patch():
/home/loongson/kpatch/kmod/core/core.c:450
	return 0;
}

/* Called from stop_machine */
static int kpatch_remove_patch(void *data)
{
     cd0:	67bdffd0 	daddiu	sp,sp,-48
     cd4:	ffbf0028 	sd	ra,40(sp)
     cd8:	ffb40020 	sd	s4,32(sp)
     cdc:	ffb30018 	sd	s3,24(sp)
     ce0:	ffb20010 	sd	s2,16(sp)
     ce4:	ffb10008 	sd	s1,8(sp)
     ce8:	ffb00000 	sd	s0,0(sp)
     cec:	3c030000 	lui	v1,0x0
     cf0:	64630000 	daddiu	v1,v1,0
     cf4:	03e0082d 	move	at,ra
     cf8:	0060f809 	jalr	v1
     cfc:	67ac0028 	daddiu	t0,sp,40
/home/loongson/kpatch/kmod/core/core.c:451
printk("kpatch_remove_patch\n");
     d00:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:450
	return 0;
}

/* Called from stop_machine */
static int kpatch_remove_patch(void *data)
{
     d04:	0080902d 	move	s2,a0
/home/loongson/kpatch/kmod/core/core.c:451
printk("kpatch_remove_patch\n");
     d08:	3c040000 	lui	a0,0x0
     d0c:	64420000 	daddiu	v0,v0,0
     d10:	0040f809 	jalr	v0
     d14:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:457
	struct kpatch_module *kpmod = data;
	struct kpatch_func *func;
	struct kpatch_object *object;
	int ret;

	ret = kpatch_verify_activeness_safety(kpmod, false);
     d18:	3c020000 	lui	v0,0x0
     d1c:	0240202d 	move	a0,s2
     d20:	64420000 	daddiu	v0,v0,0
     d24:	0040f809 	jalr	v0
     d28:	0000282d 	move	a1,zero
/home/loongson/kpatch/kmod/core/core.c:458
	if (ret) {
     d2c:	1440007a 	bnez	v0,f18 <kpatch_remove_patch+0x248>
     d30:	66510008 	daddiu	s1,s2,8
/home/loongson/kpatch/kmod/core/core.c:464
		kpatch_state_finish(KPATCH_STATE_FAILURE);
		return ret;
	}

	/* run any user-defined pre-unpatch callbacks */
	list_for_each_entry(object, &kpmod->objects, list)
     d34:	de500008 	ld	s0,8(s2)
     d38:	12110017 	beq	s0,s1,d98 <kpatch_remove_patch+0xc8>
     d3c:	3c020000 	lui	v0,0x0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     d40:	64530000 	daddiu	s3,v0,0
kpatch_remove_patch():
     d44:	08000000 	j	0 <kpatch_get_func>
     d48:	3c140000 	lui	s4,0x0
     d4c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:464
		kpatch_state_finish(KPATCH_STATE_FAILURE);
		return ret;
	}

	/* run any user-defined pre-unpatch callbacks */
	list_for_each_entry(object, &kpmod->objects, list)
     d50:	de100000 	ld	s0,0(s0)
     d54:	00000000 	nop
     d58:	1211000f 	beq	s0,s1,d98 <kpatch_remove_patch+0xc8>
     d5c:	00000000 	nop
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     d60:	de020070 	ld	v0,112(s0)
     d64:	10400064 	beqz	v0,ef8 <kpatch_remove_patch+0x228>
     d68:	de040010 	ld	a0,16(s0)
pre_unpatch_callback():
/home/loongson/kpatch/kmod/core/core.c:361
}

static inline void pre_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->pre_unpatch_callback &&
     d6c:	de020058 	ld	v0,88(s0)
/home/loongson/kpatch/kmod/core/core.c:360
		(*object->post_patch_callback)(object);
}

static inline void pre_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
     d70:	1040fff7 	beqz	v0,d50 <kpatch_remove_patch+0x80>
     d74:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:361
	    object->pre_unpatch_callback &&
     d78:	92030068 	lbu	v1,104(s0)
     d7c:	1060fff4 	beqz	v1,d50 <kpatch_remove_patch+0x80>
     d80:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:363
	    object->callbacks_enabled)
		(*object->pre_unpatch_callback)(object);
     d84:	0040f809 	jalr	v0
     d88:	0200202d 	move	a0,s0
kpatch_remove_patch():
/home/loongson/kpatch/kmod/core/core.c:464
		kpatch_state_finish(KPATCH_STATE_FAILURE);
		return ret;
	}

	/* run any user-defined pre-unpatch callbacks */
	list_for_each_entry(object, &kpmod->objects, list)
     d8c:	de100000 	ld	s0,0(s0)
     d90:	1611fff3 	bne	s0,s1,d60 <kpatch_remove_patch+0x90>
     d94:	00000000 	nop
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
static inline int kpatch_state_finish(int state)
{
	int result;

	WARN_ON(state != KPATCH_STATE_SUCCESS && state != KPATCH_STATE_FAILURE);
	result = atomic_cmpxchg(&kpatch_state, KPATCH_STATE_UPDATING, state);
     d98:	0000000f 	sync
__cmpxchg():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/cmpxchg.h:183
     d9c:	3c030000 	lui	v1,0x0
     da0:	24050002 	li	a1,2
     da4:	24040001 	li	a0,1
     da8:	c0620000 	ll	v0,0(v1)
     dac:	14440005 	bne	v0,a0,dc4 <kpatch_remove_patch+0xf4>
     db0:	00000000 	nop
     db4:	00a0082d 	move	at,a1
     db8:	e0610000 	sc	at,0(v1)
     dbc:	1020fffa 	beqz	at,da8 <kpatch_remove_patch+0xd8>
     dc0:	00000000 	nop
     dc4:	0000000f 	sync
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
     dc8:	0000000f 	sync
/home/loongson/kpatch/kmod/core/core.c:187
	return result == KPATCH_STATE_UPDATING ? state : result;
     dcc:	24030003 	li	v1,3
     dd0:	14430023 	bne	v0,v1,e60 <kpatch_remove_patch+0x190>
     dd4:	00000000 	nop
kpatch_remove_patch():
/home/loongson/kpatch/kmod/core/core.c:483

	return 0;

err:
	/* undo pre-unpatch callbacks by calling post-patch counterparts */
	list_for_each_entry(object, &kpmod->objects, list)
     dd8:	de500008 	ld	s0,8(s2)
     ddc:	12110016 	beq	s0,s1,e38 <kpatch_remove_patch+0x168>
     de0:	3c020000 	lui	v0,0x0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     de4:	64520000 	daddiu	s2,v0,0
kpatch_remove_patch():
     de8:	08000000 	j	0 <kpatch_get_func>
     dec:	3c130000 	lui	s3,0x0
/home/loongson/kpatch/kmod/core/core.c:483

	return 0;

err:
	/* undo pre-unpatch callbacks by calling post-patch counterparts */
	list_for_each_entry(object, &kpmod->objects, list)
     df0:	de100000 	ld	s0,0(s0)
     df4:	00000000 	nop
     df8:	12110010 	beq	s0,s1,e3c <kpatch_remove_patch+0x16c>
     dfc:	dfbf0028 	ld	ra,40(sp)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     e00:	de020070 	ld	v0,112(s0)
     e04:	10400064 	beqz	v0,f98 <kpatch_remove_patch+0x2c8>
     e08:	de040010 	ld	a0,16(s0)
post_patch_callback():
/home/loongson/kpatch/kmod/core/core.c:353
}

static inline void post_patch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->post_patch_callback &&
     e0c:	de020050 	ld	v0,80(s0)
/home/loongson/kpatch/kmod/core/core.c:352
	return 0;
}

static inline void post_patch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
     e10:	1040fff7 	beqz	v0,df0 <kpatch_remove_patch+0x120>
     e14:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:353
	    object->post_patch_callback &&
     e18:	92030068 	lbu	v1,104(s0)
     e1c:	1060fff4 	beqz	v1,df0 <kpatch_remove_patch+0x120>
     e20:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:355
	    object->callbacks_enabled)
		(*object->post_patch_callback)(object);
     e24:	0040f809 	jalr	v0
     e28:	0200202d 	move	a0,s0
kpatch_remove_patch():
/home/loongson/kpatch/kmod/core/core.c:483

	return 0;

err:
	/* undo pre-unpatch callbacks by calling post-patch counterparts */
	list_for_each_entry(object, &kpmod->objects, list)
     e2c:	de100000 	ld	s0,0(s0)
     e30:	1611fff3 	bne	s0,s1,e00 <kpatch_remove_patch+0x130>
     e34:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:487
		post_patch_callback(object);

	return ret;
}
     e38:	dfbf0028 	ld	ra,40(sp)
     e3c:	dfb40020 	ld	s4,32(sp)
     e40:	dfb30018 	ld	s3,24(sp)
     e44:	00000000 	nop
     e48:	dfb20010 	ld	s2,16(sp)
     e4c:	dfb10008 	ld	s1,8(sp)
     e50:	dfb00000 	ld	s0,0(sp)
/home/loongson/kpatch/kmod/core/core.c:486
err:
	/* undo pre-unpatch callbacks by calling post-patch counterparts */
	list_for_each_entry(object, &kpmod->objects, list)
		post_patch_callback(object);

	return ret;
     e54:	2402fff0 	li	v0,-16
/home/loongson/kpatch/kmod/core/core.c:487
}
     e58:	03e00008 	jr	ra
     e5c:	67bd0030 	daddiu	sp,sp,48
/home/loongson/kpatch/kmod/core/core.c:475
		ret = -EBUSY;
		goto err;
	}

	/* Succeeded, remove all updating funcs from hash table */
	do_for_each_linked_func(kpmod, func) {
     e60:	de500008 	ld	s0,8(s2)
     e64:	12110019 	beq	s0,s1,ecc <kpatch_remove_patch+0x1fc>
     e68:	3c020000 	lui	v0,0x0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     e6c:	64520000 	daddiu	s2,v0,0
     e70:	3c130000 	lui	s3,0x0
     e74:	de020070 	ld	v0,112(s0)
     e78:	1040003d 	beqz	v0,f70 <kpatch_remove_patch+0x2a0>
     e7c:	de040010 	ld	a0,16(s0)
kpatch_remove_patch():
/home/loongson/kpatch/kmod/core/core.c:475
		ret = -EBUSY;
		goto err;
	}

	/* Succeeded, remove all updating funcs from hash table */
	do_for_each_linked_func(kpmod, func) {
     e80:	de030018 	ld	v1,24(s0)
     e84:	66060018 	daddiu	a2,s0,24
     e88:	10c3000d 	beq	a2,v1,ec0 <kpatch_remove_patch+0x1f0>
     e8c:	6462ffd0 	daddiu	v0,v1,-48
     e90:	dc430050 	ld	v1,80(v0)
hlist_del_init_rcu():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:156
 * perfectly legal to run concurrently with the _rcu list-traversal
 * primitives, such as hlist_for_each_entry_rcu().
 */
static inline void hlist_del_init_rcu(struct hlist_node *n)
{
	if (!hlist_unhashed(n)) {
     e94:	10600007 	beqz	v1,eb4 <kpatch_remove_patch+0x1e4>
     e98:	00000000 	nop
__hlist_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:676
	return !READ_ONCE(h->first);
}

static inline void __hlist_del(struct hlist_node *n)
{
	struct hlist_node *next = n->next;
     e9c:	dc440048 	ld	a0,72(v0)
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
{
	switch (size) {
	case 1: *(volatile __u8 *)p = *(__u8 *)res; break;
	case 2: *(volatile __u16 *)p = *(__u16 *)res; break;
	case 4: *(volatile __u32 *)p = *(__u32 *)res; break;
	case 8: *(volatile __u64 *)p = *(__u64 *)res; break;
     ea0:	fc640000 	sd	a0,0(v1)
__hlist_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:680
	struct hlist_node **pprev = n->pprev;

	WRITE_ONCE(*pprev, next);
	if (next)
     ea4:	10800002 	beqz	a0,eb0 <kpatch_remove_patch+0x1e0>
     ea8:	00000000 	nop
/home/loongson/linux-4.19-loongson/./include/linux/list.h:681
		next->pprev = pprev;
     eac:	fc830008 	sd	v1,8(a0)
hlist_del_init_rcu():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:158
		__hlist_del(n);
		n->pprev = NULL;
     eb0:	fc400050 	sd	zero,80(v0)
kpatch_remove_patch():
/home/loongson/kpatch/kmod/core/core.c:475
     eb4:	dc430030 	ld	v1,48(v0)
     eb8:	14c3fff5 	bne	a2,v1,e90 <kpatch_remove_patch+0x1c0>
     ebc:	6462ffd0 	daddiu	v0,v1,-48
     ec0:	de100000 	ld	s0,0(s0)
     ec4:	1611ffeb 	bne	s0,s1,e74 <kpatch_remove_patch+0x1a4>
     ec8:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:487
	/* undo pre-unpatch callbacks by calling post-patch counterparts */
	list_for_each_entry(object, &kpmod->objects, list)
		post_patch_callback(object);

	return ret;
}
     ecc:	dfbf0028 	ld	ra,40(sp)
     ed0:	dfb40020 	ld	s4,32(sp)
     ed4:	dfb30018 	ld	s3,24(sp)
     ed8:	00000000 	nop
     edc:	dfb20010 	ld	s2,16(sp)
     ee0:	dfb10008 	ld	s1,8(sp)
     ee4:	dfb00000 	ld	s0,0(sp)
     ee8:	0000102d 	move	v0,zero
     eec:	03e00008 	jr	ra
     ef0:	67bd0030 	daddiu	sp,sp,48
     ef4:	00000000 	nop
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     ef8:	66820000 	daddiu	v0,s4,0
     efc:	0040f809 	jalr	v0
     f00:	0260282d 	move	a1,s3
     f04:	1040ff99 	beqz	v0,d6c <kpatch_remove_patch+0x9c>
     f08:	00000000 	nop
kpatch_remove_patch():
/home/loongson/kpatch/kmod/core/core.c:464
		kpatch_state_finish(KPATCH_STATE_FAILURE);
		return ret;
	}

	/* run any user-defined pre-unpatch callbacks */
	list_for_each_entry(object, &kpmod->objects, list)
     f0c:	08000000 	j	0 <kpatch_get_func>
     f10:	de100000 	ld	s0,0(s0)
     f14:	00000000 	nop
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
static inline int kpatch_state_finish(int state)
{
	int result;

	WARN_ON(state != KPATCH_STATE_SUCCESS && state != KPATCH_STATE_FAILURE);
	result = atomic_cmpxchg(&kpatch_state, KPATCH_STATE_UPDATING, state);
     f18:	0000000f 	sync
__cmpxchg():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/cmpxchg.h:183
     f1c:	3c030000 	lui	v1,0x0
     f20:	24050003 	li	a1,3
     f24:	24040001 	li	a0,1
     f28:	c0660000 	ll	a2,0(v1)
     f2c:	14c40005 	bne	a2,a0,f44 <kpatch_remove_patch+0x274>
     f30:	00000000 	nop
     f34:	00a0082d 	move	at,a1
     f38:	e0610000 	sc	at,0(v1)
     f3c:	1020fffa 	beqz	at,f28 <kpatch_remove_patch+0x258>
     f40:	00000000 	nop
     f44:	0000000f 	sync
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
     f48:	0000000f 	sync
kpatch_remove_patch():
/home/loongson/kpatch/kmod/core/core.c:487
	/* undo pre-unpatch callbacks by calling post-patch counterparts */
	list_for_each_entry(object, &kpmod->objects, list)
		post_patch_callback(object);

	return ret;
}
     f4c:	dfbf0028 	ld	ra,40(sp)
     f50:	dfb40020 	ld	s4,32(sp)
     f54:	dfb30018 	ld	s3,24(sp)
     f58:	00000000 	nop
     f5c:	dfb20010 	ld	s2,16(sp)
     f60:	dfb10008 	ld	s1,8(sp)
     f64:	dfb00000 	ld	s0,0(sp)
     f68:	03e00008 	jr	ra
     f6c:	67bd0030 	daddiu	sp,sp,48
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     f70:	66620000 	daddiu	v0,s3,0
     f74:	0040f809 	jalr	v0
     f78:	0240282d 	move	a1,s2
     f7c:	1040ffc0 	beqz	v0,e80 <kpatch_remove_patch+0x1b0>
     f80:	00000000 	nop
kpatch_remove_patch():
/home/loongson/kpatch/kmod/core/core.c:475
		ret = -EBUSY;
		goto err;
	}

	/* Succeeded, remove all updating funcs from hash table */
	do_for_each_linked_func(kpmod, func) {
     f84:	de100000 	ld	s0,0(s0)
     f88:	1611ffba 	bne	s0,s1,e74 <kpatch_remove_patch+0x1a4>
     f8c:	dfbf0028 	ld	ra,40(sp)
/home/loongson/kpatch/kmod/core/core.c:487
	/* undo pre-unpatch callbacks by calling post-patch counterparts */
	list_for_each_entry(object, &kpmod->objects, list)
		post_patch_callback(object);

	return ret;
}
     f90:	08000000 	j	0 <kpatch_get_func>
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
     f94:	dfb40020 	ld	s4,32(sp)
kpatch_object_linked():
     f98:	66620000 	daddiu	v0,s3,0
     f9c:	0040f809 	jalr	v0
     fa0:	0240282d 	move	a1,s2
     fa4:	1040ff99 	beqz	v0,e0c <kpatch_remove_patch+0x13c>
     fa8:	00000000 	nop
kpatch_remove_patch():
/home/loongson/kpatch/kmod/core/core.c:483

	return 0;

err:
	/* undo pre-unpatch callbacks by calling post-patch counterparts */
	list_for_each_entry(object, &kpmod->objects, list)
     fac:	08000000 	j	0 <kpatch_get_func>
     fb0:	de100000 	ld	s0,0(s0)
     fb4:	00000000 	nop

0000000000000fb8 <kpatch_ftrace_remove_func>:
kpatch_ftrace_remove_func():
/home/loongson/kpatch/kmod/core/core.c:634

	return 0;
}

static int kpatch_ftrace_remove_func(unsigned long ip)
{
     fb8:	67bdffd0 	daddiu	sp,sp,-48
     fbc:	ffbf0028 	sd	ra,40(sp)
     fc0:	ffb30020 	sd	s3,32(sp)
     fc4:	ffb20018 	sd	s2,24(sp)
     fc8:	ffb10010 	sd	s1,16(sp)
     fcc:	ffb00008 	sd	s0,8(sp)
     fd0:	3c030000 	lui	v1,0x0
     fd4:	64630000 	daddiu	v1,v1,0
     fd8:	03e0082d 	move	at,ra
     fdc:	0060f809 	jalr	v1
     fe0:	67ac0028 	daddiu	t0,sp,40
/home/loongson/kpatch/kmod/core/core.c:638
	int ret;

	/* check if any other patch modules have also patched this func */
	if (kpatch_get_func(ip))
     fe4:	3c020000 	lui	v0,0x0
     fe8:	64420000 	daddiu	v0,v0,0
     fec:	0040f809 	jalr	v0
     ff0:	0080882d 	move	s1,a0
     ff4:	1040000a 	beqz	v0,1020 <kpatch_ftrace_remove_func+0x68>
     ff8:	0000102d 	move	v0,zero
/home/loongson/kpatch/kmod/core/core.c:660
		pr_err("can't remove ftrace filter at address 0x%lx\n", ip);
		return ret;
	}

	return 0;
}
     ffc:	dfbf0028 	ld	ra,40(sp)
    1000:	dfb30020 	ld	s3,32(sp)
    1004:	dfb20018 	ld	s2,24(sp)
    1008:	00000000 	nop
    100c:	dfb10010 	ld	s1,16(sp)
    1010:	dfb00008 	ld	s0,8(sp)
    1014:	03e00008 	jr	ra
    1018:	67bd0030 	daddiu	sp,sp,48
    101c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:641

	/* check if any other patch modules have also patched this func */
	if (kpatch_get_func(ip))
		return 0;

	if (kpatch_num_patched == 1) {
    1020:	3c120000 	lui	s2,0x0
    1024:	8e420000 	lw	v0,0(s2)
    1028:	24030001 	li	v1,1
    102c:	10430016 	beq	v0,v1,1088 <kpatch_ftrace_remove_func+0xd0>
    1030:	3c130000 	lui	s3,0x0
/home/loongson/kpatch/kmod/core/core.c:648
		if (ret) {
			pr_err("can't unregister ftrace handler\n");
			return ret;
		}
	}
	kpatch_num_patched--;
    1034:	2442ffff 	addiu	v0,v0,-1
    1038:	ae420000 	sw	v0,0(s2)
/home/loongson/kpatch/kmod/core/core.c:653

	//ret = ftrace_set_filter_ip(&kpatch_ftrace_ops, ip, 1, 0);
	
	//MIPS
	ret = ftrace_set_filter_ip(&kpatch_ftrace_ops, ip, 1, 0);
    103c:	3c020000 	lui	v0,0x0
    1040:	66640000 	daddiu	a0,s3,0
    1044:	0220282d 	move	a1,s1
    1048:	24060001 	li	a2,1
    104c:	64420000 	daddiu	v0,v0,0
    1050:	0040f809 	jalr	v0
    1054:	0000382d 	move	a3,zero
/home/loongson/kpatch/kmod/core/core.c:654
	if (ret) {
    1058:	0040802d 	move	s0,v0
    105c:	1200ffe7 	beqz	s0,ffc <kpatch_ftrace_remove_func+0x44>
    1060:	0000102d 	move	v0,zero
/home/loongson/kpatch/kmod/core/core.c:655
		pr_err("can't remove ftrace filter at address 0x%lx\n", ip);
    1064:	3c040000 	lui	a0,0x0
    1068:	3c020000 	lui	v0,0x0
    106c:	64840000 	daddiu	a0,a0,0
    1070:	64420000 	daddiu	v0,v0,0
    1074:	0040f809 	jalr	v0
    1078:	0220282d 	move	a1,s1
    107c:	08000000 	j	0 <kpatch_get_func>
    1080:	0200102d 	move	v0,s0
    1084:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:642
	/* check if any other patch modules have also patched this func */
	if (kpatch_get_func(ip))
		return 0;

	if (kpatch_num_patched == 1) {
		ret = unregister_ftrace_function(&kpatch_ftrace_ops);
    1088:	3c020000 	lui	v0,0x0
    108c:	64420000 	daddiu	v0,v0,0
    1090:	0040f809 	jalr	v0
    1094:	66640000 	daddiu	a0,s3,0
/home/loongson/kpatch/kmod/core/core.c:643
		if (ret) {
    1098:	14400003 	bnez	v0,10a8 <kpatch_ftrace_remove_func+0xf0>
    109c:	0040802d 	move	s0,v0
    10a0:	08000000 	j	0 <kpatch_get_func>
    10a4:	8e420000 	lw	v0,0(s2)
/home/loongson/kpatch/kmod/core/core.c:644
			pr_err("can't unregister ftrace handler\n");
    10a8:	3c040000 	lui	a0,0x0
    10ac:	3c020000 	lui	v0,0x0
    10b0:	64420000 	daddiu	v0,v0,0
    10b4:	0040f809 	jalr	v0
    10b8:	64840000 	daddiu	a0,a0,0
    10bc:	08000000 	j	0 <kpatch_get_func>
    10c0:	0200102d 	move	v0,s0
    10c4:	00000000 	nop

00000000000010c8 <kpatch_link_object>:
kpatch_link_object():
/home/loongson/kpatch/kmod/core/core.c:925
 * - Calculate the patched functions' addresses
 * - Register them with ftrace
 */
static int kpatch_link_object(struct kpatch_module *kpmod,
			      struct kpatch_object *object)
{
    10c8:	67bdff70 	daddiu	sp,sp,-144
    10cc:	ffbf0088 	sd	ra,136(sp)
    10d0:	ffbe0080 	sd	s8,128(sp)
    10d4:	ffb70078 	sd	s7,120(sp)
    10d8:	ffb60070 	sd	s6,112(sp)
    10dc:	ffb50068 	sd	s5,104(sp)
    10e0:	ffb40060 	sd	s4,96(sp)
    10e4:	ffb30058 	sd	s3,88(sp)
    10e8:	ffb20050 	sd	s2,80(sp)
    10ec:	ffb10048 	sd	s1,72(sp)
    10f0:	ffb00040 	sd	s0,64(sp)
    10f4:	3c030000 	lui	v1,0x0
    10f8:	64630000 	daddiu	v1,v1,0
    10fc:	03e0082d 	move	at,ra
    1100:	0060f809 	jalr	v1
    1104:	67ac0088 	daddiu	t0,sp,136
    1108:	3c120000 	lui	s2,0x0
    110c:	de420000 	ld	v0,0(s2)
    1110:	00a0882d 	move	s1,a1
    1114:	ffa20038 	sd	v0,56(sp)
    1118:	0080a02d 	move	s4,a0
/home/loongson/kpatch/kmod/core/core.c:929
	struct module *mod = NULL;
	struct kpatch_func *func, *func_err = NULL;
	int ret;
	bool vmlinux = !strcmp(object->name, "vmlinux");
    111c:	3c020000 	lui	v0,0x0
    1120:	dca40010 	ld	a0,16(a1)
    1124:	3c050000 	lui	a1,0x0
    1128:	64a50000 	daddiu	a1,a1,0
    112c:	64420000 	daddiu	v0,v0,0
    1130:	0040f809 	jalr	v0
    1134:	3c100000 	lui	s0,0x0
/home/loongson/kpatch/kmod/core/core.c:937
	struct kpatch_insn *insn;
	unsigned long insn_offset = 0;

int i, k = 0;
unsigned int *tmp;
printk("kpatch_link_object\n");
    1138:	3c040000 	lui	a0,0x0
    113c:	64840000 	daddiu	a0,a0,0
    1140:	66100000 	daddiu	s0,s0,0
    1144:	0200f809 	jalr	s0
    1148:	2c530001 	sltiu	s3,v0,1
/home/loongson/kpatch/kmod/core/core.c:939

	if (!vmlinux) {
    114c:	16600021 	bnez	s3,11d4 <kpatch_link_object+0x10c>
    1150:	3c150000 	lui	s5,0x0
/home/loongson/kpatch/kmod/core/core.c:940
		mutex_lock(&module_mutex);
    1154:	3c020000 	lui	v0,0x0
    1158:	64420000 	daddiu	v0,v0,0
    115c:	0040f809 	jalr	v0
    1160:	66a40000 	daddiu	a0,s5,0
/home/loongson/kpatch/kmod/core/core.c:941
		mod = find_module(object->name);
    1164:	3c020000 	lui	v0,0x0
    1168:	64420000 	daddiu	v0,v0,0
    116c:	0040f809 	jalr	v0
    1170:	de240010 	ld	a0,16(s1)
/home/loongson/kpatch/kmod/core/core.c:942
		if (!mod) {
    1174:	1440003b 	bnez	v0,1264 <kpatch_link_object+0x19c>
    1178:	0040f02d 	move	s8,v0
/home/loongson/kpatch/kmod/core/core.c:947
			/*
			 * The module hasn't been loaded yet.  We can patch it
			 * later in kpatch_module_notify().
			 */
			mutex_unlock(&module_mutex);
    117c:	3c020000 	lui	v0,0x0
    1180:	64420000 	daddiu	v0,v0,0
    1184:	0040f809 	jalr	v0
    1188:	66a40000 	daddiu	a0,s5,0
/home/loongson/kpatch/kmod/core/core.c:948
			return 0;
    118c:	0000102d 	move	v0,zero
/home/loongson/kpatch/kmod/core/core.c:1011
	}
err_put:
	if (!vmlinux)
		module_put(mod);
	return ret;
}
    1190:	dfa40038 	ld	a0,56(sp)
    1194:	de430000 	ld	v1,0(s2)
    1198:	1483002e 	bne	a0,v1,1254 <kpatch_link_object+0x18c>
    119c:	dfbf0088 	ld	ra,136(sp)
    11a0:	dfbe0080 	ld	s8,128(sp)
    11a4:	dfb70078 	ld	s7,120(sp)
    11a8:	dfb60070 	ld	s6,112(sp)
    11ac:	00000000 	nop
    11b0:	dfb50068 	ld	s5,104(sp)
    11b4:	dfb40060 	ld	s4,96(sp)
    11b8:	dfb30058 	ld	s3,88(sp)
    11bc:	00000000 	nop
    11c0:	dfb20050 	ld	s2,80(sp)
    11c4:	dfb10048 	ld	s1,72(sp)
    11c8:	dfb00040 	ld	s0,64(sp)
    11cc:	03e00008 	jr	ra
    11d0:	67bd0090 	daddiu	sp,sp,144
/home/loongson/kpatch/kmod/core/core.c:926
 * - Register them with ftrace
 */
static int kpatch_link_object(struct kpatch_module *kpmod,
			      struct kpatch_object *object)
{
	struct module *mod = NULL;
    11d4:	0000f02d 	move	s8,zero
/home/loongson/kpatch/kmod/core/core.c:956
		/* should never fail because we have the mutex */
		WARN_ON(!try_module_get(mod));
		mutex_unlock(&module_mutex);
		object->mod = mod;
	}
printk("kpatch_write_relocations\n");
    11d8:	3c040000 	lui	a0,0x0
    11dc:	64840000 	daddiu	a0,a0,0
    11e0:	66230028 	daddiu	v1,s1,40
    11e4:	0200f809 	jalr	s0
    11e8:	ffa30028 	sd	v1,40(sp)
kpatch_write_relocations():
/home/loongson/kpatch/kmod/core/core.c:765
	int ret, size, readonly = 0, numpages;
	struct kpatch_dynrela *dynrela;
	u64 loc, val;

unsigned long *tmp;
printk("into kpatch_write_relocations\n");
    11ec:	3c040000 	lui	a0,0x0
    11f0:	0200f809 	jalr	s0
    11f4:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:771

#if (( LINUX_VERSION_CODE >= KERNEL_VERSION(4, 5, 0) ) || \
     ( LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0) && \
      UTS_UBUNTU_RELEASE_ABI >= 7 ) \
    )
	unsigned long core = (unsigned long)kpmod->mod->core_layout.base;
    11f8:	de820000 	ld	v0,0(s4)
/home/loongson/kpatch/kmod/core/core.c:778
#else
	unsigned long core = (unsigned long)kpmod->mod->module_core;
	unsigned long core_size = kpmod->mod->core_size;
#endif

	list_for_each_entry(dynrela, &object->dynrelas, list) {
    11fc:	de290028 	ld	a5,40(s1)
/home/loongson/kpatch/kmod/core/core.c:771

#if (( LINUX_VERSION_CODE >= KERNEL_VERSION(4, 5, 0) ) || \
     ( LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0) && \
      UTS_UBUNTU_RELEASE_ABI >= 7 ) \
    )
	unsigned long core = (unsigned long)kpmod->mod->core_layout.base;
    1200:	dc430180 	ld	v1,384(v0)
    1204:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:772
	unsigned long core_size = kpmod->mod->core_layout.size;
    1208:	9c420188 	lwu	v0,392(v0)
/home/loongson/kpatch/kmod/core/core.c:771

#if (( LINUX_VERSION_CODE >= KERNEL_VERSION(4, 5, 0) ) || \
     ( LINUX_VERSION_CODE >= KERNEL_VERSION(4, 4, 0) && \
      UTS_UBUNTU_RELEASE_ABI >= 7 ) \
    )
	unsigned long core = (unsigned long)kpmod->mod->core_layout.base;
    120c:	ffa30008 	sd	v1,8(sp)
/home/loongson/kpatch/kmod/core/core.c:772
	unsigned long core_size = kpmod->mod->core_layout.size;
    1210:	ffa20010 	sd	v0,16(sp)
/home/loongson/kpatch/kmod/core/core.c:778
#else
	unsigned long core = (unsigned long)kpmod->mod->module_core;
	unsigned long core_size = kpmod->mod->core_size;
#endif

	list_for_each_entry(dynrela, &object->dynrelas, list) {
    1214:	6537ffd0 	daddiu	s7,a5,-48
    1218:	dfa30028 	ld	v1,40(sp)
    121c:	66e20030 	daddiu	v0,s7,48
    1220:	14430046 	bne	v0,v1,133c <kpatch_link_object+0x274>
    1224:	66230018 	daddiu	v1,s1,24
kpatch_link_object():
/home/loongson/kpatch/kmod/core/core.c:961
printk("kpatch_write_relocations\n");
	ret = kpatch_write_relocations(kpmod, object);
	if (ret)
		goto err_put;

	list_for_each_entry(func, &object->funcs, list) {
    1228:	de340018 	ld	s4,24(s1)
    122c:	6694ffd0 	daddiu	s4,s4,-48
/home/loongson/kpatch/kmod/core/core.c:935

	//MIPS
	struct kpatch_insn *insn;
	unsigned long insn_offset = 0;

int i, k = 0;
    1230:	0000b82d 	move	s7,zero
/home/loongson/kpatch/kmod/core/core.c:933
	int ret;
	bool vmlinux = !strcmp(object->name, "vmlinux");

	//MIPS
	struct kpatch_insn *insn;
	unsigned long insn_offset = 0;
    1234:	ffa00008 	sd	zero,8(sp)
    1238:	ffa30010 	sd	v1,16(sp)
/home/loongson/kpatch/kmod/core/core.c:961 (discriminator 8)
printk("kpatch_write_relocations\n");
	ret = kpatch_write_relocations(kpmod, object);
	if (ret)
		goto err_put;

	list_for_each_entry(func, &object->funcs, list) {
    123c:	dfa30010 	ld	v1,16(sp)
    1240:	66820030 	daddiu	v0,s4,48
    1244:	14620014 	bne	v1,v0,1298 <kpatch_link_object+0x1d0>
    1248:	0000102d 	move	v0,zero
    124c:	08000000 	j	0 <kpatch_get_func>
    1250:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1011
	}
err_put:
	if (!vmlinux)
		module_put(mod);
	return ret;
}
    1254:	3c020000 	lui	v0,0x0
    1258:	64420000 	daddiu	v0,v0,0
    125c:	0040f809 	jalr	v0
    1260:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:952
			mutex_unlock(&module_mutex);
			return 0;
		}

		/* should never fail because we have the mutex */
		WARN_ON(!try_module_get(mod));
    1264:	0040202d 	move	a0,v0
    1268:	3c020000 	lui	v0,0x0
    126c:	64420000 	daddiu	v0,v0,0
    1270:	0040f809 	jalr	v0
    1274:	00000000 	nop
    1278:	104000e6 	beqz	v0,1614 <kpatch_link_object+0x54c>
    127c:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:953 (discriminator 3)
		mutex_unlock(&module_mutex);
    1280:	3c020000 	lui	v0,0x0
    1284:	64420000 	daddiu	v0,v0,0
    1288:	0040f809 	jalr	v0
    128c:	66a40000 	daddiu	a0,s5,0
/home/loongson/kpatch/kmod/core/core.c:954 (discriminator 3)
		object->mod = mod;
    1290:	08000000 	j	0 <kpatch_get_func>
    1294:	fe3e0070 	sd	s8,112(s1)
/home/loongson/kpatch/kmod/core/core.c:964
		goto err_put;

	list_for_each_entry(func, &object->funcs, list) {

		/* lookup the old location */
		ret = kpatch_find_object_symbol(object->name,
    1298:	3c030000 	lui	v1,0x0
    129c:	de850028 	ld	a1,40(s4)
    12a0:	de860020 	ld	a2,32(s4)
    12a4:	de240010 	ld	a0,16(s1)
    12a8:	64620000 	daddiu	v0,v1,0
    12ac:	66870010 	daddiu	a3,s4,16
    12b0:	0040f809 	jalr	v0
    12b4:	0000b02d 	move	s6,zero
/home/loongson/kpatch/kmod/core/core.c:969
						func->name,
						func->sympos,
						&func->old_addr);

printk("kpatch_func name: %s old_addr: %lx new_addr: %lx old_size:%lx  new_size: %lx\n", func->name, func->old_addr, func->new_addr, func->old_size, func->new_size);
    12b8:	3c040000 	lui	a0,0x0
    12bc:	de850028 	ld	a1,40(s4)
    12c0:	de860010 	ld	a2,16(s4)
    12c4:	de870000 	ld	a3,0(s4)
    12c8:	00000000 	nop
    12cc:	de880018 	ld	a4,24(s4)
    12d0:	de890008 	ld	a5,8(s4)
    12d4:	64840000 	daddiu	a0,a0,0
    12d8:	0200f809 	jalr	s0
    12dc:	0040a82d 	move	s5,v0
/home/loongson/kpatch/kmod/core/core.c:971

tmp = (unsigned long)func->new_addr;
    12e0:	de830000 	ld	v1,0(s4)
/home/loongson/kpatch/kmod/core/core.c:972 (discriminator 1)
for (i = 0; i < func->new_size / 4; i++, k += 4) {
    12e4:	de820008 	ld	v0,8(s4)
    12e8:	000210ba 	dsrl	v0,v0,0x2
    12ec:	02c2102b 	sltu	v0,s6,v0
    12f0:	14400117 	bnez	v0,1750 <kpatch_link_object+0x688>
    12f4:	001610b8 	dsll	v0,s6,0x2
/home/loongson/kpatch/kmod/core/core.c:976
printk("%x %x\n", k, tmp[i]);
}

		if (ret) {
    12f8:	16a000ff 	bnez	s5,16f8 <kpatch_link_object+0x630>
    12fc:	66230038 	daddiu	v1,s1,56
/home/loongson/kpatch/kmod/core/core.c:983
			goto err_ftrace;
		}

		
		//MIPS，获取指令偏移量
		list_for_each_entry(insn, &object->insns, list) {
    1300:	de350038 	ld	s5,56(s1)
    1304:	66b5ffe8 	daddiu	s5,s5,-24
/home/loongson/kpatch/kmod/core/core.c:983 (discriminator 8)
    1308:	66a20018 	daddiu	v0,s5,24
    130c:	144300db 	bne	v0,v1,167c <kpatch_link_object+0x5b4>
    1310:	3c040000 	lui	a0,0x0
    1314:	de960010 	ld	s6,16(s4)
kpatch_ftrace_add_func():
/home/loongson/kpatch/kmod/core/core.c:602
static int kpatch_ftrace_add_func(unsigned long ip, unsigned long offset)
{
	int ret;

	/* check if any other patch modules have also patched this func */
	if (kpatch_get_func(ip))
    1318:	3c030000 	lui	v1,0x0
    131c:	64620000 	daddiu	v0,v1,0
    1320:	0040f809 	jalr	v0
    1324:	02c0202d 	move	a0,s6
    1328:	104000c1 	beqz	v0,1630 <kpatch_link_object+0x568>
    132c:	dfa30008 	ld	v1,8(sp)
kpatch_link_object():
/home/loongson/kpatch/kmod/core/core.c:961
printk("kpatch_write_relocations\n");
	ret = kpatch_write_relocations(kpmod, object);
	if (ret)
		goto err_put;

	list_for_each_entry(func, &object->funcs, list) {
    1330:	de940030 	ld	s4,48(s4)
    1334:	08000000 	j	0 <kpatch_get_func>
    1338:	6694ffd0 	daddiu	s4,s4,-48
kpatch_write_relocations():
/home/loongson/kpatch/kmod/core/core.c:779
	unsigned long core = (unsigned long)kpmod->mod->module_core;
	unsigned long core_size = kpmod->mod->core_size;
#endif

	list_for_each_entry(dynrela, &object->dynrelas, list) {
printk("dynrela name: %s external: %d\n", dynrela->name, dynrela->external);
    133c:	dee50020 	ld	a1,32(s7)
    1340:	8ee6002c 	lw	a2,44(s7)
    1344:	3c040000 	lui	a0,0x0
    1348:	0200f809 	jalr	s0
    134c:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:780
		if (dynrela->external)
    1350:	8ee2002c 	lw	v0,44(s7)
    1354:	104000a7 	beqz	v0,15f4 <kpatch_link_object+0x52c>
    1358:	3c030000 	lui	v1,0x0
/home/loongson/kpatch/kmod/core/core.c:781
			ret = kpatch_find_external_symbol(kpmod->mod->name,
    135c:	dee30018 	ld	v1,24(s7)
__preempt_count_add():
/home/loongson/linux-4.19-loongson/./include/asm-generic/preempt.h:54
 * The various preempt_count add/sub methods
 */

static __always_inline void __preempt_count_add(int val)
{
	*preempt_count_ptr() += val;
    1360:	8f82001c 	lw	v0,28(gp)
kpatch_write_relocations():
/home/loongson/kpatch/kmod/core/core.c:781
    1364:	de950000 	ld	s5,0(s4)
__preempt_count_add():
/home/loongson/linux-4.19-loongson/./include/asm-generic/preempt.h:54
    1368:	24420001 	addiu	v0,v0,1
kpatch_write_relocations():
/home/loongson/kpatch/kmod/core/core.c:781
    136c:	ffa30018 	sd	v1,24(sp)
    1370:	66e30008 	daddiu	v1,s7,8
    1374:	def60020 	ld	s6,32(s7)
    1378:	66b50018 	daddiu	s5,s5,24
    137c:	ffa30020 	sd	v1,32(sp)
__preempt_count_add():
/home/loongson/linux-4.19-loongson/./include/asm-generic/preempt.h:54
    1380:	af82001c 	sw	v0,28(gp)
kpatch_find_external_symbol():
/home/loongson/kpatch/kmod/core/core.c:742
{
	const struct kernel_symbol *sym;

	/* first, check if it's an exported symbol */
	preempt_disable();
	sym = find_symbol(name, NULL, NULL, true, true);
    1384:	3c030000 	lui	v1,0x0
    1388:	0000282d 	move	a1,zero
    138c:	02c0202d 	move	a0,s6
    1390:	0000302d 	move	a2,zero
    1394:	24070001 	li	a3,1
    1398:	64620000 	daddiu	v0,v1,0
    139c:	0040f809 	jalr	v0
    13a0:	24080001 	li	a4,1
__preempt_count_dec_and_test():
/home/loongson/linux-4.19-loongson/./include/asm-generic/preempt.h:69
	/*
	 * Because of load-store architectures cannot do per-cpu atomic
	 * operations; we cannot use PREEMPT_NEED_RESCHED because it might get
	 * lost.
	 */
	return !--*preempt_count_ptr() && tif_need_resched();
    13a4:	8f84001c 	lw	a0,28(gp)
    13a8:	2484ffff 	addiu	a0,a0,-1
    13ac:	14800009 	bnez	a0,13d4 <kpatch_link_object+0x30c>
    13b0:	af84001c 	sw	a0,28(gp)
test_bit():
/home/loongson/linux-4.19-loongson/./include/asm-generic/bitops/non-atomic.h:106
    13b4:	df840008 	ld	a0,8(gp)
    13b8:	30840004 	andi	a0,a0,0x4
__preempt_count_dec_and_test():
/home/loongson/linux-4.19-loongson/./include/asm-generic/preempt.h:69
    13bc:	10800005 	beqz	a0,13d4 <kpatch_link_object+0x30c>
    13c0:	3c040000 	lui	a0,0x0
kpatch_find_external_symbol():
/home/loongson/kpatch/kmod/core/core.c:743
	preempt_enable();
    13c4:	64840000 	daddiu	a0,a0,0
    13c8:	0080f809 	jalr	a0
    13cc:	ffa20000 	sd	v0,0(sp)
    13d0:	dfa20000 	ld	v0,0(sp)
/home/loongson/kpatch/kmod/core/core.c:744
	if (sym) {
    13d4:	10400079 	beqz	v0,15bc <kpatch_link_object+0x4f4>
    13d8:	3c030000 	lui	v1,0x0
/home/loongson/kpatch/kmod/core/core.c:748
#ifdef CONFIG_HAVE_ARCH_PREL32_RELOCATIONS
		*addr = (unsigned long)offset_to_ptr(&sym->value_offset);
#else
		*addr = sym->value;
    13dc:	dc420000 	ld	v0,0(v0)
    13e0:	fee20008 	sd	v0,8(s7)
kpatch_write_relocations():
/home/loongson/kpatch/kmod/core/core.c:795
		if (ret) {
			pr_err("unable to find symbol '%s'\n", dynrela->name);
			return ret;
		}

		switch (dynrela->type) {
    13e4:	dee50010 	ld	a1,16(s7)
    13e8:	24020005 	li	v0,5
    13ec:	10a20067 	beq	a1,v0,158c <kpatch_link_object+0x4c4>
    13f0:	24020006 	li	v0,6
    13f4:	14a2005d 	bne	a1,v0,156c <kpatch_link_object+0x4a4>
    13f8:	3c040000 	lui	a0,0x0
/home/loongson/kpatch/kmod/core/core.c:826
printk("1 loc: %lx opcode: %x\n", loc, *tmp);
			val = ((dynrela->src + dynrela->addend) >> 16) & 0xffff;
			size = 2;
			break;
		case R_MIPS_LO16:
			loc = dynrela->dest;
    13fc:	def60000 	ld	s6,0(s7)
/home/loongson/kpatch/kmod/core/core.c:828
tmp = loc;
printk("2 loc: %lx opcode: %x\n", loc, *tmp);
    1400:	3c040000 	lui	a0,0x0
    1404:	dec60000 	ld	a2,0(s6)
    1408:	64840000 	daddiu	a0,a0,0
    140c:	0200f809 	jalr	s0
    1410:	02c0282d 	move	a1,s6
/home/loongson/kpatch/kmod/core/core.c:829
			val = (dynrela->src + dynrela->addend) & 0xffff;
    1414:	8ee20028 	lw	v0,40(s7)
    1418:	dee40008 	ld	a0,8(s7)
    141c:	0044102d 	daddu	v0,v0,a0
    1420:	3042ffff 	andi	v0,v0,0xffff
    1424:	ffa20030 	sd	v0,48(sp)
/home/loongson/kpatch/kmod/core/core.c:840
			       dynrela->type, dynrela->name, dynrela->dest,
			       dynrela->src);
			return -EINVAL;
		}

		if (loc < core || loc >= core + core_size) {
    1428:	dfa30008 	ld	v1,8(sp)
    142c:	02c3102b 	sltu	v0,s6,v1
    1430:	14400046 	bnez	v0,154c <kpatch_link_object+0x484>
    1434:	dfa30010 	ld	v1,16(sp)
    1438:	dfa40008 	ld	a0,8(sp)
    143c:	0064102d 	daddu	v0,v1,a0
    1440:	02c2102b 	sltu	v0,s6,v0
    1444:	10400041 	beqz	v0,154c <kpatch_link_object+0x484>
    1448:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:850

		/*
		 * Skip it if the instruction to be relocated has been
		 * changed already (paravirt or alternatives may do this).
		 */
		if (memchr_inv((void *)loc, 0, size)) {
    144c:	02c0202d 	move	a0,s6
    1450:	0000282d 	move	a1,zero
    1454:	64420000 	daddiu	v0,v0,0
    1458:	0040f809 	jalr	v0
    145c:	24060002 	li	a2,2
    1460:	10400012 	beqz	v0,14ac <kpatch_link_object+0x3e4>
    1464:	24024000 	li	v0,16384
/home/loongson/kpatch/kmod/core/core.c:851
			pr_notice("Skipped dynrela for %s (0x%lx <- 0x%lx): the instruction has been changed already.\n",
    1468:	dee50020 	ld	a1,32(s7)
    146c:	dee60000 	ld	a2,0(s7)
    1470:	dee70008 	ld	a3,8(s7)
    1474:	3c040000 	lui	a0,0x0
    1478:	0200f809 	jalr	s0
    147c:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:853
				  dynrela->name, dynrela->dest, dynrela->src);
			pr_notice_once(
    1480:	3c020000 	lui	v0,0x0
    1484:	90440000 	lbu	a0,0(v0)
    1488:	14800005 	bnez	a0,14a0 <kpatch_link_object+0x3d8>
    148c:	24050001 	li	a1,1
    1490:	3c040000 	lui	a0,0x0
    1494:	64840000 	daddiu	a0,a0,0
    1498:	0200f809 	jalr	s0
    149c:	a0450000 	sb	a1,0(v0)
/home/loongson/kpatch/kmod/core/core.c:778
#else
	unsigned long core = (unsigned long)kpmod->mod->module_core;
	unsigned long core_size = kpmod->mod->core_size;
#endif

	list_for_each_entry(dynrela, &object->dynrelas, list) {
    14a0:	dee90030 	ld	a5,48(s7)
kpatch_link_object():
    14a4:	08000000 	j	0 <kpatch_get_func>
    14a8:	6537ffd0 	daddiu	s7,a5,-48
kpatch_write_relocations():
/home/loongson/kpatch/kmod/core/core.c:870
#else
               readonly = (loc < core + kpmod->mod->core_ro_size);
#endif
#endif

		numpages = (PAGE_SIZE - (loc & ~PAGE_MASK) >= size) ? 1 : 2;
    14ac:	32c43fff 	andi	a0,s6,0x3fff
    14b0:	0044102f 	dsubu	v0,v0,a0
/home/loongson/kpatch/kmod/core/core.c:873

		if (!readonly)
			kpatch_set_memory_rw(loc & PAGE_MASK, numpages);
    14b4:	3c040000 	lui	a0,0x0
    14b8:	dc860000 	ld	a2,0(a0)
/home/loongson/kpatch/kmod/core/core.c:870
#else
               readonly = (loc < core + kpmod->mod->core_ro_size);
#endif
#endif

		numpages = (PAGE_SIZE - (loc & ~PAGE_MASK) >= size) ? 1 : 2;
    14bc:	38420001 	xori	v0,v0,0x1
/home/loongson/kpatch/kmod/core/core.c:873

		if (!readonly)
			kpatch_set_memory_rw(loc & PAGE_MASK, numpages);
    14c0:	24040002 	li	a0,2
    14c4:	24050001 	li	a1,1
    14c8:	0082280a 	movz	a1,a0,v0
    14cc:	2404c000 	li	a0,-16384
    14d0:	00c0f809 	jalr	a2
    14d4:	02c42024 	and	a0,s6,a0
/home/loongson/kpatch/kmod/core/core.c:875

		ret = probe_kernel_write((void *)loc, &val, size); //向地址loc处写入val的size个字节，对于MIPS需要进行替换
    14d8:	3c020000 	lui	v0,0x0
    14dc:	02c0202d 	move	a0,s6
    14e0:	67a50030 	daddiu	a1,sp,48
    14e4:	64420000 	daddiu	v0,v0,0
    14e8:	0040f809 	jalr	v0
    14ec:	24060002 	li	a2,2
/home/loongson/kpatch/kmod/core/core.c:877
tmp = loc;
printk("after write: %lx", *tmp);
    14f0:	3c040000 	lui	a0,0x0
    14f4:	dec50000 	ld	a1,0(s6)
/home/loongson/kpatch/kmod/core/core.c:875
		numpages = (PAGE_SIZE - (loc & ~PAGE_MASK) >= size) ? 1 : 2;

		if (!readonly)
			kpatch_set_memory_rw(loc & PAGE_MASK, numpages);

		ret = probe_kernel_write((void *)loc, &val, size); //向地址loc处写入val的size个字节，对于MIPS需要进行替换
    14f8:	00021000 	sll	v0,v0,0x0
/home/loongson/kpatch/kmod/core/core.c:877
tmp = loc;
printk("after write: %lx", *tmp);
    14fc:	64840000 	daddiu	a0,a0,0
    1500:	0200f809 	jalr	s0
    1504:	0040a82d 	move	s5,v0
/home/loongson/kpatch/kmod/core/core.c:881
		if (readonly)
			kpatch_set_memory_ro(loc & PAGE_MASK, numpages);

		if (ret) {
    1508:	12a0ffe5 	beqz	s5,14a0 <kpatch_link_object+0x3d8>
    150c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:882
			pr_err("write to 0x%llx failed for symbol %s\n",
    1510:	3c040000 	lui	a0,0x0
    1514:	dee60020 	ld	a2,32(s7)
    1518:	64840000 	daddiu	a0,a0,0
    151c:	0200f809 	jalr	s0
    1520:	02c0282d 	move	a1,s6
kpatch_link_object():
/home/loongson/kpatch/kmod/core/core.c:1008
		if (func == func_err)
			break;
		WARN_ON(kpatch_ftrace_remove_func(func->old_addr));
	}
err_put:
	if (!vmlinux)
    1524:	12600003 	beqz	s3,1534 <kpatch_link_object+0x46c>
    1528:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1010
		module_put(mod);
	return ret;
    152c:	08000000 	j	0 <kpatch_get_func>
    1530:	02a0102d 	move	v0,s5
/home/loongson/kpatch/kmod/core/core.c:1009
			break;
		WARN_ON(kpatch_ftrace_remove_func(func->old_addr));
	}
err_put:
	if (!vmlinux)
		module_put(mod);
    1534:	3c020000 	lui	v0,0x0
    1538:	64420000 	daddiu	v0,v0,0
    153c:	0040f809 	jalr	v0
    1540:	03c0202d 	move	a0,s8
/home/loongson/kpatch/kmod/core/core.c:1010
	return ret;
    1544:	08000000 	j	0 <kpatch_get_func>
    1548:	02a0102d 	move	v0,s5
kpatch_write_relocations():
/home/loongson/kpatch/kmod/core/core.c:841
			       dynrela->src);
			return -EINVAL;
		}

		if (loc < core || loc >= core + core_size) {
			pr_err("bad dynrela location 0x%llx for symbol %s\n",
    154c:	dee60020 	ld	a2,32(s7)
    1550:	3c040000 	lui	a0,0x0
    1554:	64840000 	daddiu	a0,a0,0
    1558:	02c0282d 	move	a1,s6
    155c:	0200f809 	jalr	s0
    1560:	2415ffea 	li	s5,-22
    1564:	08000000 	j	0 <kpatch_get_func>
    1568:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:834
			val = (dynrela->src + dynrela->addend) & 0xffff;
			size = 2;
			break;
#endif
		default:
			pr_err("unsupported rela type %ld for source %s (0x%lx <- 0x%lx)\n",
    156c:	dee60020 	ld	a2,32(s7)
    1570:	dee70000 	ld	a3,0(s7)
    1574:	dee80008 	ld	a4,8(s7)
    1578:	64840000 	daddiu	a0,a0,0
    157c:	0200f809 	jalr	s0
    1580:	2415ffea 	li	s5,-22
    1584:	08000000 	j	0 <kpatch_get_func>
    1588:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:819
			size = 8;
			break;
#else
		//MIPS
		case R_MIPS_HI16:
			loc = dynrela->dest;
    158c:	def60000 	ld	s6,0(s7)
/home/loongson/kpatch/kmod/core/core.c:821
tmp = loc;
printk("1 loc: %lx opcode: %x\n", loc, *tmp);
    1590:	3c040000 	lui	a0,0x0
    1594:	dec60000 	ld	a2,0(s6)
    1598:	64840000 	daddiu	a0,a0,0
    159c:	0200f809 	jalr	s0
    15a0:	02c0282d 	move	a1,s6
/home/loongson/kpatch/kmod/core/core.c:822
			val = ((dynrela->src + dynrela->addend) >> 16) & 0xffff;
    15a4:	8ee20028 	lw	v0,40(s7)
    15a8:	dee40008 	ld	a0,8(s7)
    15ac:	0044102d 	daddu	v0,v0,a0
    15b0:	7c427c03 	dext	v0,v0,0x10,0x10
kpatch_link_object():
    15b4:	08000000 	j	0 <kpatch_get_func>
    15b8:	ffa20030 	sd	v0,48(sp)
kpatch_find_external_symbol():
/home/loongson/kpatch/kmod/core/core.c:754
#endif
		return 0;
	}

	/* otherwise check if it's in another .o within the patch module */
	return kpatch_find_object_symbol(objname, name, sympos, addr);
    15bc:	dfa60018 	ld	a2,24(sp)
    15c0:	dfa70020 	ld	a3,32(sp)
    15c4:	02a0202d 	move	a0,s5
    15c8:	64620000 	daddiu	v0,v1,0
    15cc:	0040f809 	jalr	v0
    15d0:	02c0282d 	move	a1,s6
    15d4:	0040a82d 	move	s5,v0
kpatch_write_relocations():
/home/loongson/kpatch/kmod/core/core.c:790
		else
			ret = kpatch_find_object_symbol(object->name,
							dynrela->name,
							dynrela->sympos,
							&dynrela->src);
		if (ret) {
    15d8:	12a0ff82 	beqz	s5,13e4 <kpatch_link_object+0x31c>
    15dc:	3c040000 	lui	a0,0x0
/home/loongson/kpatch/kmod/core/core.c:791
			pr_err("unable to find symbol '%s'\n", dynrela->name);
    15e0:	dee50020 	ld	a1,32(s7)
    15e4:	0200f809 	jalr	s0
    15e8:	64840000 	daddiu	a0,a0,0
    15ec:	08000000 	j	0 <kpatch_get_func>
    15f0:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:786
			ret = kpatch_find_external_symbol(kpmod->mod->name,
							  dynrela->name,
							  dynrela->sympos,
							  &dynrela->src);
		else
			ret = kpatch_find_object_symbol(object->name,
    15f4:	de240010 	ld	a0,16(s1)
    15f8:	dee50020 	ld	a1,32(s7)
    15fc:	dee60018 	ld	a2,24(s7)
    1600:	64620000 	daddiu	v0,v1,0
    1604:	0040f809 	jalr	v0
    1608:	66e70008 	daddiu	a3,s7,8
kpatch_link_object():
    160c:	08000000 	j	0 <kpatch_get_func>
    1610:	0040a82d 	move	s5,v0
/home/loongson/kpatch/kmod/core/core.c:952 (discriminator 1)
			mutex_unlock(&module_mutex);
			return 0;
		}

		/* should never fail because we have the mutex */
		WARN_ON(!try_module_get(mod));
    1614:	3c040000 	lui	a0,0x0
    1618:	64840000 	daddiu	a0,a0,0
    161c:	64420000 	daddiu	v0,v0,0
    1620:	0040f809 	jalr	v0
    1624:	240503b8 	li	a1,952
/home/loongson/kpatch/kmod/core/core.c:953 (discriminator 1)
		mutex_unlock(&module_mutex);
    1628:	08000000 	j	0 <kpatch_get_func>
    162c:	3c020000 	lui	v0,0x0
kpatch_ftrace_add_func():
/home/loongson/kpatch/kmod/core/core.c:608
		return 0;
	
	//ret = ftrace_set_filter_ip(&kpatch_ftrace_ops, ip, 0, 0);
	
	//MIPS，kpatch_ftrace_add_func接口由用户态调用，提供的ip地址为函数入口地址
	ret = ftrace_set_filter_ip(&kpatch_ftrace_ops, ip + offset, 0, 0);
    1630:	3c020000 	lui	v0,0x0
    1634:	0076b02d 	daddu	s6,v1,s6
    1638:	3c030000 	lui	v1,0x0
    163c:	64440000 	daddiu	a0,v0,0
    1640:	02c0282d 	move	a1,s6
    1644:	0000302d 	move	a2,zero
    1648:	64630000 	daddiu	v1,v1,0
    164c:	0060f809 	jalr	v1
    1650:	0000382d 	move	a3,zero
/home/loongson/kpatch/kmod/core/core.c:610
	
	if (ret) {
    1654:	14400049 	bnez	v0,177c <kpatch_link_object+0x6b4>
    1658:	0040a82d 	move	s5,v0
/home/loongson/kpatch/kmod/core/core.c:615
		pr_err("can't set ftrace filter at address 0x%lx\n", ip + offset);
		return ret;
	}

	if (!kpatch_num_patched) {
    165c:	3c050000 	lui	a1,0x0
    1660:	8ca20000 	lw	v0,0(a1)
    1664:	10400011 	beqz	v0,16ac <kpatch_link_object+0x5e4>
    1668:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:628
			ftrace_set_filter_ip(&kpatch_ftrace_ops, ip + offset, 1, 0);
			
			return ret;
		}
	}
	kpatch_num_patched++;
    166c:	8ca20000 	lw	v0,0(a1)
    1670:	24420001 	addiu	v0,v0,1
kpatch_link_object():
    1674:	08000000 	j	0 <kpatch_get_func>
    1678:	aca20000 	sw	v0,0(a1)
/home/loongson/kpatch/kmod/core/core.c:984
		}

		
		//MIPS，获取指令偏移量
		list_for_each_entry(insn, &object->insns, list) {
printk("old_addr: %lx offset: %lx\n", insn->old_addr, insn->offset);
    167c:	dea50000 	ld	a1,0(s5)
    1680:	dea60010 	ld	a2,16(s5)
    1684:	64840000 	daddiu	a0,a0,0
    1688:	0200f809 	jalr	s0
    168c:	ffa30000 	sd	v1,0(sp)
/home/loongson/kpatch/kmod/core/core.c:985
			if (func->old_addr == insn->old_addr) {
    1690:	de960010 	ld	s6,16(s4)
    1694:	dea20000 	ld	v0,0(s5)
    1698:	12c2003e 	beq	s6,v0,1794 <kpatch_link_object+0x6cc>
    169c:	dfa30000 	ld	v1,0(sp)
/home/loongson/kpatch/kmod/core/core.c:983
			goto err_ftrace;
		}

		
		//MIPS，获取指令偏移量
		list_for_each_entry(insn, &object->insns, list) {
    16a0:	deb50018 	ld	s5,24(s5)
    16a4:	08000000 	j	0 <kpatch_get_func>
    16a8:	66b5ffe8 	daddiu	s5,s5,-24
kpatch_ftrace_add_func():
/home/loongson/kpatch/kmod/core/core.c:616
		pr_err("can't set ftrace filter at address 0x%lx\n", ip + offset);
		return ret;
	}

	if (!kpatch_num_patched) {
		ret = register_ftrace_function(&kpatch_ftrace_ops);
    16ac:	64440000 	daddiu	a0,v0,0
    16b0:	3c020000 	lui	v0,0x0
    16b4:	64420000 	daddiu	v0,v0,0
    16b8:	0040f809 	jalr	v0
    16bc:	ffa50000 	sd	a1,0(sp)
/home/loongson/kpatch/kmod/core/core.c:617
		if (ret) {
    16c0:	dfa50000 	ld	a1,0(sp)
    16c4:	1040ffe9 	beqz	v0,166c <kpatch_link_object+0x5a4>
    16c8:	0040a82d 	move	s5,v0
/home/loongson/kpatch/kmod/core/core.c:618
			pr_err("can't register ftrace handler\n");
    16cc:	3c040000 	lui	a0,0x0
    16d0:	0200f809 	jalr	s0
    16d4:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:623

			//ftrace_set_filter_ip(&kpatch_ftrace_ops, ip, 1, 0);
			
			//MIPS
			ftrace_set_filter_ip(&kpatch_ftrace_ops, ip + offset, 1, 0);
    16d8:	3c030000 	lui	v1,0x0
    16dc:	64640000 	daddiu	a0,v1,0
    16e0:	3c030000 	lui	v1,0x0
    16e4:	02c0282d 	move	a1,s6
    16e8:	24060001 	li	a2,1
    16ec:	64630000 	daddiu	v1,v1,0
    16f0:	0060f809 	jalr	v1
    16f4:	0000382d 	move	a3,zero
kpatch_link_object():
/home/loongson/kpatch/kmod/core/core.c:1002
	}

	return 0;

err_ftrace:
	list_for_each_entry(func, &object->funcs, list) {
    16f8:	de370018 	ld	s7,24(s1)
/home/loongson/kpatch/kmod/core/core.c:1005
		if (func == func_err)
			break;
		WARN_ON(kpatch_ftrace_remove_func(func->old_addr));
    16fc:	3c100000 	lui	s0,0x0
/home/loongson/kpatch/kmod/core/core.c:1002
	}

	return 0;

err_ftrace:
	list_for_each_entry(func, &object->funcs, list) {
    1700:	66f7ffd0 	daddiu	s7,s7,-48
/home/loongson/kpatch/kmod/core/core.c:1005
		if (func == func_err)
			break;
		WARN_ON(kpatch_ftrace_remove_func(func->old_addr));
    1704:	3c160000 	lui	s6,0x0
    1708:	66100000 	daddiu	s0,s0,0
    170c:	3c110000 	lui	s1,0x0
/home/loongson/kpatch/kmod/core/core.c:1002 (discriminator 8)
	}

	return 0;

err_ftrace:
	list_for_each_entry(func, &object->funcs, list) {
    1710:	dfa30010 	ld	v1,16(sp)
    1714:	66e20030 	daddiu	v0,s7,48
    1718:	1062ff82 	beq	v1,v0,1524 <kpatch_link_object+0x45c>
    171c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1003
		if (func == func_err)
    1720:	12f4ff80 	beq	s7,s4,1524 <kpatch_link_object+0x45c>
    1724:	66c20000 	daddiu	v0,s6,0
/home/loongson/kpatch/kmod/core/core.c:1005
			break;
		WARN_ON(kpatch_ftrace_remove_func(func->old_addr));
    1728:	0040f809 	jalr	v0
    172c:	dee40010 	ld	a0,16(s7)
    1730:	10400004 	beqz	v0,1744 <kpatch_link_object+0x67c>
    1734:	0200202d 	move	a0,s0
/home/loongson/kpatch/kmod/core/core.c:1005 (discriminator 1)
    1738:	66220000 	daddiu	v0,s1,0
    173c:	0040f809 	jalr	v0
    1740:	240503ed 	li	a1,1005
/home/loongson/kpatch/kmod/core/core.c:1002 (discriminator 3)
	}

	return 0;

err_ftrace:
	list_for_each_entry(func, &object->funcs, list) {
    1744:	def70030 	ld	s7,48(s7)
    1748:	08000000 	j	0 <kpatch_get_func>
    174c:	66f7ffd0 	daddiu	s7,s7,-48
/home/loongson/kpatch/kmod/core/core.c:973 (discriminator 3)

printk("kpatch_func name: %s old_addr: %lx new_addr: %lx old_size:%lx  new_size: %lx\n", func->name, func->old_addr, func->new_addr, func->old_size, func->new_size);

tmp = (unsigned long)func->new_addr;
for (i = 0; i < func->new_size / 4; i++, k += 4) {
printk("%x %x\n", k, tmp[i]);
    1750:	0062102d 	daddu	v0,v1,v0
    1754:	8c460000 	lw	a2,0(v0)
    1758:	3c040000 	lui	a0,0x0
    175c:	02e0282d 	move	a1,s7
    1760:	64840000 	daddiu	a0,a0,0
    1764:	0200f809 	jalr	s0
    1768:	ffa30000 	sd	v1,0(sp)
/home/loongson/kpatch/kmod/core/core.c:972 (discriminator 3)
						&func->old_addr);

printk("kpatch_func name: %s old_addr: %lx new_addr: %lx old_size:%lx  new_size: %lx\n", func->name, func->old_addr, func->new_addr, func->old_size, func->new_size);

tmp = (unsigned long)func->new_addr;
for (i = 0; i < func->new_size / 4; i++, k += 4) {
    176c:	26d60001 	addiu	s6,s6,1
    1770:	26f70004 	addiu	s7,s7,4
    1774:	08000000 	j	0 <kpatch_get_func>
    1778:	dfa30000 	ld	v1,0(sp)
kpatch_ftrace_add_func():
/home/loongson/kpatch/kmod/core/core.c:611
	
	//MIPS，kpatch_ftrace_add_func接口由用户态调用，提供的ip地址为函数入口地址
	ret = ftrace_set_filter_ip(&kpatch_ftrace_ops, ip + offset, 0, 0);
	
	if (ret) {
		pr_err("can't set ftrace filter at address 0x%lx\n", ip + offset);
    177c:	3c040000 	lui	a0,0x0
    1780:	64840000 	daddiu	a0,a0,0
    1784:	0200f809 	jalr	s0
    1788:	02c0282d 	move	a1,s6
kpatch_link_object():
/home/loongson/kpatch/kmod/core/core.c:1002
	}

	return 0;

err_ftrace:
	list_for_each_entry(func, &object->funcs, list) {
    178c:	08000000 	j	0 <kpatch_get_func>
    1790:	de370018 	ld	s7,24(s1)
/home/loongson/kpatch/kmod/core/core.c:986
		
		//MIPS，获取指令偏移量
		list_for_each_entry(insn, &object->insns, list) {
printk("old_addr: %lx offset: %lx\n", insn->old_addr, insn->offset);
			if (func->old_addr == insn->old_addr) {
				insn_offset = insn->offset;
    1794:	deb50010 	ld	s5,16(s5)
/home/loongson/kpatch/kmod/core/core.c:987
				break;
    1798:	08000000 	j	0 <kpatch_get_func>
    179c:	ffb50008 	sd	s5,8(sp)

00000000000017a0 <kpatch_module_notify_coming>:
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1015
	return ret;
}

static int kpatch_module_notify_coming(struct notifier_block *nb,
				       unsigned long action, void *data)
{
    17a0:	67bdffb0 	daddiu	sp,sp,-80
    17a4:	ffbf0048 	sd	ra,72(sp)
    17a8:	ffbe0040 	sd	s8,64(sp)
    17ac:	ffb70038 	sd	s7,56(sp)
    17b0:	ffb60030 	sd	s6,48(sp)
    17b4:	ffb50028 	sd	s5,40(sp)
    17b8:	ffb40020 	sd	s4,32(sp)
    17bc:	ffb30018 	sd	s3,24(sp)
    17c0:	ffb20010 	sd	s2,16(sp)
    17c4:	ffb10008 	sd	s1,8(sp)
    17c8:	ffb00000 	sd	s0,0(sp)
    17cc:	3c030000 	lui	v1,0x0
    17d0:	64630000 	daddiu	v1,v1,0
    17d4:	03e0082d 	move	at,ra
    17d8:	0060f809 	jalr	v1
    17dc:	67ac0048 	daddiu	t0,sp,72
/home/loongson/kpatch/kmod/core/core.c:1023
	struct kpatch_object *object;
	struct kpatch_func *func;
	int ret = 0;
	bool found = false;

printk("kpatch_module_notify_coming\n");
    17e0:	3c040000 	lui	a0,0x0
    17e4:	3c120000 	lui	s2,0x0
    17e8:	64840000 	daddiu	a0,a0,0
    17ec:	66520000 	daddiu	s2,s2,0
/home/loongson/kpatch/kmod/core/core.c:1015
	return ret;
}

static int kpatch_module_notify_coming(struct notifier_block *nb,
				       unsigned long action, void *data)
{
    17f0:	00a0802d 	move	s0,a1
/home/loongson/kpatch/kmod/core/core.c:1023
	struct kpatch_object *object;
	struct kpatch_func *func;
	int ret = 0;
	bool found = false;

printk("kpatch_module_notify_coming\n");
    17f4:	0240f809 	jalr	s2
    17f8:	00c0982d 	move	s3,a2
/home/loongson/kpatch/kmod/core/core.c:1024
	if (action != MODULE_STATE_COMING)
    17fc:	24020001 	li	v0,1
    1800:	1202000f 	beq	s0,v0,1840 <kpatch_module_notify_coming+0xa0>
    1804:	dfbf0048 	ld	ra,72(sp)
/home/loongson/kpatch/kmod/core/core.c:1072
	/* no way to stop the module load on error */
	WARN(ret, "error (%d) patching newly loaded module '%s'\n", ret,
	     object->name);

	return 0;
}
    1808:	dfbe0040 	ld	s8,64(sp)
    180c:	dfb70038 	ld	s7,56(sp)
    1810:	dfb60030 	ld	s6,48(sp)
    1814:	00000000 	nop
    1818:	dfb50028 	ld	s5,40(sp)
    181c:	dfb40020 	ld	s4,32(sp)
    1820:	dfb30018 	ld	s3,24(sp)
    1824:	00000000 	nop
    1828:	dfb20010 	ld	s2,16(sp)
    182c:	dfb10008 	ld	s1,8(sp)
    1830:	dfb00000 	ld	s0,0(sp)
    1834:	0000102d 	move	v0,zero
    1838:	03e00008 	jr	ra
    183c:	67bd0050 	daddiu	sp,sp,80
/home/loongson/kpatch/kmod/core/core.c:1027

printk("kpatch_module_notify_coming\n");
	if (action != MODULE_STATE_COMING)
		return 0;

	down(&kpatch_mutex);
    1840:	3c020000 	lui	v0,0x0
    1844:	64440000 	daddiu	a0,v0,0
    1848:	3c020000 	lui	v0,0x0
    184c:	64420000 	daddiu	v0,v0,0
    1850:	0040f809 	jalr	v0
    1854:	3c140000 	lui	s4,0x0
/home/loongson/kpatch/kmod/core/core.c:1029

	list_for_each_entry(kpmod, &kpmod_list, list) {
    1858:	de820000 	ld	v0,0(s4)
    185c:	66940000 	daddiu	s4,s4,0
    1860:	10540062 	beq	v0,s4,19ec <kpatch_module_notify_coming+0x24c>
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    1864:	6457ffe0 	daddiu	s7,v0,-32
kpatch_object_linked():
    1868:	3c150000 	lui	s5,0x0
    186c:	3c160000 	lui	s6,0x0
    1870:	66b50000 	daddiu	s5,s5,0
    1874:	66d60000 	daddiu	s6,s6,0
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1033

	list_for_each_entry(kpmod, &kpmod_list, list) {
		list_for_each_entry(object, &kpmod->objects, list) {
			if (kpatch_object_linked(object))
				continue;
			if (!strcmp(object->name, mod->name)) {
    1878:	66730018 	daddiu	s3,s3,24
/home/loongson/kpatch/kmod/core/core.c:1030
		return 0;

	down(&kpatch_mutex);

	list_for_each_entry(kpmod, &kpmod_list, list) {
		list_for_each_entry(object, &kpmod->objects, list) {
    187c:	def00008 	ld	s0,8(s7)
    1880:	66f10008 	daddiu	s1,s7,8
    1884:	16110007 	bne	s0,s1,18a4 <kpatch_module_notify_coming+0x104>
    1888:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1029
	if (action != MODULE_STATE_COMING)
		return 0;

	down(&kpatch_mutex);

	list_for_each_entry(kpmod, &kpmod_list, list) {
    188c:	08000000 	j	0 <kpatch_get_func>
    1890:	dee20020 	ld	v0,32(s7)
    1894:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1030
		list_for_each_entry(object, &kpmod->objects, list) {
    1898:	de100000 	ld	s0,0(s0)
    189c:	1211005c 	beq	s0,s1,1a10 <kpatch_module_notify_coming+0x270>
    18a0:	00000000 	nop
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    18a4:	de020070 	ld	v0,112(s0)
    18a8:	1440fffb 	bnez	v0,1898 <kpatch_module_notify_coming+0xf8>
    18ac:	de040010 	ld	a0,16(s0)
    18b0:	02a0282d 	move	a1,s5
    18b4:	02c0f809 	jalr	s6
    18b8:	02c0f02d 	move	s8,s6
    18bc:	1040fff6 	beqz	v0,1898 <kpatch_module_notify_coming+0xf8>
    18c0:	0260282d 	move	a1,s3
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1033

	list_for_each_entry(kpmod, &kpmod_list, list) {
		list_for_each_entry(object, &kpmod->objects, list) {
			if (kpatch_object_linked(object))
				continue;
			if (!strcmp(object->name, mod->name)) {
    18c4:	02c0f809 	jalr	s6
    18c8:	de040010 	ld	a0,16(s0)
    18cc:	1440fff2 	bnez	v0,1898 <kpatch_module_notify_coming+0xf8>
    18d0:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:1043
	}
done:
	if (!found)
		goto out;

	ret = kpatch_link_object(kpmod, object);
    18d4:	02e0202d 	move	a0,s7
    18d8:	64420000 	daddiu	v0,v0,0
    18dc:	0040f809 	jalr	v0
    18e0:	0200282d 	move	a1,s0
/home/loongson/kpatch/kmod/core/core.c:1044
	if (ret)
    18e4:	10400050 	beqz	v0,1a28 <kpatch_module_notify_coming+0x288>
    18e8:	0040882d 	move	s1,v0
/home/loongson/kpatch/kmod/core/core.c:1065
		hash_add_rcu(kpatch_func_hash, &func->node, func->old_addr);

	/* run user-defined post-patch callback */
	post_patch_callback(object);
out:
	up(&kpatch_mutex);
    18ec:	3c020000 	lui	v0,0x0
    18f0:	3c030000 	lui	v1,0x0
    18f4:	64630000 	daddiu	v1,v1,0
    18f8:	0060f809 	jalr	v1
    18fc:	64440000 	daddiu	a0,v0,0
/home/loongson/kpatch/kmod/core/core.c:1068

	/* no way to stop the module load on error */
	WARN(ret, "error (%d) patching newly loaded module '%s'\n", ret,
    1900:	de080010 	ld	a4,16(s0)
    1904:	3c040000 	lui	a0,0x0
    1908:	3c060000 	lui	a2,0x0
    190c:	3c020000 	lui	v0,0x0
    1910:	64840000 	daddiu	a0,a0,0
    1914:	2405042d 	li	a1,1069
    1918:	64c60000 	daddiu	a2,a2,0
    191c:	64420000 	daddiu	v0,v0,0
    1920:	0040f809 	jalr	v0
    1924:	0220382d 	move	a3,s1
/home/loongson/kpatch/kmod/core/core.c:1072
	     object->name);

	return 0;
}
    1928:	08000000 	j	0 <kpatch_get_func>
    192c:	dfbf0048 	ld	ra,72(sp)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    1930:	03c0f809 	jalr	s8
    1934:	02a0282d 	move	a1,s5
    1938:	10400045 	beqz	v0,1a50 <kpatch_module_notify_coming+0x2b0>
    193c:	00000000 	nop
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1059
		pr_err("pre-patch callback failed!\n");
		goto out;	/* and WARN */
	}

	/* add to the global func hash */
	list_for_each_entry(func, &object->funcs, list)
    1940:	de020018 	ld	v0,24(s0)
pre_patch_callback():
/home/loongson/kpatch/kmod/core/core.c:345
		if (ret) {
			object->callbacks_enabled = false;
			return ret;
		}
	}
	object->callbacks_enabled = true;
    1944:	24030001 	li	v1,1
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1059
		pr_err("pre-patch callback failed!\n");
		goto out;	/* and WARN */
	}

	/* add to the global func hash */
	list_for_each_entry(func, &object->funcs, list)
    1948:	66080018 	daddiu	a4,s0,24
pre_patch_callback():
/home/loongson/kpatch/kmod/core/core.c:345
		if (ret) {
			object->callbacks_enabled = false;
			return ret;
		}
	}
	object->callbacks_enabled = true;
    194c:	a2030068 	sb	v1,104(s0)
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1059
		pr_err("pre-patch callback failed!\n");
		goto out;	/* and WARN */
	}

	/* add to the global func hash */
	list_for_each_entry(func, &object->funcs, list)
    1950:	1102001b 	beq	a4,v0,19c0 <kpatch_module_notify_coming+0x220>
    1954:	6443ffd0 	daddiu	v1,v0,-48
hash_64_generic():
/home/loongson/linux-4.19-loongson/./include/linux/hash.h:81 (discriminator 9)
    1958:	3c0630e4 	lui	a2,0x30e4
    195c:	64c64323 	daddiu	a2,a2,17187
    1960:	00063438 	dsll	a2,a2,0x10
    1964:	64c6405b 	daddiu	a2,a2,16475
    1968:	3c070000 	lui	a3,0x0
    196c:	00063478 	dsll	a2,a2,0x11
    1970:	64e70000 	daddiu	a3,a3,0
    1974:	64c683eb 	daddiu	a2,a2,-31765
    1978:	dc620010 	ld	v0,16(v1)
    197c:	0046001c 	dmult	v0,a2
    1980:	00001012 	mflo	v0
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1060 (discriminator 9)
		hash_add_rcu(kpatch_func_hash, &func->node, func->old_addr);
    1984:	0002163e 	dsrl32	v0,v0,0x18
    1988:	000210f8 	dsll	v0,v0,0x3
    198c:	00e2102d 	daddu	v0,a3,v0
hlist_add_head_rcu():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:510 (discriminator 9)
 * list-traversal primitive must be guarded by rcu_read_lock().
 */
static inline void hlist_add_head_rcu(struct hlist_node *n,
					struct hlist_head *h)
{
	struct hlist_node *first = h->first;
    1990:	dc440000 	ld	a0,0(v0)
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:513 (discriminator 9)

	n->next = first;
	n->pprev = &h->first;
    1994:	fc620050 	sd	v0,80(v1)
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:512 (discriminator 9)
static inline void hlist_add_head_rcu(struct hlist_node *n,
					struct hlist_head *h)
{
	struct hlist_node *first = h->first;

	n->next = first;
    1998:	fc640048 	sd	a0,72(v1)
/home/loongson/kpatch/kmod/core/core.c:1060 (discriminator 9)
    199c:	0000000f 	sync
kpatch_module_notify_coming():
    19a0:	64650048 	daddiu	a1,v1,72
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220 (discriminator 9)
    19a4:	fc450000 	sd	a1,0(v0)
hlist_add_head_rcu():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:515 (discriminator 9)
	n->pprev = &h->first;
	rcu_assign_pointer(hlist_first_rcu(h), n);
	if (first)
    19a8:	10800002 	beqz	a0,19b4 <kpatch_module_notify_coming+0x214>
    19ac:	00000000 	nop
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:516
		first->pprev = &n->next;
    19b0:	fc850008 	sd	a1,8(a0)
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1059 (discriminator 9)
		pr_err("pre-patch callback failed!\n");
		goto out;	/* and WARN */
	}

	/* add to the global func hash */
	list_for_each_entry(func, &object->funcs, list)
    19b4:	dc620030 	ld	v0,48(v1)
    19b8:	1502ffef 	bne	a4,v0,1978 <kpatch_module_notify_coming+0x1d8>
    19bc:	6443ffd0 	daddiu	v1,v0,-48
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    19c0:	de020070 	ld	v0,112(s0)
    19c4:	1040002f 	beqz	v0,1a84 <kpatch_module_notify_coming+0x2e4>
    19c8:	de040010 	ld	a0,16(s0)
post_patch_callback():
/home/loongson/kpatch/kmod/core/core.c:353
}

static inline void post_patch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->post_patch_callback &&
    19cc:	de020050 	ld	v0,80(s0)
/home/loongson/kpatch/kmod/core/core.c:352
	return 0;
}

static inline void post_patch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
    19d0:	10400006 	beqz	v0,19ec <kpatch_module_notify_coming+0x24c>
    19d4:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:353
	    object->post_patch_callback &&
    19d8:	92030068 	lbu	v1,104(s0)
    19dc:	10600003 	beqz	v1,19ec <kpatch_module_notify_coming+0x24c>
    19e0:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:355
	    object->callbacks_enabled)
		(*object->post_patch_callback)(object);
    19e4:	0040f809 	jalr	v0
    19e8:	0200202d 	move	a0,s0
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1065
		hash_add_rcu(kpatch_func_hash, &func->node, func->old_addr);

	/* run user-defined post-patch callback */
	post_patch_callback(object);
out:
	up(&kpatch_mutex);
    19ec:	3c020000 	lui	v0,0x0
    19f0:	64440000 	daddiu	a0,v0,0
    19f4:	3c020000 	lui	v0,0x0
    19f8:	64420000 	daddiu	v0,v0,0
    19fc:	0040f809 	jalr	v0
    1a00:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1072
	/* no way to stop the module load on error */
	WARN(ret, "error (%d) patching newly loaded module '%s'\n", ret,
	     object->name);

	return 0;
}
    1a04:	08000000 	j	0 <kpatch_get_func>
    1a08:	dfbf0048 	ld	ra,72(sp)
    1a0c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1029
	if (action != MODULE_STATE_COMING)
		return 0;

	down(&kpatch_mutex);

	list_for_each_entry(kpmod, &kpmod_list, list) {
    1a10:	dee20020 	ld	v0,32(s7)
    1a14:	00000000 	nop
    1a18:	1454ff98 	bne	v0,s4,187c <kpatch_module_notify_coming+0xdc>
    1a1c:	6457ffe0 	daddiu	s7,v0,-32
/home/loongson/kpatch/kmod/core/core.c:1065
		hash_add_rcu(kpatch_func_hash, &func->node, func->old_addr);

	/* run user-defined post-patch callback */
	post_patch_callback(object);
out:
	up(&kpatch_mutex);
    1a20:	08000000 	j	0 <kpatch_get_func>
    1a24:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:1047

	ret = kpatch_link_object(kpmod, object);
	if (ret)
		goto out;

	BUG_ON(!object->mod);
    1a28:	de020070 	ld	v0,112(s0)
    1a2c:	2c420001 	sltiu	v0,v0,1
__BUG_ON():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/bug.h:30
		if (condition)
			BUG();
		else
			return;
	}
	__asm__ __volatile__("tne $0, %0, %1"
    1a30:	00020336 	tne	zero,v0,0xc
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1049

	pr_notice("patching newly loaded module '%s'\n", object->name);
    1a34:	3c040000 	lui	a0,0x0
    1a38:	de050010 	ld	a1,16(s0)
    1a3c:	0240f809 	jalr	s2
    1a40:	64840000 	daddiu	a0,a0,0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    1a44:	de020070 	ld	v0,112(s0)
    1a48:	1040ffb9 	beqz	v0,1930 <kpatch_module_notify_coming+0x190>
    1a4c:	de040010 	ld	a0,16(s0)
pre_patch_callback():
/home/loongson/kpatch/kmod/core/core.c:338
static inline int pre_patch_callback(struct kpatch_object *object)
{
	int ret;

	if (kpatch_object_linked(object) &&
	    object->pre_patch_callback) {
    1a50:	de020048 	ld	v0,72(s0)
/home/loongson/kpatch/kmod/core/core.c:337

static inline int pre_patch_callback(struct kpatch_object *object)
{
	int ret;

	if (kpatch_object_linked(object) &&
    1a54:	1040ffba 	beqz	v0,1940 <kpatch_module_notify_coming+0x1a0>
    1a58:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:339
	    object->pre_patch_callback) {
		ret = (*object->pre_patch_callback)(object);
    1a5c:	0040f809 	jalr	v0
    1a60:	0200202d 	move	a0,s0
/home/loongson/kpatch/kmod/core/core.c:340
		if (ret) {
    1a64:	1040ffb6 	beqz	v0,1940 <kpatch_module_notify_coming+0x1a0>
    1a68:	0040882d 	move	s1,v0
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1054
	pr_notice("patching newly loaded module '%s'\n", object->name);

	/* run user-defined pre-patch callback */
	ret = pre_patch_callback(object);
	if (ret) {
		pr_err("pre-patch callback failed!\n");
    1a6c:	3c040000 	lui	a0,0x0
    1a70:	64840000 	daddiu	a0,a0,0
    1a74:	0240f809 	jalr	s2
    1a78:	a2000068 	sb	zero,104(s0)
/home/loongson/kpatch/kmod/core/core.c:1055
		goto out;	/* and WARN */
    1a7c:	08000000 	j	0 <kpatch_get_func>
    1a80:	3c020000 	lui	v0,0x0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    1a84:	3c050000 	lui	a1,0x0
    1a88:	03c0f809 	jalr	s8
    1a8c:	64a50000 	daddiu	a1,a1,0
    1a90:	1040ffce 	beqz	v0,19cc <kpatch_module_notify_coming+0x22c>
    1a94:	3c020000 	lui	v0,0x0
kpatch_module_notify_coming():
/home/loongson/kpatch/kmod/core/core.c:1065
		hash_add_rcu(kpatch_func_hash, &func->node, func->old_addr);

	/* run user-defined post-patch callback */
	post_patch_callback(object);
out:
	up(&kpatch_mutex);
    1a98:	08000000 	j	0 <kpatch_get_func>
    1a9c:	64440000 	daddiu	a0,v0,0

0000000000001aa0 <kpatch_unlink_object>:
kpatch_unlink_object():
/home/loongson/kpatch/kmod/core/core.c:892

	return 0;
}

static int kpatch_unlink_object(struct kpatch_object *object)
{
    1aa0:	67bdffc0 	daddiu	sp,sp,-64
    1aa4:	ffbf0038 	sd	ra,56(sp)
    1aa8:	ffb30030 	sd	s3,48(sp)
    1aac:	ffb20028 	sd	s2,40(sp)
    1ab0:	ffb10020 	sd	s1,32(sp)
    1ab4:	ffb00018 	sd	s0,24(sp)
    1ab8:	3c030000 	lui	v1,0x0
    1abc:	64630000 	daddiu	v1,v1,0
    1ac0:	03e0082d 	move	at,ra
    1ac4:	0060f809 	jalr	v1
    1ac8:	67ac0038 	daddiu	t0,sp,56
/home/loongson/kpatch/kmod/core/core.c:896
	struct kpatch_func *func;
	int ret;

	list_for_each_entry(func, &object->funcs, list) {
    1acc:	dc820018 	ld	v0,24(a0)
    1ad0:	64910018 	daddiu	s1,a0,24
/home/loongson/kpatch/kmod/core/core.c:892

	return 0;
}

static int kpatch_unlink_object(struct kpatch_object *object)
{
    1ad4:	0080982d 	move	s3,a0
/home/loongson/kpatch/kmod/core/core.c:896
	struct kpatch_func *func;
	int ret;

	list_for_each_entry(func, &object->funcs, list) {
    1ad8:	1222001f 	beq	s1,v0,1b58 <kpatch_unlink_object+0xb8>
    1adc:	6450ffd0 	daddiu	s0,v0,-48
/home/loongson/kpatch/kmod/core/core.c:899
		if (!func->old_addr)
			continue;
		ret = kpatch_ftrace_remove_func(func->old_addr);
    1ae0:	08000000 	j	0 <kpatch_get_func>
    1ae4:	3c120000 	lui	s2,0x0
/home/loongson/kpatch/kmod/core/core.c:896
static int kpatch_unlink_object(struct kpatch_object *object)
{
	struct kpatch_func *func;
	int ret;

	list_for_each_entry(func, &object->funcs, list) {
    1ae8:	de020030 	ld	v0,48(s0)
    1aec:	1222001a 	beq	s1,v0,1b58 <kpatch_unlink_object+0xb8>
    1af0:	6450ffd0 	daddiu	s0,v0,-48
/home/loongson/kpatch/kmod/core/core.c:897
		if (!func->old_addr)
    1af4:	de040010 	ld	a0,16(s0)
    1af8:	1080fffb 	beqz	a0,1ae8 <kpatch_unlink_object+0x48>
    1afc:	66420000 	daddiu	v0,s2,0
/home/loongson/kpatch/kmod/core/core.c:899
			continue;
		ret = kpatch_ftrace_remove_func(func->old_addr);
    1b00:	0040f809 	jalr	v0
    1b04:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:900
		if (ret) {
    1b08:	1040fff7 	beqz	v0,1ae8 <kpatch_unlink_object+0x48>
    1b0c:	3c040000 	lui	a0,0x0
/home/loongson/kpatch/kmod/core/core.c:901
			WARN(1, "can't unregister ftrace for address 0x%lx\n",
    1b10:	de070010 	ld	a3,16(s0)
    1b14:	3c060000 	lui	a2,0x0
    1b18:	3c030000 	lui	v1,0x0
    1b1c:	64840000 	daddiu	a0,a0,0
    1b20:	24050386 	li	a1,902
    1b24:	64c60000 	daddiu	a2,a2,0
    1b28:	64630000 	daddiu	v1,v1,0
    1b2c:	0060f809 	jalr	v1
    1b30:	ffa20008 	sd	v0,8(sp)
/home/loongson/kpatch/kmod/core/core.c:913
		module_put(object->mod);
		object->mod = NULL;
	}

	return 0;
}
    1b34:	dfbf0038 	ld	ra,56(sp)
/home/loongson/kpatch/kmod/core/core.c:899
	int ret;

	list_for_each_entry(func, &object->funcs, list) {
		if (!func->old_addr)
			continue;
		ret = kpatch_ftrace_remove_func(func->old_addr);
    1b38:	dfa20008 	ld	v0,8(sp)
/home/loongson/kpatch/kmod/core/core.c:913
		module_put(object->mod);
		object->mod = NULL;
	}

	return 0;
}
    1b3c:	dfb30030 	ld	s3,48(sp)
    1b40:	00000000 	nop
    1b44:	dfb20028 	ld	s2,40(sp)
    1b48:	dfb10020 	ld	s1,32(sp)
    1b4c:	dfb00018 	ld	s0,24(sp)
    1b50:	03e00008 	jr	ra
    1b54:	67bd0040 	daddiu	sp,sp,64
/home/loongson/kpatch/kmod/core/core.c:907
			     func->old_addr);
			return ret;
		}
	}

	if (object->mod) {
    1b58:	de640070 	ld	a0,112(s3)
    1b5c:	10800005 	beqz	a0,1b74 <kpatch_unlink_object+0xd4>
    1b60:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:908
		module_put(object->mod);
    1b64:	64420000 	daddiu	v0,v0,0
    1b68:	0040f809 	jalr	v0
    1b6c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:909
		object->mod = NULL;
    1b70:	fe600070 	sd	zero,112(s3)
/home/loongson/kpatch/kmod/core/core.c:913
	}

	return 0;
}
    1b74:	dfbf0038 	ld	ra,56(sp)
    1b78:	dfb30030 	ld	s3,48(sp)
    1b7c:	dfb20028 	ld	s2,40(sp)
    1b80:	00000000 	nop
    1b84:	dfb10020 	ld	s1,32(sp)
    1b88:	dfb00018 	ld	s0,24(sp)
/home/loongson/kpatch/kmod/core/core.c:912
	if (object->mod) {
		module_put(object->mod);
		object->mod = NULL;
	}

	return 0;
    1b8c:	0000102d 	move	v0,zero
/home/loongson/kpatch/kmod/core/core.c:913
}
    1b90:	03e00008 	jr	ra
    1b94:	67bd0040 	daddiu	sp,sp,64

0000000000001b98 <kpatch_register>:
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1152

	return force;
}

int kpatch_register(struct kpatch_module *kpmod, bool replace)
{
    1b98:	67bdff70 	daddiu	sp,sp,-144
    1b9c:	ffbf0088 	sd	ra,136(sp)
    1ba0:	ffbe0080 	sd	s8,128(sp)
    1ba4:	ffb70078 	sd	s7,120(sp)
    1ba8:	ffb60070 	sd	s6,112(sp)
    1bac:	ffb50068 	sd	s5,104(sp)
    1bb0:	ffb40060 	sd	s4,96(sp)
    1bb4:	ffb30058 	sd	s3,88(sp)
    1bb8:	ffb20050 	sd	s2,80(sp)
    1bbc:	ffb10048 	sd	s1,72(sp)
    1bc0:	ffb00040 	sd	s0,64(sp)
    1bc4:	3c030000 	lui	v1,0x0
    1bc8:	64630000 	daddiu	v1,v1,0
    1bcc:	03e0082d 	move	at,ra
    1bd0:	0060f809 	jalr	v1
    1bd4:	67ac0088 	daddiu	t0,sp,136
    1bd8:	00051000 	sll	v0,a1,0x0
    1bdc:	304300ff 	andi	v1,v0,0xff
    1be0:	3c160000 	lui	s6,0x0
    1be4:	ffa30008 	sd	v1,8(sp)
    1be8:	dec30000 	ld	v1,0(s6)
    1bec:	0080802d 	move	s0,a0
    1bf0:	ffa30038 	sd	v1,56(sp)
/home/loongson/kpatch/kmod/core/core.c:1163
	struct kpatch_apply_patch_args args = {
		.kpmod = kpmod,
		.replace = replace,
	};

printk("replace value: %d\n", (int)replace);
    1bf4:	3c040000 	lui	a0,0x0
    1bf8:	dfa50008 	ld	a1,8(sp)
    1bfc:	3c030000 	lui	v1,0x0
    1c00:	64840000 	daddiu	a0,a0,0
    1c04:	64630000 	daddiu	v1,v1,0
/home/loongson/kpatch/kmod/core/core.c:1158
	int ret, i;
	struct kpatch_object *object, *object_err = NULL;
	struct kpatch_func *func;


	struct kpatch_apply_patch_args args = {
    1c08:	ffb00028 	sd	s0,40(sp)
/home/loongson/kpatch/kmod/core/core.c:1163
		.kpmod = kpmod,
		.replace = replace,
	};

printk("replace value: %d\n", (int)replace);
    1c0c:	0060f809 	jalr	v1
    1c10:	a3a20030 	sb	v0,48(sp)
/home/loongson/kpatch/kmod/core/core.c:1164
	if (!kpmod->mod || list_empty(&kpmod->objects))
    1c14:	de020000 	ld	v0,0(s0)
    1c18:	104000a7 	beqz	v0,1eb8 <kpatch_register+0x320>
    1c1c:	2402ffea 	li	v0,-22
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193 (discriminator 1)
})

static __always_inline
void __read_once_size(const volatile void *p, void *res, int size)
{
	__READ_ONCE_SIZE;
    1c20:	de020008 	ld	v0,8(s0)
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1164 (discriminator 1)
    1c24:	66110008 	daddiu	s1,s0,8
    1c28:	122200a3 	beq	s1,v0,1eb8 <kpatch_register+0x320>
    1c2c:	2402ffea 	li	v0,-22
/home/loongson/kpatch/kmod/core/core.c:1167
		return -EINVAL;

	down(&kpatch_mutex);
    1c30:	3c150000 	lui	s5,0x0
    1c34:	3c020000 	lui	v0,0x0
    1c38:	64420000 	daddiu	v0,v0,0
    1c3c:	0040f809 	jalr	v0
    1c40:	66a40000 	daddiu	a0,s5,0
/home/loongson/kpatch/kmod/core/core.c:1169

	if (kpmod->enabled) {
    1c44:	92020018 	lbu	v0,24(s0)
    1c48:	14400095 	bnez	v0,1ea0 <kpatch_register+0x308>
    1c4c:	3c040000 	lui	a0,0x0
list_add_tail():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:93
 * Insert a new entry before the specified head.
 * This is useful for implementing queues.
 */
static inline void list_add_tail(struct list_head *new, struct list_head *head)
{
	__list_add(new, head->prev, head);
    1c50:	64840000 	daddiu	a0,a0,0
    1c54:	dc820008 	ld	v0,8(a0)
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1174
		ret = -EINVAL;
		goto err_up;
	}

	list_add_tail(&kpmod->list, &kpmod_list);
    1c58:	66030020 	daddiu	v1,s0,32
__list_add():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:63
			      struct list_head *next)
{
	if (!__list_add_valid(new, prev, next))
		return;

	next->prev = new;
    1c5c:	fc830008 	sd	v1,8(a0)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:64
	new->next = next;
    1c60:	fe040020 	sd	a0,32(s0)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:65
	new->prev = prev;
    1c64:	fe020028 	sd	v0,40(s0)
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
{
	switch (size) {
	case 1: *(volatile __u8 *)p = *(__u8 *)res; break;
	case 2: *(volatile __u16 *)p = *(__u16 *)res; break;
	case 4: *(volatile __u32 *)p = *(__u32 *)res; break;
	case 8: *(volatile __u64 *)p = *(__u64 *)res; break;
    1c68:	fc430000 	sd	v1,0(v0)
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1176

	if (!try_module_get(kpmod->mod)) {
    1c6c:	3c020000 	lui	v0,0x0
    1c70:	64420000 	daddiu	v0,v0,0
    1c74:	0040f809 	jalr	v0
    1c78:	de040000 	ld	a0,0(s0)
    1c7c:	10400111 	beqz	v0,20c4 <kpatch_register+0x52c>
    1c80:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1181
		ret = -ENODEV;
		goto err_list;
	}

	list_for_each_entry(object, &kpmod->objects, list) {
    1c84:	de1e0008 	ld	s8,8(s0)
    1c88:	123e001e 	beq	s1,s8,1d04 <kpatch_register+0x16c>
    1c8c:	dfa30008 	ld	v1,8(sp)
    1c90:	3c120000 	lui	s2,0x0
    1c94:	66520000 	daddiu	s2,s2,0
/home/loongson/kpatch/kmod/core/core.c:1198

		if (strcmp(object->name, "vmlinux"))
			pr_notice("patching module '%s'\n", object->name);

		list_for_each_entry(func, &object->funcs, list)
			func->op = KPATCH_OP_PATCH; //设置func的操作属性为KPATCH_OP_PATCH
    1c98:	24140001 	li	s4,1
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    1c9c:	3c130000 	lui	s3,0x0
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1182
		ret = -ENODEV;
		goto err_list;
	}

	list_for_each_entry(object, &kpmod->objects, list) {
		ret = kpatch_link_object(kpmod, object);
    1ca0:	0200202d 	move	a0,s0
    1ca4:	0240f809 	jalr	s2
    1ca8:	03c0282d 	move	a1,s8
/home/loongson/kpatch/kmod/core/core.c:1183
		if (ret) {
    1cac:	144000e8 	bnez	v0,2050 <kpatch_register+0x4b8>
    1cb0:	0040b82d 	move	s7,v0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    1cb4:	dfc20070 	ld	v0,112(s8)
    1cb8:	10400090 	beqz	v0,1efc <kpatch_register+0x364>
    1cbc:	dfc40010 	ld	a0,16(s8)
    1cc0:	3c080000 	lui	a4,0x0
    1cc4:	66770000 	daddiu	s7,s3,0
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1194
			pr_notice("delaying patch of unloaded module '%s'\n",
				  object->name);
			continue;
		}

		if (strcmp(object->name, "vmlinux"))
    1cc8:	02e0f809 	jalr	s7
    1ccc:	65050000 	daddiu	a1,a4,0
    1cd0:	1440011f 	bnez	v0,2150 <kpatch_register+0x5b8>
    1cd4:	3c040000 	lui	a0,0x0
/home/loongson/kpatch/kmod/core/core.c:1197
			pr_notice("patching module '%s'\n", object->name);

		list_for_each_entry(func, &object->funcs, list)
    1cd8:	dfc30018 	ld	v1,24(s8)
    1cdc:	67c40018 	daddiu	a0,s8,24
    1ce0:	10830005 	beq	a0,v1,1cf8 <kpatch_register+0x160>
    1ce4:	6462ffd0 	daddiu	v0,v1,-48
/home/loongson/kpatch/kmod/core/core.c:1197 (discriminator 9)
    1ce8:	dc430030 	ld	v1,48(v0)
/home/loongson/kpatch/kmod/core/core.c:1198 (discriminator 9)
			func->op = KPATCH_OP_PATCH; //设置func的操作属性为KPATCH_OP_PATCH
    1cec:	ac540058 	sw	s4,88(v0)
/home/loongson/kpatch/kmod/core/core.c:1197 (discriminator 9)
		}

		if (strcmp(object->name, "vmlinux"))
			pr_notice("patching module '%s'\n", object->name);

		list_for_each_entry(func, &object->funcs, list)
    1cf0:	1483fffd 	bne	a0,v1,1ce8 <kpatch_register+0x150>
    1cf4:	6462ffd0 	daddiu	v0,v1,-48
/home/loongson/kpatch/kmod/core/core.c:1181
	if (!try_module_get(kpmod->mod)) {
		ret = -ENODEV;
		goto err_list;
	}

	list_for_each_entry(object, &kpmod->objects, list) {
    1cf8:	dfde0000 	ld	s8,0(s8)
    1cfc:	163effe8 	bne	s1,s8,1ca0 <kpatch_register+0x108>
    1d00:	dfa30008 	ld	v1,8(sp)
/home/loongson/kpatch/kmod/core/core.c:1201

		list_for_each_entry(func, &object->funcs, list)
			func->op = KPATCH_OP_PATCH; //设置func的操作属性为KPATCH_OP_PATCH
	}

	if (replace)
    1d04:	10600015 	beqz	v1,1d5c <kpatch_register+0x1c4>
    1d08:	00000000 	nop
    1d0c:	3c030000 	lui	v1,0x0
    1d10:	64630000 	daddiu	v1,v1,0
    1d14:	64660800 	daddiu	a2,v1,2048
/home/loongson/kpatch/kmod/core/core.c:1203
		hash_for_each_rcu(kpatch_func_hash, i, func, node)
			func->op = KPATCH_OP_UNPATCH;
    1d18:	24050002 	li	a1,2
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193 (discriminator 2)
})

static __always_inline
void __read_once_size(const volatile void *p, void *res, int size)
{
	__READ_ONCE_SIZE;
    1d1c:	dc620000 	ld	v0,0(v1)
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1202 (discriminator 2)
		list_for_each_entry(func, &object->funcs, list)
			func->op = KPATCH_OP_PATCH; //设置func的操作属性为KPATCH_OP_PATCH
	}

	if (replace)
		hash_for_each_rcu(kpatch_func_hash, i, func, node)
    1d20:	1040000b 	beqz	v0,1d50 <kpatch_register+0x1b8>
    1d24:	6442ffb8 	daddiu	v0,v0,-72
/home/loongson/kpatch/kmod/core/core.c:1202 (discriminator 6)
    1d28:	14400006 	bnez	v0,1d44 <kpatch_register+0x1ac>
    1d2c:	00000000 	nop
    1d30:	08000000 	j	0 <kpatch_get_func>
    1d34:	64630008 	daddiu	v1,v1,8
/home/loongson/kpatch/kmod/core/core.c:1202 (discriminator 18)
    1d38:	6482ffb8 	daddiu	v0,a0,-72
    1d3c:	10400004 	beqz	v0,1d50 <kpatch_register+0x1b8>
    1d40:	00000000 	nop
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193 (discriminator 26)
    1d44:	dc440048 	ld	a0,72(v0)
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1202 (discriminator 26)
    1d48:	1480fffb 	bnez	a0,1d38 <kpatch_register+0x1a0>
    1d4c:	ac450058 	sw	a1,88(v0)
    1d50:	64630008 	daddiu	v1,v1,8
/home/loongson/kpatch/kmod/core/core.c:1202
    1d54:	1466fff1 	bne	v1,a2,1d1c <kpatch_register+0x184>
    1d58:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1206
			func->op = KPATCH_OP_UNPATCH;

	/* memory barrier between func hash and state write */
	smp_wmb();
    1d5c:	0000000f 	sync
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
    1d60:	3c120000 	lui	s2,0x0
    1d64:	8e420000 	lw	v0,0(s2)
kpatch_state_updating():
/home/loongson/kpatch/kmod/core/core.c:176
	atomic_set(&kpatch_state, KPATCH_STATE_IDLE);
}

static inline void kpatch_state_updating(void)
{
	WARN_ON(atomic_read(&kpatch_state) != KPATCH_STATE_IDLE);
    1d68:	10400008 	beqz	v0,1d8c <kpatch_register+0x1f4>
    1d6c:	24020001 	li	v0,1
    1d70:	3c040000 	lui	a0,0x0
    1d74:	3c020000 	lui	v0,0x0
    1d78:	64840000 	daddiu	a0,a0,0
    1d7c:	64420000 	daddiu	v0,v0,0
    1d80:	0040f809 	jalr	v0
    1d84:	240500b0 	li	a1,176
atomic_set():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/atomic.h:56
 * Atomically sets the value of @v to @i.
 */
#if defined(CONFIG_CPU_LOONGSON3)
static __inline__ void atomic_set(atomic_t * v, int i)
{
		__asm__ __volatile__(
    1d88:	24020001 	li	v0,1
    1d8c:	0000000f 	sync
    1d90:	ae420000 	sw	v0,0(s2)
    1d94:	0000000f 	sync
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1211
	smp_wmb();

	kpatch_state_updating();

	/* run any user-defined pre-patch callbacks */
	list_for_each_entry(object, &kpmod->objects, list) {
    1d98:	de1e0008 	ld	s8,8(s0)
    1d9c:	123e006c 	beq	s1,s8,1f50 <kpatch_register+0x3b8>
    1da0:	00000000 	nop
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    1da4:	3c130000 	lui	s3,0x0
    1da8:	66730000 	daddiu	s3,s3,0
    1dac:	dfc20070 	ld	v0,112(s8)
    1db0:	1040005c 	beqz	v0,1f24 <kpatch_register+0x38c>
    1db4:	dfc40010 	ld	a0,16(s8)
pre_patch_callback():
/home/loongson/kpatch/kmod/core/core.c:338
static inline int pre_patch_callback(struct kpatch_object *object)
{
	int ret;

	if (kpatch_object_linked(object) &&
	    object->pre_patch_callback) {
    1db8:	dfc20048 	ld	v0,72(s8)
/home/loongson/kpatch/kmod/core/core.c:337

static inline int pre_patch_callback(struct kpatch_object *object)
{
	int ret;

	if (kpatch_object_linked(object) &&
    1dbc:	10400060 	beqz	v0,1f40 <kpatch_register+0x3a8>
    1dc0:	24040001 	li	a0,1
/home/loongson/kpatch/kmod/core/core.c:339
	    object->pre_patch_callback) {
		ret = (*object->pre_patch_callback)(object);
    1dc4:	0040f809 	jalr	v0
    1dc8:	03c0202d 	move	a0,s8
/home/loongson/kpatch/kmod/core/core.c:340
		if (ret) {
    1dcc:	1040005b 	beqz	v0,1f3c <kpatch_register+0x3a4>
    1dd0:	0040b82d 	move	s7,v0
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1214

	/* run any user-defined pre-patch callbacks */
	list_for_each_entry(object, &kpmod->objects, list) {
		ret = pre_patch_callback(object);
		if(ret){
			pr_err("pre-patch callback failed!\n");
    1dd4:	3c040000 	lui	a0,0x0
    1dd8:	3c030000 	lui	v1,0x0
    1ddc:	64840000 	daddiu	a0,a0,0
    1de0:	64630000 	daddiu	v1,v1,0
    1de4:	0060f809 	jalr	v1
    1de8:	a3c00068 	sb	zero,104(s8)
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
static inline int kpatch_state_finish(int state)
{
	int result;

	WARN_ON(state != KPATCH_STATE_SUCCESS && state != KPATCH_STATE_FAILURE);
	result = atomic_cmpxchg(&kpatch_state, KPATCH_STATE_UPDATING, state);
    1dec:	0000000f 	sync
__cmpxchg():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/cmpxchg.h:183
    1df0:	24030003 	li	v1,3
    1df4:	24020001 	li	v0,1
    1df8:	c2440000 	ll	a0,0(s2)
    1dfc:	14820005 	bne	a0,v0,1e14 <kpatch_register+0x27c>
    1e00:	00000000 	nop
    1e04:	0060082d 	move	at,v1
    1e08:	e2410000 	sc	at,0(s2)
    1e0c:	1020fffa 	beqz	at,1df8 <kpatch_register+0x260>
    1e10:	00000000 	nop
    1e14:	0000000f 	sync
kpatch_state_finish():
/home/loongson/kpatch/kmod/core/core.c:186
    1e18:	0000000f 	sync
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1221
			break;
		}
	}

	/* if pre_patch_callback succeed. */
printk("ret value: %d\n", ret);
    1e1c:	3c040000 	lui	a0,0x0
    1e20:	3c030000 	lui	v1,0x0
    1e24:	64840000 	daddiu	a0,a0,0
    1e28:	64630000 	daddiu	v1,v1,0
    1e2c:	0060f809 	jalr	v1
    1e30:	02e0282d 	move	a1,s7
/home/loongson/kpatch/kmod/core/core.c:1232
		ret = stop_machine(kpatch_apply_patch, &args, NULL);
	}

	/* if pre_patch_callback or stop_machine failed */
	if (ret) {
		list_for_each_entry(object, &kpmod->objects, list)
    1e34:	de1e0008 	ld	s8,8(s0)
    1e38:	123e0057 	beq	s1,s8,1f98 <kpatch_register+0x400>
    1e3c:	3c140000 	lui	s4,0x0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    1e40:	3c130000 	lui	s3,0x0
kpatch_register():
    1e44:	08000000 	j	0 <kpatch_get_func>
    1e48:	66730000 	daddiu	s3,s3,0
    1e4c:	00000000 	nop
post_unpatch_callback():
/home/loongson/kpatch/kmod/core/core.c:369
}

static inline void post_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->post_unpatch_callback &&
    1e50:	dfc20060 	ld	v0,96(s8)
/home/loongson/kpatch/kmod/core/core.c:368
		(*object->pre_unpatch_callback)(object);
}

static inline void post_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
    1e54:	10400004 	beqz	v0,1e68 <kpatch_register+0x2d0>
    1e58:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:369
	    object->post_unpatch_callback &&
    1e5c:	93c40068 	lbu	a0,104(s8)
    1e60:	1480016d 	bnez	a0,2418 <kpatch_register+0x880>
    1e64:	00000000 	nop
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1232 (discriminator 9)
		ret = stop_machine(kpatch_apply_patch, &args, NULL);
	}

	/* if pre_patch_callback or stop_machine failed */
	if (ret) {
		list_for_each_entry(object, &kpmod->objects, list)
    1e68:	dfde0000 	ld	s8,0(s8)
    1e6c:	123e004a 	beq	s1,s8,1f98 <kpatch_register+0x400>
    1e70:	00000000 	nop
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    1e74:	dfc20070 	ld	v0,112(s8)
    1e78:	1440fff5 	bnez	v0,1e50 <kpatch_register+0x2b8>
    1e7c:	dfc40010 	ld	a0,16(s8)
    1e80:	66820000 	daddiu	v0,s4,0
    1e84:	0040f809 	jalr	v0
    1e88:	0260282d 	move	a1,s3
    1e8c:	1040fff0 	beqz	v0,1e50 <kpatch_register+0x2b8>
    1e90:	00000000 	nop
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1232
		ret = stop_machine(kpatch_apply_patch, &args, NULL);
	}

	/* if pre_patch_callback or stop_machine failed */
	if (ret) {
		list_for_each_entry(object, &kpmod->objects, list)
    1e94:	08000000 	j	0 <kpatch_get_func>
    1e98:	dfde0000 	ld	s8,0(s8)
    1e9c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1170
		return -EINVAL;

	down(&kpatch_mutex);

	if (kpmod->enabled) {
		ret = -EINVAL;
    1ea0:	2417ffea 	li	s7,-22
/home/loongson/kpatch/kmod/core/core.c:1337
	}
	module_put(kpmod->mod);
err_list:
	list_del(&kpmod->list);
err_up:
	up(&kpatch_mutex);
    1ea4:	3c020000 	lui	v0,0x0
    1ea8:	64420000 	daddiu	v0,v0,0
    1eac:	0040f809 	jalr	v0
    1eb0:	66a40000 	daddiu	a0,s5,0
/home/loongson/kpatch/kmod/core/core.c:1338
	return ret;
    1eb4:	02e0102d 	move	v0,s7
/home/loongson/kpatch/kmod/core/core.c:1339
}
    1eb8:	dfa40038 	ld	a0,56(sp)
    1ebc:	dec30000 	ld	v1,0(s6)
    1ec0:	148300aa 	bne	a0,v1,216c <kpatch_register+0x5d4>
    1ec4:	dfbf0088 	ld	ra,136(sp)
    1ec8:	dfbe0080 	ld	s8,128(sp)
    1ecc:	dfb70078 	ld	s7,120(sp)
    1ed0:	dfb60070 	ld	s6,112(sp)
    1ed4:	00000000 	nop
    1ed8:	dfb50068 	ld	s5,104(sp)
    1edc:	dfb40060 	ld	s4,96(sp)
    1ee0:	dfb30058 	ld	s3,88(sp)
    1ee4:	00000000 	nop
    1ee8:	dfb20050 	ld	s2,80(sp)
    1eec:	dfb10048 	ld	s1,72(sp)
    1ef0:	dfb00040 	ld	s0,64(sp)
    1ef4:	03e00008 	jr	ra
    1ef8:	67bd0090 	daddiu	sp,sp,144
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    1efc:	3c050000 	lui	a1,0x0
    1f00:	3c080000 	lui	a4,0x0
    1f04:	64a50000 	daddiu	a1,a1,0
    1f08:	66770000 	daddiu	s7,s3,0
    1f0c:	02e0f809 	jalr	s7
    1f10:	ffa80000 	sd	a4,0(sp)
    1f14:	1440007b 	bnez	v0,2104 <kpatch_register+0x56c>
    1f18:	dfa80000 	ld	a4,0(sp)
    1f1c:	08000000 	j	0 <kpatch_get_func>
    1f20:	dfc40010 	ld	a0,16(s8)
    1f24:	3c030000 	lui	v1,0x0
    1f28:	64620000 	daddiu	v0,v1,0
    1f2c:	0040f809 	jalr	v0
    1f30:	0260282d 	move	a1,s3
    1f34:	1040ffa0 	beqz	v0,1db8 <kpatch_register+0x220>
    1f38:	00000000 	nop
pre_patch_callback():
/home/loongson/kpatch/kmod/core/core.c:345
		if (ret) {
			object->callbacks_enabled = false;
			return ret;
		}
	}
	object->callbacks_enabled = true;
    1f3c:	24040001 	li	a0,1
    1f40:	a3c40068 	sb	a0,104(s8)
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1211
	smp_wmb();

	kpatch_state_updating();

	/* run any user-defined pre-patch callbacks */
	list_for_each_entry(object, &kpmod->objects, list) {
    1f44:	dfde0000 	ld	s8,0(s8)
    1f48:	163eff98 	bne	s1,s8,1dac <kpatch_register+0x214>
    1f4c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1221
			break;
		}
	}

	/* if pre_patch_callback succeed. */
printk("ret value: %d\n", ret);
    1f50:	3c040000 	lui	a0,0x0
    1f54:	3c030000 	lui	v1,0x0
    1f58:	64840000 	daddiu	a0,a0,0
    1f5c:	64630000 	daddiu	v1,v1,0
    1f60:	0060f809 	jalr	v1
    1f64:	0000282d 	move	a1,zero
/home/loongson/kpatch/kmod/core/core.c:1227
	if (!ret) {
		/*
		 * Idle the CPUs, verify activeness safety, and atomically make the new
		 * functions visible to the ftrace handler.
		 */
		ret = stop_machine(kpatch_apply_patch, &args, NULL);
    1f68:	3c040000 	lui	a0,0x0
    1f6c:	3c020000 	lui	v0,0x0
    1f70:	64840000 	daddiu	a0,a0,0
    1f74:	67a50028 	daddiu	a1,sp,40
    1f78:	64420000 	daddiu	v0,v0,0
    1f7c:	0040f809 	jalr	v0
    1f80:	0000302d 	move	a2,zero
/home/loongson/kpatch/kmod/core/core.c:1231
	}

	/* if pre_patch_callback or stop_machine failed */
	if (ret) {
    1f84:	1440ffab 	bnez	v0,1e34 <kpatch_register+0x29c>
    1f88:	0040b82d 	move	s7,v0
/home/loongson/kpatch/kmod/core/core.c:1241
	/*
	 * For the replace case, remove any obsolete funcs from the ftrace
	 * filter, and disable the owning patch module so that it can be
	 * removed.
	 */
	if (!ret && replace) {
    1f8c:	dfa30008 	ld	v1,8(sp)
    1f90:	146000b2 	bnez	v1,225c <kpatch_register+0x6c4>
    1f94:	3c030000 	lui	v1,0x0
/home/loongson/kpatch/kmod/core/core.c:1268
		}
	}


	/* memory barrier between func hash and state write */
	smp_wmb();
    1f98:	0000000f 	sync
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
    1f9c:	8e420000 	lw	v0,0(s2)
kpatch_state_idle():
/home/loongson/kpatch/kmod/core/core.c:170

static inline void kpatch_state_idle(void)
{
	int state = atomic_read(&kpatch_state);

	WARN_ON(state != KPATCH_STATE_SUCCESS && state != KPATCH_STATE_FAILURE);
    1fa0:	2442fffe 	addiu	v0,v0,-2
    1fa4:	2c420002 	sltiu	v0,v0,2
    1fa8:	14400008 	bnez	v0,1fcc <kpatch_register+0x434>
    1fac:	0000102d 	move	v0,zero
    1fb0:	3c040000 	lui	a0,0x0
    1fb4:	3c020000 	lui	v0,0x0
    1fb8:	64840000 	daddiu	a0,a0,0
    1fbc:	64420000 	daddiu	v0,v0,0
    1fc0:	0040f809 	jalr	v0
    1fc4:	240500aa 	li	a1,170
atomic_set():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/atomic.h:56
    1fc8:	0000102d 	move	v0,zero
    1fcc:	0000000f 	sync
    1fd0:	ae420000 	sw	v0,0(s2)
    1fd4:	0000000f 	sync
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1280
	 * see any changes to funcs or funcs->op that might occur after this
	 * point.
	 *
	 * Any NMI handlers starting after this point will see the IDLE state.
	 */
	synchronize_rcu();
    1fd8:	3c020000 	lui	v0,0x0
    1fdc:	64420000 	daddiu	v0,v0,0
    1fe0:	0040f809 	jalr	v0
    1fe4:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1282

	if (ret)
    1fe8:	12e00064 	beqz	s7,217c <kpatch_register+0x5e4>
    1fec:	dfa30008 	ld	v1,8(sp)
/home/loongson/kpatch/kmod/core/core.c:1322

	up(&kpatch_mutex);
	return 0;

err_ops:
	if (replace)
    1ff0:	10600016 	beqz	v1,204c <kpatch_register+0x4b4>
    1ff4:	00000000 	nop
    1ff8:	3c030000 	lui	v1,0x0
    1ffc:	64630000 	daddiu	v1,v1,0
    2000:	64650800 	daddiu	a1,v1,2048
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193 (discriminator 2)
    2004:	dc620000 	ld	v0,0(v1)
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1323 (discriminator 2)
		hash_for_each_rcu(kpatch_func_hash, i, func, node)
    2008:	1040000d 	beqz	v0,2040 <kpatch_register+0x4a8>
    200c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1323 (discriminator 6)
    2010:	6442ffb8 	daddiu	v0,v0,-72
    2014:	14400007 	bnez	v0,2034 <kpatch_register+0x49c>
    2018:	00000000 	nop
    201c:	08000000 	j	0 <kpatch_get_func>
    2020:	64630008 	daddiu	v1,v1,8
    2024:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1323 (discriminator 18)
    2028:	6482ffb8 	daddiu	v0,a0,-72
    202c:	10400004 	beqz	v0,2040 <kpatch_register+0x4a8>
    2030:	00000000 	nop
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193 (discriminator 26)
    2034:	dc440048 	ld	a0,72(v0)
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1323 (discriminator 26)
    2038:	1480fffb 	bnez	a0,2028 <kpatch_register+0x490>
    203c:	ac400058 	sw	zero,88(v0)
    2040:	64630008 	daddiu	v1,v1,8
/home/loongson/kpatch/kmod/core/core.c:1323
    2044:	1465ffef 	bne	v1,a1,2004 <kpatch_register+0x46c>
    2048:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1154
}

int kpatch_register(struct kpatch_module *kpmod, bool replace)
{
	int ret, i;
	struct kpatch_object *object, *object_err = NULL;
    204c:	0000f02d 	move	s8,zero
/home/loongson/kpatch/kmod/core/core.c:1326
err_ops:
	if (replace)
		hash_for_each_rcu(kpatch_func_hash, i, func, node)
			func->op = KPATCH_OP_NONE;
err_unlink:
	list_for_each_entry(object, &kpmod->objects, list) {
    2050:	de130008 	ld	s3,8(s0)
    2054:	12330026 	beq	s1,s3,20f0 <kpatch_register+0x558>
    2058:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:1327
		if (object == object_err)
    205c:	13d30023 	beq	s8,s3,20ec <kpatch_register+0x554>
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2060:	3c120000 	lui	s2,0x0
    2064:	08000000 	j	0 <kpatch_get_func>
    2068:	3c140000 	lui	s4,0x0
    206c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1326
err_ops:
	if (replace)
		hash_for_each_rcu(kpatch_func_hash, i, func, node)
			func->op = KPATCH_OP_NONE;
err_unlink:
	list_for_each_entry(object, &kpmod->objects, list) {
    2070:	de730000 	ld	s3,0(s3)
    2074:	00000000 	nop
    2078:	1233001d 	beq	s1,s3,20f0 <kpatch_register+0x558>
    207c:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:1327
		if (object == object_err)
    2080:	13d3001c 	beq	s8,s3,20f4 <kpatch_register+0x55c>
    2084:	64420000 	daddiu	v0,v0,0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2088:	de620070 	ld	v0,112(s3)
    208c:	10400028 	beqz	v0,2130 <kpatch_register+0x598>
    2090:	de640010 	ld	a0,16(s3)
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1331
	list_for_each_entry(object, &kpmod->objects, list) {
		if (object == object_err)
			break;
		if (!kpatch_object_linked(object))
			continue;
		WARN_ON(kpatch_unlink_object(object));
    2094:	66420000 	daddiu	v0,s2,0
    2098:	0040f809 	jalr	v0
    209c:	0260202d 	move	a0,s3
    20a0:	1040fff3 	beqz	v0,2070 <kpatch_register+0x4d8>
    20a4:	3c030000 	lui	v1,0x0
/home/loongson/kpatch/kmod/core/core.c:1331 (discriminator 1)
    20a8:	3c040000 	lui	a0,0x0
    20ac:	64840000 	daddiu	a0,a0,0
    20b0:	64620000 	daddiu	v0,v1,0
    20b4:	0040f809 	jalr	v0
    20b8:	24050533 	li	a1,1331
/home/loongson/kpatch/kmod/core/core.c:1326 (discriminator 1)
err_ops:
	if (replace)
		hash_for_each_rcu(kpatch_func_hash, i, func, node)
			func->op = KPATCH_OP_NONE;
err_unlink:
	list_for_each_entry(object, &kpmod->objects, list) {
    20bc:	08000000 	j	0 <kpatch_get_func>
    20c0:	de730000 	ld	s3,0(s3)
/home/loongson/kpatch/kmod/core/core.c:1177
	}

	list_add_tail(&kpmod->list, &kpmod_list);

	if (!try_module_get(kpmod->mod)) {
		ret = -ENODEV;
    20c4:	2417ffed 	li	s7,-19
__list_del_entry():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:120
static inline void __list_del_entry(struct list_head *entry)
{
	if (!__list_del_entry_valid(entry))
		return;

	__list_del(entry->prev, entry->next);
    20c8:	de020028 	ld	v0,40(s0)
    20cc:	de030020 	ld	v1,32(s0)
__list_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:105
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 */
static inline void __list_del(struct list_head * prev, struct list_head * next)
{
	next->prev = prev;
    20d0:	fc620008 	sd	v0,8(v1)
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
{
	switch (size) {
	case 1: *(volatile __u8 *)p = *(__u8 *)res; break;
	case 2: *(volatile __u16 *)p = *(__u16 *)res; break;
	case 4: *(volatile __u32 *)p = *(__u32 *)res; break;
	case 8: *(volatile __u64 *)p = *(__u64 *)res; break;
    20d4:	fc430000 	sd	v1,0(v0)
list_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:126
}

static inline void list_del(struct list_head *entry)
{
	__list_del_entry(entry);
	entry->next = LIST_POISON1;
    20d8:	24020100 	li	v0,256
    20dc:	fe020020 	sd	v0,32(s0)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:127
	entry->prev = LIST_POISON2;
    20e0:	24020200 	li	v0,512
kpatch_register():
    20e4:	08000000 	j	0 <kpatch_get_func>
    20e8:	fe020028 	sd	v0,40(s0)
/home/loongson/kpatch/kmod/core/core.c:1333
			break;
		if (!kpatch_object_linked(object))
			continue;
		WARN_ON(kpatch_unlink_object(object));
	}
	module_put(kpmod->mod);
    20ec:	3c020000 	lui	v0,0x0
    20f0:	64420000 	daddiu	v0,v0,0
    20f4:	0040f809 	jalr	v0
    20f8:	de040000 	ld	a0,0(s0)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:120
static inline void __list_del_entry(struct list_head *entry)
{
	if (!__list_del_entry_valid(entry))
		return;

	__list_del(entry->prev, entry->next);
    20fc:	08000000 	j	0 <kpatch_get_func>
    2100:	de020028 	ld	v0,40(s0)
/home/loongson/kpatch/kmod/core/core.c:1189
			object_err = object;
			goto err_unlink;
		}

		if (!kpatch_object_linked(object)) {
			pr_notice("delaying patch of unloaded module '%s'\n",
    2104:	dfc50010 	ld	a1,16(s8)
    2108:	3c040000 	lui	a0,0x0
    210c:	3c030000 	lui	v1,0x0
    2110:	64630000 	daddiu	v1,v1,0
    2114:	0060f809 	jalr	v1
    2118:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:1181
	if (!try_module_get(kpmod->mod)) {
		ret = -ENODEV;
		goto err_list;
	}

	list_for_each_entry(object, &kpmod->objects, list) {
    211c:	dfde0000 	ld	s8,0(s8)
    2120:	163efedf 	bne	s1,s8,1ca0 <kpatch_register+0x108>
    2124:	dfa30008 	ld	v1,8(sp)
    2128:	08000000 	j	0 <kpatch_get_func>
    212c:	00000000 	nop
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2130:	3c050000 	lui	a1,0x0
    2134:	66820000 	daddiu	v0,s4,0
    2138:	0040f809 	jalr	v0
    213c:	64a50000 	daddiu	a1,a1,0
    2140:	1040ffd5 	beqz	v0,2098 <kpatch_register+0x500>
    2144:	66420000 	daddiu	v0,s2,0
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1326
err_ops:
	if (replace)
		hash_for_each_rcu(kpatch_func_hash, i, func, node)
			func->op = KPATCH_OP_NONE;
err_unlink:
	list_for_each_entry(object, &kpmod->objects, list) {
    2148:	08000000 	j	0 <kpatch_get_func>
    214c:	de730000 	ld	s3,0(s3)
/home/loongson/kpatch/kmod/core/core.c:1195
				  object->name);
			continue;
		}

		if (strcmp(object->name, "vmlinux"))
			pr_notice("patching module '%s'\n", object->name);
    2150:	dfc50010 	ld	a1,16(s8)
    2154:	3c030000 	lui	v1,0x0
    2158:	64630000 	daddiu	v1,v1,0
    215c:	0060f809 	jalr	v1
    2160:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:1197

		list_for_each_entry(func, &object->funcs, list)
    2164:	08000000 	j	0 <kpatch_get_func>
/home/loongson/kpatch/kmod/core/core.c:1339
err_list:
	list_del(&kpmod->list);
err_up:
	up(&kpatch_mutex);
	return ret;
}
    2168:	dfc30018 	ld	v1,24(s8)
    216c:	3c020000 	lui	v0,0x0
    2170:	64420000 	daddiu	v0,v0,0
    2174:	0040f809 	jalr	v0
    2178:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1285
	synchronize_rcu();

	if (ret)
		goto err_ops;

	do_for_each_linked_func(kpmod, func) {
    217c:	de120008 	ld	s2,8(s0)
    2180:	12320012 	beq	s1,s2,21cc <kpatch_register+0x634>
    2184:	3c020000 	lui	v0,0x0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212 (discriminator 22)
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2188:	3c130000 	lui	s3,0x0
    218c:	66730000 	daddiu	s3,s3,0
    2190:	3c170000 	lui	s7,0x0
    2194:	de420070 	ld	v0,112(s2)
    2198:	10400098 	beqz	v0,23fc <kpatch_register+0x864>
    219c:	de440010 	ld	a0,16(s2)
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1285
	synchronize_rcu();

	if (ret)
		goto err_ops;

	do_for_each_linked_func(kpmod, func) {
    21a0:	de430018 	ld	v1,24(s2)
    21a4:	66440018 	daddiu	a0,s2,24
    21a8:	10830005 	beq	a0,v1,21c0 <kpatch_register+0x628>
    21ac:	6462ffd0 	daddiu	v0,v1,-48
/home/loongson/kpatch/kmod/core/core.c:1285 (discriminator 16)
    21b0:	dc430030 	ld	v1,48(v0)
/home/loongson/kpatch/kmod/core/core.c:1286 (discriminator 16)
		func->op = KPATCH_OP_NONE;
    21b4:	ac400058 	sw	zero,88(v0)
/home/loongson/kpatch/kmod/core/core.c:1285 (discriminator 16)
	synchronize_rcu();

	if (ret)
		goto err_ops;

	do_for_each_linked_func(kpmod, func) {
    21b8:	1483fffd 	bne	a0,v1,21b0 <kpatch_register+0x618>
    21bc:	6462ffd0 	daddiu	v0,v1,-48
/home/loongson/kpatch/kmod/core/core.c:1285
    21c0:	de520000 	ld	s2,0(s2)
    21c4:	1632fff3 	bne	s1,s2,2194 <kpatch_register+0x5fc>
    21c8:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:1302
#elif LINUX_VERSION_CODE >= KERNEL_VERSION(4, 9, 0)
# define HAS_MODULE_TAINT
#endif

#ifdef TAINT_LIVEPATCH
	pr_notice_once("tainting kernel with TAINT_LIVEPATCH\n");
    21cc:	90430000 	lbu	v1,0(v0)
    21d0:	14600007 	bnez	v1,21f0 <kpatch_register+0x658>
    21d4:	24030001 	li	v1,1
/home/loongson/kpatch/kmod/core/core.c:1302 (discriminator 1)
    21d8:	3c040000 	lui	a0,0x0
    21dc:	a0430000 	sb	v1,0(v0)
    21e0:	3c030000 	lui	v1,0x0
    21e4:	64630000 	daddiu	v1,v1,0
    21e8:	0060f809 	jalr	v1
    21ec:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:1303 (discriminator 3)
	add_taint(TAINT_LIVEPATCH, LOCKDEP_STILL_OK);
    21f0:	3c020000 	lui	v0,0x0
    21f4:	2404000f 	li	a0,15
    21f8:	64420000 	daddiu	v0,v0,0
    21fc:	0040f809 	jalr	v0
    2200:	0000282d 	move	a1,zero
/home/loongson/kpatch/kmod/core/core.c:1305 (discriminator 3)
# ifdef HAS_MODULE_TAINT_LONG
	set_bit(TAINT_LIVEPATCH, &kpmod->mod->taints);
    2204:	de020000 	ld	v0,0(s0)
    2208:	64420248 	daddiu	v0,v0,584
set_bit():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/bitops.h:97 (discriminator 3)
		"   " __AMOR "$zero, %1, %0        \n"
		: "+ZB" (*m)
		: "r" (1UL << bit)
		: "memory");
#else
		loongson_llsc_mb();
    220c:	0000000f 	sync
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/bitops.h:99
		do {
			__asm__ __volatile__(
    2210:	d0430000 	lld	v1,0(v0)
    2214:	34638000 	ori	v1,v1,0x8000
    2218:	f0430000 	scd	v1,0(v0)
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/bitops.h:107
			"	or	%0, %2				\n"
			"	" __SC	"%0, %1				\n"
			"	.set	mips0				\n"
			: "=&r" (temp), "+" GCC_OFF_SMALL_ASM() (*m)
			: "ir" (1UL << bit));
		} while (unlikely(!temp));
    221c:	1060fffc 	beqz	v1,2210 <kpatch_register+0x678>
    2220:	3c040000 	lui	a0,0x0
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1314 (discriminator 3)
#else
	pr_notice_once("tainting kernel with TAINT_USER\n");
	add_taint(TAINT_USER, LOCKDEP_STILL_OK);
#endif

	pr_notice("loaded patch module '%s'\n", kpmod->mod->name);
    2224:	de050000 	ld	a1,0(s0)
    2228:	3c030000 	lui	v1,0x0
    222c:	64840000 	daddiu	a0,a0,0
    2230:	64630000 	daddiu	v1,v1,0
    2234:	0060f809 	jalr	v1
    2238:	64a50018 	daddiu	a1,a1,24
/home/loongson/kpatch/kmod/core/core.c:1316 (discriminator 3)

	kpmod->enabled = true;
    223c:	24020001 	li	v0,1
    2240:	a2020018 	sb	v0,24(s0)
/home/loongson/kpatch/kmod/core/core.c:1318 (discriminator 3)

	up(&kpatch_mutex);
    2244:	3c020000 	lui	v0,0x0
    2248:	64420000 	daddiu	v0,v0,0
    224c:	0040f809 	jalr	v0
    2250:	66a40000 	daddiu	a0,s5,0
/home/loongson/kpatch/kmod/core/core.c:1319 (discriminator 3)
	return 0;
    2254:	08000000 	j	0 <kpatch_get_func>
    2258:	0000102d 	move	v0,zero
kpatch_ftrace_remove_unpatched_funcs():
/home/loongson/kpatch/kmod/core/core.c:1138
{
	struct kpatch_module *kpmod;
	struct kpatch_func *func;
	int force = 0;

	list_for_each_entry(kpmod, &kpmod_list, list) {
    225c:	dc620000 	ld	v0,0(v1)
    2260:	64640000 	daddiu	a0,v1,0
    2264:	ffa00010 	sd	zero,16(sp)
    2268:	1044ff4b 	beq	v0,a0,1f98 <kpatch_register+0x400>
    226c:	6453ffe0 	daddiu	s3,v0,-32
/home/loongson/kpatch/kmod/core/core.c:1139
		do_for_each_linked_func(kpmod, func) {
    2270:	de740008 	ld	s4,8(s3)
    2274:	66630008 	daddiu	v1,s3,8
    2278:	12830030 	beq	s4,v1,233c <kpatch_register+0x7a4>
    227c:	ffa30018 	sd	v1,24(sp)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2280:	de820070 	ld	v0,112(s4)
    2284:	10400022 	beqz	v0,2310 <kpatch_register+0x778>
    2288:	de840010 	ld	a0,16(s4)
kpatch_ftrace_remove_unpatched_funcs():
/home/loongson/kpatch/kmod/core/core.c:1139
	struct kpatch_module *kpmod;
	struct kpatch_func *func;
	int force = 0;

	list_for_each_entry(kpmod, &kpmod_list, list) {
		do_for_each_linked_func(kpmod, func) {
    228c:	de820018 	ld	v0,24(s4)
    2290:	669e0018 	daddiu	s8,s4,24
    2294:	17c20007 	bne	s8,v0,22b4 <kpatch_register+0x71c>
    2298:	6446ffd0 	daddiu	a2,v0,-48
kpatch_register():
    229c:	08000000 	j	0 <kpatch_get_func>
    22a0:	de940000 	ld	s4,0(s4)
    22a4:	00000000 	nop
kpatch_ftrace_remove_unpatched_funcs():
    22a8:	dcc20030 	ld	v0,48(a2)
    22ac:	13c2001f 	beq	s8,v0,232c <kpatch_register+0x794>
    22b0:	6446ffd0 	daddiu	a2,v0,-48
/home/loongson/kpatch/kmod/core/core.c:1140
			if (func->op != KPATCH_OP_UNPATCH)
    22b4:	8cc20058 	lw	v0,88(a2)
    22b8:	24040002 	li	a0,2
    22bc:	1444fffa 	bne	v0,a0,22a8 <kpatch_register+0x710>
    22c0:	dfa30010 	ld	v1,16(sp)
/home/loongson/kpatch/kmod/core/core.c:1142
				continue;
			if (func->force)
    22c4:	8cc50040 	lw	a1,64(a2)
/home/loongson/kpatch/kmod/core/core.c:1143
				force = 1;
    22c8:	24020001 	li	v0,1
    22cc:	0045180b 	movn	v1,v0,a1
/home/loongson/kpatch/kmod/core/core.c:1144
			WARN_ON(kpatch_ftrace_remove_func(func->old_addr));
    22d0:	dcc40010 	ld	a0,16(a2)
/home/loongson/kpatch/kmod/core/core.c:1143
	list_for_each_entry(kpmod, &kpmod_list, list) {
		do_for_each_linked_func(kpmod, func) {
			if (func->op != KPATCH_OP_UNPATCH)
				continue;
			if (func->force)
				force = 1;
    22d4:	ffa30010 	sd	v1,16(sp)
/home/loongson/kpatch/kmod/core/core.c:1144
			WARN_ON(kpatch_ftrace_remove_func(func->old_addr));
    22d8:	3c030000 	lui	v1,0x0
    22dc:	64620000 	daddiu	v0,v1,0
    22e0:	0040f809 	jalr	v0
    22e4:	ffa60000 	sd	a2,0(sp)
    22e8:	1040ffef 	beqz	v0,22a8 <kpatch_register+0x710>
    22ec:	dfa60000 	ld	a2,0(sp)
    22f0:	3c030000 	lui	v1,0x0
    22f4:	3c040000 	lui	a0,0x0
    22f8:	64840000 	daddiu	a0,a0,0
    22fc:	64620000 	daddiu	v0,v1,0
    2300:	0040f809 	jalr	v0
    2304:	24050478 	li	a1,1144
kpatch_register():
    2308:	08000000 	j	0 <kpatch_get_func>
    230c:	dfa60000 	ld	a2,0(sp)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2310:	3c050000 	lui	a1,0x0
    2314:	3c030000 	lui	v1,0x0
    2318:	64620000 	daddiu	v0,v1,0
    231c:	0040f809 	jalr	v0
    2320:	64a50000 	daddiu	a1,a1,0
    2324:	1040ffd9 	beqz	v0,228c <kpatch_register+0x6f4>
    2328:	00000000 	nop
kpatch_ftrace_remove_unpatched_funcs():
/home/loongson/kpatch/kmod/core/core.c:1139
	struct kpatch_module *kpmod;
	struct kpatch_func *func;
	int force = 0;

	list_for_each_entry(kpmod, &kpmod_list, list) {
		do_for_each_linked_func(kpmod, func) {
    232c:	de940000 	ld	s4,0(s4)
    2330:	dfa30018 	ld	v1,24(sp)
    2334:	1474ffd2 	bne	v1,s4,2280 <kpatch_register+0x6e8>
    2338:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1138
{
	struct kpatch_module *kpmod;
	struct kpatch_func *func;
	int force = 0;

	list_for_each_entry(kpmod, &kpmod_list, list) {
    233c:	de620020 	ld	v0,32(s3)
    2340:	3c040000 	lui	a0,0x0
    2344:	64840000 	daddiu	a0,a0,0
    2348:	1444ffc9 	bne	v0,a0,2270 <kpatch_register+0x6d8>
    234c:	6453ffe0 	daddiu	s3,v0,-32
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1247
		struct kpatch_module *kpmod2, *safe;
		int force;

		force = kpatch_ftrace_remove_unpatched_funcs();

		list_for_each_entry_safe(kpmod2, safe, &kpmod_list, list) {
    2350:	3c020000 	lui	v0,0x0
    2354:	dc420000 	ld	v0,0(v0)
    2358:	dc460000 	ld	a2,0(v0)
    235c:	645effe0 	daddiu	s8,v0,-32
    2360:	1044ff0d 	beq	v0,a0,1f98 <kpatch_register+0x400>
    2364:	64c6ffe0 	daddiu	a2,a2,-32
/home/loongson/kpatch/kmod/core/core.c:1252
			if (kpmod == kpmod2)
				continue;

			kpmod2->enabled = false;
			pr_notice("unloaded patch module '%s'\n",
    2368:	3c130000 	lui	s3,0x0
    236c:	66730000 	daddiu	s3,s3,0
/home/loongson/kpatch/kmod/core/core.c:1260
			/*
			 * Don't allow modules with forced functions to be
			 * removed because they might still be in use.
			 */
			if (!force)
				module_put(kpmod2->mod);
    2370:	3c140000 	lui	s4,0x0
/home/loongson/kpatch/kmod/core/core.c:1248
		int force;

		force = kpatch_ftrace_remove_unpatched_funcs();

		list_for_each_entry_safe(kpmod2, safe, &kpmod_list, list) {
			if (kpmod == kpmod2)
    2374:	161e000a 	bne	s0,s8,23a0 <kpatch_register+0x808>
    2378:	3c030000 	lui	v1,0x0
/home/loongson/kpatch/kmod/core/core.c:1247
		struct kpatch_module *kpmod2, *safe;
		int force;

		force = kpatch_ftrace_remove_unpatched_funcs();

		list_for_each_entry_safe(kpmod2, safe, &kpmod_list, list) {
    237c:	dcc20020 	ld	v0,32(a2)
    2380:	3c030000 	lui	v1,0x0
    2384:	64c40020 	daddiu	a0,a2,32
    2388:	64630000 	daddiu	v1,v1,0
    238c:	6442ffe0 	daddiu	v0,v0,-32
    2390:	1083ff01 	beq	a0,v1,1f98 <kpatch_register+0x400>
    2394:	00c0f02d 	move	s8,a2
    2398:	08000000 	j	0 <kpatch_get_func>
    239c:	0040302d 	move	a2,v0
/home/loongson/kpatch/kmod/core/core.c:1252
			if (kpmod == kpmod2)
				continue;

			kpmod2->enabled = false;
			pr_notice("unloaded patch module '%s'\n",
    23a0:	dfc50000 	ld	a1,0(s8)
    23a4:	64630000 	daddiu	v1,v1,0
    23a8:	0260202d 	move	a0,s3
    23ac:	64a50018 	daddiu	a1,a1,24
/home/loongson/kpatch/kmod/core/core.c:1251

		list_for_each_entry_safe(kpmod2, safe, &kpmod_list, list) {
			if (kpmod == kpmod2)
				continue;

			kpmod2->enabled = false;
    23b0:	a3c00018 	sb	zero,24(s8)
/home/loongson/kpatch/kmod/core/core.c:1252
			pr_notice("unloaded patch module '%s'\n",
    23b4:	0060f809 	jalr	v1
    23b8:	ffa60000 	sd	a2,0(sp)
/home/loongson/kpatch/kmod/core/core.c:1259

			/*
			 * Don't allow modules with forced functions to be
			 * removed because they might still be in use.
			 */
			if (!force)
    23bc:	dfa30010 	ld	v1,16(sp)
    23c0:	14600005 	bnez	v1,23d8 <kpatch_register+0x840>
    23c4:	dfa60000 	ld	a2,0(sp)
/home/loongson/kpatch/kmod/core/core.c:1260
				module_put(kpmod2->mod);
    23c8:	66820000 	daddiu	v0,s4,0
    23cc:	0040f809 	jalr	v0
    23d0:	dfc40000 	ld	a0,0(s8)
    23d4:	dfa60000 	ld	a2,0(sp)
__list_del_entry():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:120
    23d8:	dfc20028 	ld	v0,40(s8)
    23dc:	dfc40020 	ld	a0,32(s8)
__list_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:105
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 */
static inline void __list_del(struct list_head * prev, struct list_head * next)
{
	next->prev = prev;
    23e0:	fc820008 	sd	v0,8(a0)
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
    23e4:	fc440000 	sd	a0,0(v0)
list_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:126
}

static inline void list_del(struct list_head *entry)
{
	__list_del_entry(entry);
	entry->next = LIST_POISON1;
    23e8:	24040100 	li	a0,256
/home/loongson/linux-4.19-loongson/./include/linux/list.h:127
	entry->prev = LIST_POISON2;
    23ec:	24020200 	li	v0,512
/home/loongson/linux-4.19-loongson/./include/linux/list.h:126
}

static inline void list_del(struct list_head *entry)
{
	__list_del_entry(entry);
	entry->next = LIST_POISON1;
    23f0:	ffc40020 	sd	a0,32(s8)
kpatch_register():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:127
	entry->prev = LIST_POISON2;
    23f4:	08000000 	j	0 <kpatch_get_func>
    23f8:	ffc20028 	sd	v0,40(s8)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    23fc:	66e20000 	daddiu	v0,s7,0
    2400:	0040f809 	jalr	v0
    2404:	0260282d 	move	a1,s3
    2408:	1040ff65 	beqz	v0,21a0 <kpatch_register+0x608>
    240c:	00000000 	nop
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1285
	synchronize_rcu();

	if (ret)
		goto err_ops;

	do_for_each_linked_func(kpmod, func) {
    2410:	08000000 	j	0 <kpatch_get_func>
    2414:	de520000 	ld	s2,0(s2)
post_unpatch_callback():
/home/loongson/kpatch/kmod/core/core.c:371
static inline void post_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->post_unpatch_callback &&
	    object->callbacks_enabled)
		(*object->post_unpatch_callback)(object);
    2418:	0040f809 	jalr	v0
    241c:	03c0202d 	move	a0,s8
kpatch_register():
/home/loongson/kpatch/kmod/core/core.c:1232
		ret = stop_machine(kpatch_apply_patch, &args, NULL);
	}

	/* if pre_patch_callback or stop_machine failed */
	if (ret) {
		list_for_each_entry(object, &kpmod->objects, list)
    2420:	08000000 	j	0 <kpatch_get_func>
    2424:	dfde0000 	ld	s8,0(s8)

0000000000002428 <kpatch_unregister>:
kpatch_unregister():
/home/loongson/kpatch/kmod/core/core.c:1343
	return ret;
}
EXPORT_SYMBOL(kpatch_register);

int kpatch_unregister(struct kpatch_module *kpmod)
{
    2428:	67bdffa0 	daddiu	sp,sp,-96
    242c:	ffbf0058 	sd	ra,88(sp)
    2430:	ffbe0050 	sd	s8,80(sp)
    2434:	ffb70048 	sd	s7,72(sp)
    2438:	ffb60040 	sd	s6,64(sp)
    243c:	ffb50038 	sd	s5,56(sp)
    2440:	ffb40030 	sd	s4,48(sp)
    2444:	ffb30028 	sd	s3,40(sp)
    2448:	ffb20020 	sd	s2,32(sp)
    244c:	ffb10018 	sd	s1,24(sp)
    2450:	ffb00010 	sd	s0,16(sp)
    2454:	3c030000 	lui	v1,0x0
    2458:	64630000 	daddiu	v1,v1,0
    245c:	03e0082d 	move	at,ra
    2460:	0060f809 	jalr	v1
    2464:	67ac0058 	daddiu	t0,sp,88
/home/loongson/kpatch/kmod/core/core.c:1348
	struct kpatch_object *object;
	struct kpatch_func *func;
	int ret, force = 0;

	down(&kpatch_mutex);
    2468:	3c130000 	lui	s3,0x0
    246c:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:1343
	return ret;
}
EXPORT_SYMBOL(kpatch_register);

int kpatch_unregister(struct kpatch_module *kpmod)
{
    2470:	0080a02d 	move	s4,a0
/home/loongson/kpatch/kmod/core/core.c:1348
	struct kpatch_object *object;
	struct kpatch_func *func;
	int ret, force = 0;

	down(&kpatch_mutex);
    2474:	64420000 	daddiu	v0,v0,0
    2478:	0040f809 	jalr	v0
    247c:	66640000 	daddiu	a0,s3,0
/home/loongson/kpatch/kmod/core/core.c:1350

	if (!kpmod->enabled) {
    2480:	92820018 	lbu	v0,24(s4)
    2484:	104000c5 	beqz	v0,279c <kpatch_unregister+0x374>
    2488:	66920008 	daddiu	s2,s4,8
/home/loongson/kpatch/kmod/core/core.c:1355
	    ret = -EINVAL;
	    goto out;
	}

	do_for_each_linked_func(kpmod, func) {
    248c:	de900008 	ld	s0,8(s4)
    2490:	12120018 	beq	s0,s2,24f4 <kpatch_unregister+0xcc>
    2494:	0000882d 	move	s1,zero
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212 (discriminator 21)
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2498:	3c020000 	lui	v0,0x0
kpatch_unregister():
/home/loongson/kpatch/kmod/core/core.c:1356 (discriminator 21)
	    ret = -EINVAL;
	    goto out;
	}

	do_for_each_linked_func(kpmod, func) {
		func->op = KPATCH_OP_UNPATCH;
    249c:	24160002 	li	s6,2
/home/loongson/kpatch/kmod/core/core.c:1358 (discriminator 21)
		if (func->force)
			force = 1;
    24a0:	24150001 	li	s5,1
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212 (discriminator 21)
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    24a4:	64570000 	daddiu	s7,v0,0
    24a8:	3c1e0000 	lui	s8,0x0
    24ac:	00000000 	nop
    24b0:	de020070 	ld	v0,112(s0)
    24b4:	10400074 	beqz	v0,2688 <kpatch_unregister+0x260>
    24b8:	de040010 	ld	a0,16(s0)
kpatch_unregister():
/home/loongson/kpatch/kmod/core/core.c:1355
	if (!kpmod->enabled) {
	    ret = -EINVAL;
	    goto out;
	}

	do_for_each_linked_func(kpmod, func) {
    24bc:	de030018 	ld	v1,24(s0)
    24c0:	66040018 	daddiu	a0,s0,24
    24c4:	10830008 	beq	a0,v1,24e8 <kpatch_unregister+0xc0>
    24c8:	6462ffd0 	daddiu	v0,v1,-48
    24cc:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1357
		func->op = KPATCH_OP_UNPATCH;
		if (func->force)
    24d0:	8c460040 	lw	a2,64(v0)
/home/loongson/kpatch/kmod/core/core.c:1355
	if (!kpmod->enabled) {
	    ret = -EINVAL;
	    goto out;
	}

	do_for_each_linked_func(kpmod, func) {
    24d4:	dc430030 	ld	v1,48(v0)
/home/loongson/kpatch/kmod/core/core.c:1356
		func->op = KPATCH_OP_UNPATCH;
    24d8:	ac560058 	sw	s6,88(v0)
/home/loongson/kpatch/kmod/core/core.c:1358
		if (func->force)
			force = 1;
    24dc:	02a6880b 	movn	s1,s5,a2
/home/loongson/kpatch/kmod/core/core.c:1355
	if (!kpmod->enabled) {
	    ret = -EINVAL;
	    goto out;
	}

	do_for_each_linked_func(kpmod, func) {
    24e0:	1483fffb 	bne	a0,v1,24d0 <kpatch_unregister+0xa8>
    24e4:	6462ffd0 	daddiu	v0,v1,-48
/home/loongson/kpatch/kmod/core/core.c:1355 (discriminator 16)
    24e8:	de100000 	ld	s0,0(s0)
    24ec:	1612fff0 	bne	s0,s2,24b0 <kpatch_unregister+0x88>
    24f0:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1362
		if (func->force)
			force = 1;
	} while_for_each_linked_func();

	/* memory barrier between func hash and state write */
	smp_wmb();
    24f4:	0000000f 	sync
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
})

static __always_inline
void __read_once_size(const volatile void *p, void *res, int size)
{
	__READ_ONCE_SIZE;
    24f8:	3c1e0000 	lui	s8,0x0
    24fc:	8fc20000 	lw	v0,0(s8)
kpatch_state_updating():
/home/loongson/kpatch/kmod/core/core.c:176
	atomic_set(&kpatch_state, KPATCH_STATE_IDLE);
}

static inline void kpatch_state_updating(void)
{
	WARN_ON(atomic_read(&kpatch_state) != KPATCH_STATE_IDLE);
    2500:	1440009f 	bnez	v0,2780 <kpatch_unregister+0x358>
    2504:	3c040000 	lui	a0,0x0
atomic_set():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/atomic.h:56
    2508:	24020001 	li	v0,1
    250c:	0000000f 	sync
    2510:	afc20000 	sw	v0,0(s8)
    2514:	0000000f 	sync
kpatch_unregister():
/home/loongson/kpatch/kmod/core/core.c:1366
	/* memory barrier between func hash and state write */
	smp_wmb();

	kpatch_state_updating();

	ret = stop_machine(kpatch_remove_patch, kpmod, NULL);
    2518:	3c040000 	lui	a0,0x0
    251c:	3c020000 	lui	v0,0x0
    2520:	64840000 	daddiu	a0,a0,0
    2524:	0280282d 	move	a1,s4
    2528:	64420000 	daddiu	v0,v0,0
    252c:	0040f809 	jalr	v0
    2530:	0000302d 	move	a2,zero
/home/loongson/kpatch/kmod/core/core.c:1368

	if (!ret) {
    2534:	1440001a 	bnez	v0,25a0 <kpatch_unregister+0x178>
    2538:	0040802d 	move	s0,v0
/home/loongson/kpatch/kmod/core/core.c:1370
		/* run any user-defined post-unpatch callbacks */
		list_for_each_entry(object, &kpmod->objects, list)
    253c:	de950008 	ld	s5,8(s4)
    2540:	12b20017 	beq	s5,s2,25a0 <kpatch_unregister+0x178>
    2544:	00000000 	nop
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2548:	3c160000 	lui	s6,0x0
    254c:	66d60000 	daddiu	s6,s6,0
kpatch_unregister():
    2550:	08000000 	j	0 <kpatch_get_func>
    2554:	3c170000 	lui	s7,0x0
/home/loongson/kpatch/kmod/core/core.c:1370 (discriminator 9)

	ret = stop_machine(kpatch_remove_patch, kpmod, NULL);

	if (!ret) {
		/* run any user-defined post-unpatch callbacks */
		list_for_each_entry(object, &kpmod->objects, list)
    2558:	deb50000 	ld	s5,0(s5)
    255c:	00000000 	nop
    2560:	12b2000f 	beq	s5,s2,25a0 <kpatch_unregister+0x178>
    2564:	00000000 	nop
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2568:	dea20070 	ld	v0,112(s5)
    256c:	10400076 	beqz	v0,2748 <kpatch_unregister+0x320>
    2570:	dea40010 	ld	a0,16(s5)
post_unpatch_callback():
/home/loongson/kpatch/kmod/core/core.c:369
}

static inline void post_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->post_unpatch_callback &&
    2574:	dea20060 	ld	v0,96(s5)
/home/loongson/kpatch/kmod/core/core.c:368
		(*object->pre_unpatch_callback)(object);
}

static inline void post_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
    2578:	1040fff7 	beqz	v0,2558 <kpatch_unregister+0x130>
    257c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:369
	    object->post_unpatch_callback &&
    2580:	92a30068 	lbu	v1,104(s5)
    2584:	1060fff4 	beqz	v1,2558 <kpatch_unregister+0x130>
    2588:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:371
	    object->callbacks_enabled)
		(*object->post_unpatch_callback)(object);
    258c:	0040f809 	jalr	v0
    2590:	02a0202d 	move	a0,s5
kpatch_unregister():
/home/loongson/kpatch/kmod/core/core.c:1370

	ret = stop_machine(kpatch_remove_patch, kpmod, NULL);

	if (!ret) {
		/* run any user-defined post-unpatch callbacks */
		list_for_each_entry(object, &kpmod->objects, list)
    2594:	deb50000 	ld	s5,0(s5)
    2598:	16b2fff3 	bne	s5,s2,2568 <kpatch_unregister+0x140>
    259c:	00000000 	nop
__read_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:193
    25a0:	8fc20000 	lw	v0,0(s8)
kpatch_state_idle():
/home/loongson/kpatch/kmod/core/core.c:170

static inline void kpatch_state_idle(void)
{
	int state = atomic_read(&kpatch_state);

	WARN_ON(state != KPATCH_STATE_SUCCESS && state != KPATCH_STATE_FAILURE);
    25a4:	2442fffe 	addiu	v0,v0,-2
    25a8:	2c420002 	sltiu	v0,v0,2
    25ac:	1040006d 	beqz	v0,2764 <kpatch_unregister+0x33c>
    25b0:	3c040000 	lui	a0,0x0
atomic_set():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/atomic.h:56
    25b4:	0000102d 	move	v0,zero
    25b8:	0000000f 	sync
    25bc:	afc20000 	sw	v0,0(s8)
    25c0:	0000000f 	sync
kpatch_unregister():
/home/loongson/kpatch/kmod/core/core.c:1383
	 * see any changes to funcs or funcs->op that might occur after this
	 * point.
	 *
	 * Any NMI handlers starting after this point will see the IDLE state.
	 */
	synchronize_rcu();
    25c4:	3c020000 	lui	v0,0x0
    25c8:	64420000 	daddiu	v0,v0,0
    25cc:	0040f809 	jalr	v0
    25d0:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1385

	if (ret) {
    25d4:	12000036 	beqz	s0,26b0 <kpatch_unregister+0x288>
/home/loongson/kpatch/kmod/core/core.c:1386
		do_for_each_linked_func(kpmod, func) {
    25d8:	00000000 	nop
    25dc:	de910008 	ld	s1,8(s4)
    25e0:	12510012 	beq	s2,s1,262c <kpatch_unregister+0x204>
    25e4:	3c020000 	lui	v0,0x0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212 (discriminator 22)
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    25e8:	64540000 	daddiu	s4,v0,0
    25ec:	3c150000 	lui	s5,0x0
    25f0:	de220070 	ld	v0,112(s1)
    25f4:	10400049 	beqz	v0,271c <kpatch_unregister+0x2f4>
    25f8:	de240010 	ld	a0,16(s1)
kpatch_unregister():
/home/loongson/kpatch/kmod/core/core.c:1386
	 * Any NMI handlers starting after this point will see the IDLE state.
	 */
	synchronize_rcu();

	if (ret) {
		do_for_each_linked_func(kpmod, func) {
    25fc:	de240018 	ld	a0,24(s1)
    2600:	66220018 	daddiu	v0,s1,24
    2604:	10440006 	beq	v0,a0,2620 <kpatch_unregister+0x1f8>
    2608:	6483ffd0 	daddiu	v1,a0,-48
    260c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1386 (discriminator 16)
    2610:	dc660030 	ld	a2,48(v1)
/home/loongson/kpatch/kmod/core/core.c:1387 (discriminator 16)
			func->op = KPATCH_OP_NONE;
    2614:	ac600058 	sw	zero,88(v1)
/home/loongson/kpatch/kmod/core/core.c:1386 (discriminator 16)
	 * Any NMI handlers starting after this point will see the IDLE state.
	 */
	synchronize_rcu();

	if (ret) {
		do_for_each_linked_func(kpmod, func) {
    2618:	1446fffd 	bne	v0,a2,2610 <kpatch_unregister+0x1e8>
    261c:	64c3ffd0 	daddiu	v1,a2,-48
/home/loongson/kpatch/kmod/core/core.c:1386
    2620:	de310000 	ld	s1,0(s1)
    2624:	1632fff2 	bne	s1,s2,25f0 <kpatch_unregister+0x1c8>
    2628:	00000000 	nop
    262c:	0200102d 	move	v0,s0
/home/loongson/kpatch/kmod/core/core.c:1414
		module_put(kpmod->mod);

	list_del(&kpmod->list);

out:
	up(&kpatch_mutex);
    2630:	3c030000 	lui	v1,0x0
    2634:	00000000 	nop
    2638:	66640000 	daddiu	a0,s3,0
    263c:	64630000 	daddiu	v1,v1,0
    2640:	0060f809 	jalr	v1
    2644:	ffa20008 	sd	v0,8(sp)
/home/loongson/kpatch/kmod/core/core.c:1416
	return ret;
}
    2648:	dfbf0058 	ld	ra,88(sp)
    264c:	dfa20008 	ld	v0,8(sp)
    2650:	dfbe0050 	ld	s8,80(sp)
    2654:	00000000 	nop
    2658:	dfb70048 	ld	s7,72(sp)
    265c:	dfb60040 	ld	s6,64(sp)
    2660:	dfb50038 	ld	s5,56(sp)
    2664:	00000000 	nop
    2668:	dfb40030 	ld	s4,48(sp)
    266c:	dfb30028 	ld	s3,40(sp)
    2670:	dfb20020 	ld	s2,32(sp)
    2674:	00000000 	nop
    2678:	dfb10018 	ld	s1,24(sp)
    267c:	dfb00010 	ld	s0,16(sp)
    2680:	03e00008 	jr	ra
    2684:	67bd0060 	daddiu	sp,sp,96
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2688:	67c20000 	daddiu	v0,s8,0
    268c:	0040f809 	jalr	v0
    2690:	02e0282d 	move	a1,s7
    2694:	1040ff89 	beqz	v0,24bc <kpatch_unregister+0x94>
    2698:	00000000 	nop
kpatch_unregister():
/home/loongson/kpatch/kmod/core/core.c:1355
	if (!kpmod->enabled) {
	    ret = -EINVAL;
	    goto out;
	}

	do_for_each_linked_func(kpmod, func) {
    269c:	de100000 	ld	s0,0(s0)
    26a0:	1612ff83 	bne	s0,s2,24b0 <kpatch_unregister+0x88>
    26a4:	00000000 	nop
    26a8:	08000000 	j	0 <kpatch_get_func>
    26ac:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1392
			func->op = KPATCH_OP_NONE;
		} while_for_each_linked_func();
		goto out;
	}

	list_for_each_entry(object, &kpmod->objects, list) {
    26b0:	de900008 	ld	s0,8(s4)
    26b4:	1212003b 	beq	s0,s2,27a4 <kpatch_unregister+0x37c>
    26b8:	3c160000 	lui	s6,0x0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    26bc:	66d60000 	daddiu	s6,s6,0
    26c0:	3c170000 	lui	s7,0x0
kpatch_unregister():
/home/loongson/kpatch/kmod/core/core.c:1395
	}

	list_for_each_entry(object, &kpmod->objects, list) {
		if (!kpatch_object_linked(object))
			continue;
		ret = kpatch_unlink_object(object);
    26c4:	08000000 	j	0 <kpatch_get_func>
    26c8:	3c150000 	lui	s5,0x0
    26cc:	00000000 	nop
    26d0:	66a20000 	daddiu	v0,s5,0
    26d4:	00000000 	nop
    26d8:	0040f809 	jalr	v0
    26dc:	0200202d 	move	a0,s0
/home/loongson/kpatch/kmod/core/core.c:1396
		if (ret)
    26e0:	1440ffd5 	bnez	v0,2638 <kpatch_unregister+0x210>
    26e4:	3c030000 	lui	v1,0x0
/home/loongson/kpatch/kmod/core/core.c:1392
			func->op = KPATCH_OP_NONE;
		} while_for_each_linked_func();
		goto out;
	}

	list_for_each_entry(object, &kpmod->objects, list) {
    26e8:	de100000 	ld	s0,0(s0)
    26ec:	1212002d 	beq	s0,s2,27a4 <kpatch_unregister+0x37c>
    26f0:	00000000 	nop
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    26f4:	de020070 	ld	v0,112(s0)
    26f8:	1440fff5 	bnez	v0,26d0 <kpatch_unregister+0x2a8>
    26fc:	de040010 	ld	a0,16(s0)
    2700:	66e20000 	daddiu	v0,s7,0
    2704:	0040f809 	jalr	v0
    2708:	02c0282d 	move	a1,s6
    270c:	1040fff2 	beqz	v0,26d8 <kpatch_unregister+0x2b0>
/home/loongson/kpatch/kmod/core/core.c:1392
			func->op = KPATCH_OP_NONE;
		} while_for_each_linked_func();
		goto out;
	}

	list_for_each_entry(object, &kpmod->objects, list) {
    2710:	66a20000 	daddiu	v0,s5,0
kpatch_unregister():
    2714:	08000000 	j	0 <kpatch_get_func>
    2718:	de100000 	ld	s0,0(s0)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    271c:	66a20000 	daddiu	v0,s5,0
    2720:	0040f809 	jalr	v0
    2724:	0280282d 	move	a1,s4
    2728:	1040ffb4 	beqz	v0,25fc <kpatch_unregister+0x1d4>
    272c:	00000000 	nop
kpatch_unregister():
/home/loongson/kpatch/kmod/core/core.c:1386
	 * Any NMI handlers starting after this point will see the IDLE state.
	 */
	synchronize_rcu();

	if (ret) {
		do_for_each_linked_func(kpmod, func) {
    2730:	de310000 	ld	s1,0(s1)
    2734:	1632ffae 	bne	s1,s2,25f0 <kpatch_unregister+0x1c8>
    2738:	0200102d 	move	v0,s0
/home/loongson/kpatch/kmod/core/core.c:1414
		module_put(kpmod->mod);

	list_del(&kpmod->list);

out:
	up(&kpatch_mutex);
    273c:	08000000 	j	0 <kpatch_get_func>
    2740:	3c030000 	lui	v1,0x0
    2744:	00000000 	nop
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2748:	66e20000 	daddiu	v0,s7,0
    274c:	0040f809 	jalr	v0
    2750:	02c0282d 	move	a1,s6
    2754:	1040ff87 	beqz	v0,2574 <kpatch_unregister+0x14c>
    2758:	00000000 	nop
kpatch_unregister():
/home/loongson/kpatch/kmod/core/core.c:1370

	ret = stop_machine(kpatch_remove_patch, kpmod, NULL);

	if (!ret) {
		/* run any user-defined post-unpatch callbacks */
		list_for_each_entry(object, &kpmod->objects, list)
    275c:	08000000 	j	0 <kpatch_get_func>
    2760:	deb50000 	ld	s5,0(s5)
kpatch_state_idle():
/home/loongson/kpatch/kmod/core/core.c:170

static inline void kpatch_state_idle(void)
{
	int state = atomic_read(&kpatch_state);

	WARN_ON(state != KPATCH_STATE_SUCCESS && state != KPATCH_STATE_FAILURE);
    2764:	3c020000 	lui	v0,0x0
    2768:	64840000 	daddiu	a0,a0,0
    276c:	64420000 	daddiu	v0,v0,0
    2770:	0040f809 	jalr	v0
    2774:	240500aa 	li	a1,170
kpatch_unregister():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/atomic.h:56
    2778:	08000000 	j	0 <kpatch_get_func>
    277c:	0000102d 	move	v0,zero
kpatch_state_updating():
/home/loongson/kpatch/kmod/core/core.c:176
	atomic_set(&kpatch_state, KPATCH_STATE_IDLE);
}

static inline void kpatch_state_updating(void)
{
	WARN_ON(atomic_read(&kpatch_state) != KPATCH_STATE_IDLE);
    2780:	3c020000 	lui	v0,0x0
    2784:	64840000 	daddiu	a0,a0,0
    2788:	64420000 	daddiu	v0,v0,0
    278c:	0040f809 	jalr	v0
    2790:	240500b0 	li	a1,176
kpatch_unregister():
/home/loongson/linux-4.19-loongson/./arch/mips/include/asm/atomic.h:56
    2794:	08000000 	j	0 <kpatch_get_func>
    2798:	24020001 	li	v0,1
/home/loongson/kpatch/kmod/core/core.c:1351
	int ret, force = 0;

	down(&kpatch_mutex);

	if (!kpmod->enabled) {
	    ret = -EINVAL;
    279c:	08000000 	j	0 <kpatch_get_func>
    27a0:	2402ffea 	li	v0,-22
/home/loongson/kpatch/kmod/core/core.c:1400
		ret = kpatch_unlink_object(object);
		if (ret)
			goto out;
	}

	pr_notice("unloaded patch module '%s'\n", kpmod->mod->name);
    27a4:	de850000 	ld	a1,0(s4)
    27a8:	3c040000 	lui	a0,0x0
    27ac:	3c020000 	lui	v0,0x0
    27b0:	64840000 	daddiu	a0,a0,0
    27b4:	64420000 	daddiu	v0,v0,0
    27b8:	0040f809 	jalr	v0
    27bc:	64a50018 	daddiu	a1,a1,24
/home/loongson/kpatch/kmod/core/core.c:1408

	/*
	 * Don't allow modules with forced functions to be removed because they
	 * might still be in use.
	 */
	if (!force)
    27c0:	16200005 	bnez	s1,27d8 <kpatch_unregister+0x3b0>
    27c4:	a2800018 	sb	zero,24(s4)
/home/loongson/kpatch/kmod/core/core.c:1409
		module_put(kpmod->mod);
    27c8:	3c020000 	lui	v0,0x0
    27cc:	64420000 	daddiu	v0,v0,0
    27d0:	0040f809 	jalr	v0
    27d4:	de840000 	ld	a0,0(s4)
__list_del_entry():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:120
static inline void __list_del_entry(struct list_head *entry)
{
	if (!__list_del_entry_valid(entry))
		return;

	__list_del(entry->prev, entry->next);
    27d8:	de830028 	ld	v1,40(s4)
    27dc:	de840020 	ld	a0,32(s4)
list_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:127

static inline void list_del(struct list_head *entry)
{
	__list_del_entry(entry);
	entry->next = LIST_POISON1;
	entry->prev = LIST_POISON2;
    27e0:	0000102d 	move	v0,zero
__list_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:105
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 */
static inline void __list_del(struct list_head * prev, struct list_head * next)
{
	next->prev = prev;
    27e4:	fc830008 	sd	v1,8(a0)
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
{
	switch (size) {
	case 1: *(volatile __u8 *)p = *(__u8 *)res; break;
	case 2: *(volatile __u16 *)p = *(__u16 *)res; break;
	case 4: *(volatile __u32 *)p = *(__u32 *)res; break;
	case 8: *(volatile __u64 *)p = *(__u64 *)res; break;
    27e8:	fc640000 	sd	a0,0(v1)
list_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:126
}

static inline void list_del(struct list_head *entry)
{
	__list_del_entry(entry);
	entry->next = LIST_POISON1;
    27ec:	24030100 	li	v1,256
    27f0:	fe830020 	sd	v1,32(s4)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:127
	entry->prev = LIST_POISON2;
    27f4:	24030200 	li	v1,512
kpatch_unregister():
    27f8:	08000000 	j	0 <kpatch_get_func>
    27fc:	fe830028 	sd	v1,40(s4)

0000000000002800 <kpatch_module_notify_going>:
kpatch_module_notify_going():
/home/loongson/kpatch/kmod/core/core.c:1076
	return 0;
}

static int kpatch_module_notify_going(struct notifier_block *nb,
				      unsigned long action, void *data)
{
    2800:	67bdff90 	daddiu	sp,sp,-112
    2804:	ffbf0068 	sd	ra,104(sp)
    2808:	ffbe0060 	sd	s8,96(sp)
    280c:	ffb70058 	sd	s7,88(sp)
    2810:	ffb60050 	sd	s6,80(sp)
    2814:	ffb50048 	sd	s5,72(sp)
    2818:	ffb40040 	sd	s4,64(sp)
    281c:	ffb30038 	sd	s3,56(sp)
    2820:	ffb20030 	sd	s2,48(sp)
    2824:	ffb10028 	sd	s1,40(sp)
    2828:	ffb00020 	sd	s0,32(sp)
    282c:	3c030000 	lui	v1,0x0
    2830:	64630000 	daddiu	v1,v1,0
    2834:	03e0082d 	move	at,ra
    2838:	0060f809 	jalr	v1
    283c:	67ac0068 	daddiu	t0,sp,104
/home/loongson/kpatch/kmod/core/core.c:1077
printk("kpatch_module_notify_going\n");
    2840:	3c040000 	lui	a0,0x0
    2844:	3c130000 	lui	s3,0x0
    2848:	64840000 	daddiu	a0,a0,0
    284c:	66730000 	daddiu	s3,s3,0
/home/loongson/kpatch/kmod/core/core.c:1076
	return 0;
}

static int kpatch_module_notify_going(struct notifier_block *nb,
				      unsigned long action, void *data)
{
    2850:	00a0802d 	move	s0,a1
/home/loongson/kpatch/kmod/core/core.c:1077
printk("kpatch_module_notify_going\n");
    2854:	0260f809 	jalr	s3
    2858:	00c0a02d 	move	s4,a2
/home/loongson/kpatch/kmod/core/core.c:1084
	struct kpatch_module *kpmod;
	struct kpatch_object *object;
	struct kpatch_func *func;
	bool found = false;

	if (action != MODULE_STATE_GOING)
    285c:	24020002 	li	v0,2
    2860:	1202000f 	beq	s0,v0,28a0 <kpatch_module_notify_going+0xa0>
    2864:	dfbf0068 	ld	ra,104(sp)
/home/loongson/kpatch/kmod/core/core.c:1125

out:
	up(&kpatch_mutex);

	return 0;
}
    2868:	dfbe0060 	ld	s8,96(sp)
    286c:	dfb70058 	ld	s7,88(sp)
    2870:	dfb60050 	ld	s6,80(sp)
    2874:	00000000 	nop
    2878:	dfb50048 	ld	s5,72(sp)
    287c:	dfb40040 	ld	s4,64(sp)
    2880:	dfb30038 	ld	s3,56(sp)
    2884:	00000000 	nop
    2888:	dfb20030 	ld	s2,48(sp)
    288c:	dfb10028 	ld	s1,40(sp)
    2890:	dfb00020 	ld	s0,32(sp)
    2894:	0000102d 	move	v0,zero
    2898:	03e00008 	jr	ra
    289c:	67bd0070 	daddiu	sp,sp,112
/home/loongson/kpatch/kmod/core/core.c:1087
	bool found = false;

	if (action != MODULE_STATE_GOING)
		return 0;

	down(&kpatch_mutex);
    28a0:	3c150000 	lui	s5,0x0
    28a4:	3c020000 	lui	v0,0x0
    28a8:	64420000 	daddiu	v0,v0,0
    28ac:	0040f809 	jalr	v0
    28b0:	66a40000 	daddiu	a0,s5,0
/home/loongson/kpatch/kmod/core/core.c:1089

	list_for_each_entry(kpmod, &kpmod_list, list) {
    28b4:	3c030000 	lui	v1,0x0
    28b8:	dc620000 	ld	v0,0(v1)
    28bc:	64630000 	daddiu	v1,v1,0
    28c0:	10430012 	beq	v0,v1,290c <kpatch_module_notify_going+0x10c>
    28c4:	6450ffe0 	daddiu	s0,v0,-32
    28c8:	3c020000 	lui	v0,0x0
    28cc:	64570000 	daddiu	s7,v0,0
/home/loongson/kpatch/kmod/core/core.c:1094
if (kpmod)
printk("kpmod: %s\n", kpmod->mod->name);
		list_for_each_entry(object, &kpmod->objects, list) {
if (object)
printk("object: %s\n", object->name);
    28d0:	3c020000 	lui	v0,0x0
    28d4:	64560000 	daddiu	s6,v0,0
/home/loongson/kpatch/kmod/core/core.c:1096
if (object->mod)
printk("yes\n");
    28d8:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:1091

	down(&kpatch_mutex);

	list_for_each_entry(kpmod, &kpmod_list, list) {
if (kpmod)
printk("kpmod: %s\n", kpmod->mod->name);
    28dc:	3c0b0000 	lui	a7,0x0
    28e0:	3c0a0000 	lui	a6,0x0
/home/loongson/kpatch/kmod/core/core.c:1096
		list_for_each_entry(object, &kpmod->objects, list) {
if (object)
printk("object: %s\n", object->name);
if (object->mod)
printk("yes\n");
    28e4:	645e0000 	daddiu	s8,v0,0
/home/loongson/kpatch/kmod/core/core.c:1090
		return 0;

	down(&kpatch_mutex);

	list_for_each_entry(kpmod, &kpmod_list, list) {
if (kpmod)
    28e8:	1600000e 	bnez	s0,2924 <kpatch_module_notify_going+0x124>
    28ec:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1092
printk("kpmod: %s\n", kpmod->mod->name);
		list_for_each_entry(object, &kpmod->objects, list) {
    28f0:	de110008 	ld	s1,8(s0)
    28f4:	66120008 	daddiu	s2,s0,8
    28f8:	16320015 	bne	s1,s2,2950 <kpatch_module_notify_going+0x150>
    28fc:	66820018 	daddiu	v0,s4,24
/home/loongson/kpatch/kmod/core/core.c:1089
	if (action != MODULE_STATE_GOING)
		return 0;

	down(&kpatch_mutex);

	list_for_each_entry(kpmod, &kpmod_list, list) {
    2900:	de020020 	ld	v0,32(s0)
    2904:	1443fff8 	bne	v0,v1,28e8 <kpatch_module_notify_going+0xe8>
    2908:	6450ffe0 	daddiu	s0,v0,-32
/home/loongson/kpatch/kmod/core/core.c:1122
	post_unpatch_callback(object);

	kpatch_unlink_object(object);

out:
	up(&kpatch_mutex);
    290c:	3c020000 	lui	v0,0x0
    2910:	64420000 	daddiu	v0,v0,0
    2914:	0040f809 	jalr	v0
    2918:	66a40000 	daddiu	a0,s5,0
/home/loongson/kpatch/kmod/core/core.c:1124

	return 0;
    291c:	08000000 	j	0 <kpatch_get_func>
    2920:	dfbf0068 	ld	ra,104(sp)
/home/loongson/kpatch/kmod/core/core.c:1091

	down(&kpatch_mutex);

	list_for_each_entry(kpmod, &kpmod_list, list) {
if (kpmod)
printk("kpmod: %s\n", kpmod->mod->name);
    2924:	de050000 	ld	a1,0(s0)
    2928:	65640000 	daddiu	a0,a7,0
    292c:	64a50018 	daddiu	a1,a1,24
    2930:	ffa30010 	sd	v1,16(sp)
    2934:	ffaa0000 	sd	a6,0(sp)
    2938:	0260f809 	jalr	s3
    293c:	ffab0008 	sd	a7,8(sp)
    2940:	dfab0008 	ld	a7,8(sp)
    2944:	dfaa0000 	ld	a6,0(sp)
    2948:	08000000 	j	0 <kpatch_get_func>
    294c:	dfa30010 	ld	v1,16(sp)
    2950:	ffa20018 	sd	v0,24(sp)
/home/loongson/kpatch/kmod/core/core.c:1093
		list_for_each_entry(object, &kpmod->objects, list) {
if (object)
    2954:	16200020 	bnez	s1,29d8 <kpatch_module_notify_going+0x1d8>
    2958:	02c0202d 	move	a0,s6
/home/loongson/kpatch/kmod/core/core.c:1095
printk("object: %s\n", object->name);
if (object->mod)
    295c:	de220070 	ld	v0,112(s1)
    2960:	1440006f 	bnez	v0,2b20 <kpatch_module_notify_going+0x320>
    2964:	03c0202d 	move	a0,s8
/home/loongson/kpatch/kmod/core/core.c:1097
printk("yes\n");
printk("%s %s\n", object->name, mod->name);
    2968:	de250010 	ld	a1,16(s1)
    296c:	dfa60018 	ld	a2,24(sp)
    2970:	65440000 	daddiu	a0,a6,0
    2974:	ffa30010 	sd	v1,16(sp)
    2978:	ffaa0000 	sd	a6,0(sp)
    297c:	0260f809 	jalr	s3
    2980:	ffab0008 	sd	a7,8(sp)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2984:	de220070 	ld	v0,112(s1)
    2988:	de240010 	ld	a0,16(s1)
    298c:	dfa30010 	ld	v1,16(sp)
    2990:	00000000 	nop
    2994:	dfaa0000 	ld	a6,0(sp)
    2998:	10400058 	beqz	v0,2afc <kpatch_module_notify_going+0x2fc>
    299c:	dfab0008 	ld	a7,8(sp)
kpatch_module_notify_going():
/home/loongson/kpatch/kmod/core/core.c:1100
if (object->mod)
printk("yes\n");
printk("%s %s\n", object->name, mod->name);
			if (!kpatch_object_linked(object))
				continue;
			if (!strcmp(object->name, mod->name)) {
    29a0:	dfa50018 	ld	a1,24(sp)
    29a4:	ffa30010 	sd	v1,16(sp)
    29a8:	ffaa0000 	sd	a6,0(sp)
    29ac:	02e0f809 	jalr	s7
    29b0:	ffab0008 	sd	a7,8(sp)
    29b4:	dfa30010 	ld	v1,16(sp)
    29b8:	dfaa0000 	ld	a6,0(sp)
    29bc:	1040000f 	beqz	v0,29fc <kpatch_module_notify_going+0x1fc>
    29c0:	dfab0008 	ld	a7,8(sp)
/home/loongson/kpatch/kmod/core/core.c:1092
	down(&kpatch_mutex);

	list_for_each_entry(kpmod, &kpmod_list, list) {
if (kpmod)
printk("kpmod: %s\n", kpmod->mod->name);
		list_for_each_entry(object, &kpmod->objects, list) {
    29c4:	de310000 	ld	s1,0(s1)
    29c8:	1232ffcd 	beq	s1,s2,2900 <kpatch_module_notify_going+0x100>
    29cc:	00000000 	nop
    29d0:	08000000 	j	0 <kpatch_get_func>
    29d4:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1094
if (object)
printk("object: %s\n", object->name);
    29d8:	de250010 	ld	a1,16(s1)
    29dc:	ffa30010 	sd	v1,16(sp)
    29e0:	ffaa0000 	sd	a6,0(sp)
    29e4:	0260f809 	jalr	s3
    29e8:	ffab0008 	sd	a7,8(sp)
    29ec:	dfab0008 	ld	a7,8(sp)
    29f0:	dfaa0000 	ld	a6,0(sp)
    29f4:	08000000 	j	0 <kpatch_get_func>
    29f8:	dfa30010 	ld	v1,16(sp)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    29fc:	de220070 	ld	v0,112(s1)
    2a00:	10400037 	beqz	v0,2ae0 <kpatch_module_notify_going+0x2e0>
    2a04:	de240010 	ld	a0,16(s1)
pre_unpatch_callback():
/home/loongson/kpatch/kmod/core/core.c:361
}

static inline void pre_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->pre_unpatch_callback &&
    2a08:	de230058 	ld	v1,88(s1)
/home/loongson/kpatch/kmod/core/core.c:360
		(*object->post_patch_callback)(object);
}

static inline void pre_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
    2a0c:	10600004 	beqz	v1,2a20 <kpatch_module_notify_going+0x220>
    2a10:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:361
	    object->pre_unpatch_callback &&
    2a14:	92220068 	lbu	v0,104(s1)
    2a18:	14400024 	bnez	v0,2aac <kpatch_module_notify_going+0x2ac>
    2a1c:	00000000 	nop
kpatch_module_notify_going():
/home/loongson/kpatch/kmod/core/core.c:1114

	/* run user-defined pre-unpatch callback */
	pre_unpatch_callback(object);

	/* remove from the global func hash */
	list_for_each_entry(func, &object->funcs, list)
    2a20:	de230018 	ld	v1,24(s1)
    2a24:	66250018 	daddiu	a1,s1,24
    2a28:	10a3000d 	beq	a1,v1,2a60 <kpatch_module_notify_going+0x260>
    2a2c:	6462ffd0 	daddiu	v0,v1,-48
    2a30:	dc430050 	ld	v1,80(v0)
hlist_del_init_rcu():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:156 (discriminator 9)
 * perfectly legal to run concurrently with the _rcu list-traversal
 * primitives, such as hlist_for_each_entry_rcu().
 */
static inline void hlist_del_init_rcu(struct hlist_node *n)
{
	if (!hlist_unhashed(n)) {
    2a34:	10600007 	beqz	v1,2a54 <kpatch_module_notify_going+0x254>
    2a38:	00000000 	nop
__hlist_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:676
	return !READ_ONCE(h->first);
}

static inline void __hlist_del(struct hlist_node *n)
{
	struct hlist_node *next = n->next;
    2a3c:	dc440048 	ld	a0,72(v0)
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
    2a40:	fc640000 	sd	a0,0(v1)
__hlist_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:680
	struct hlist_node **pprev = n->pprev;

	WRITE_ONCE(*pprev, next);
	if (next)
    2a44:	10800002 	beqz	a0,2a50 <kpatch_module_notify_going+0x250>
    2a48:	00000000 	nop
/home/loongson/linux-4.19-loongson/./include/linux/list.h:681
		next->pprev = pprev;
    2a4c:	fc830008 	sd	v1,8(a0)
hlist_del_init_rcu():
/home/loongson/linux-4.19-loongson/./include/linux/rculist.h:158
		__hlist_del(n);
		n->pprev = NULL;
    2a50:	fc400050 	sd	zero,80(v0)
kpatch_module_notify_going():
/home/loongson/kpatch/kmod/core/core.c:1114 (discriminator 9)
    2a54:	dc430030 	ld	v1,48(v0)
    2a58:	14a3fff5 	bne	a1,v1,2a30 <kpatch_module_notify_going+0x230>
    2a5c:	6462ffd0 	daddiu	v0,v1,-48
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2a60:	de220070 	ld	v0,112(s1)
    2a64:	10400015 	beqz	v0,2abc <kpatch_module_notify_going+0x2bc>
    2a68:	de240010 	ld	a0,16(s1)
post_unpatch_callback():
/home/loongson/kpatch/kmod/core/core.c:369
}

static inline void post_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->post_unpatch_callback &&
    2a6c:	de220060 	ld	v0,96(s1)
/home/loongson/kpatch/kmod/core/core.c:368
		(*object->pre_unpatch_callback)(object);
}

static inline void post_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
    2a70:	10400004 	beqz	v0,2a84 <kpatch_module_notify_going+0x284>
    2a74:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:369
	    object->post_unpatch_callback &&
    2a78:	92230068 	lbu	v1,104(s1)
    2a7c:	14600007 	bnez	v1,2a9c <kpatch_module_notify_going+0x29c>
    2a80:	00000000 	nop
kpatch_module_notify_going():
/home/loongson/kpatch/kmod/core/core.c:1119
	list_for_each_entry(func, &object->funcs, list)
		hash_del_rcu(&func->node);
	/* run user-defined pre-unpatch callback */
	post_unpatch_callback(object);

	kpatch_unlink_object(object);
    2a84:	3c020000 	lui	v0,0x0
    2a88:	64420000 	daddiu	v0,v0,0
    2a8c:	0040f809 	jalr	v0
    2a90:	0220202d 	move	a0,s1
/home/loongson/kpatch/kmod/core/core.c:1122

out:
	up(&kpatch_mutex);
    2a94:	08000000 	j	0 <kpatch_get_func>
    2a98:	3c020000 	lui	v0,0x0
post_unpatch_callback():
/home/loongson/kpatch/kmod/core/core.c:371
static inline void post_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->post_unpatch_callback &&
	    object->callbacks_enabled)
		(*object->post_unpatch_callback)(object);
    2a9c:	0040f809 	jalr	v0
    2aa0:	0220202d 	move	a0,s1
kpatch_module_notify_going():
/home/loongson/kpatch/kmod/core/core.c:1119
	list_for_each_entry(func, &object->funcs, list)
		hash_del_rcu(&func->node);
	/* run user-defined pre-unpatch callback */
	post_unpatch_callback(object);

	kpatch_unlink_object(object);
    2aa4:	08000000 	j	0 <kpatch_get_func>
    2aa8:	3c020000 	lui	v0,0x0
pre_unpatch_callback():
/home/loongson/kpatch/kmod/core/core.c:363
static inline void pre_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->pre_unpatch_callback &&
	    object->callbacks_enabled)
		(*object->pre_unpatch_callback)(object);
    2aac:	0060f809 	jalr	v1
    2ab0:	0220202d 	move	a0,s1
kpatch_module_notify_going():
/home/loongson/kpatch/kmod/core/core.c:1114

	/* run user-defined pre-unpatch callback */
	pre_unpatch_callback(object);

	/* remove from the global func hash */
	list_for_each_entry(func, &object->funcs, list)
    2ab4:	08000000 	j	0 <kpatch_get_func>
    2ab8:	de230018 	ld	v1,24(s1)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2abc:	3c050000 	lui	a1,0x0
    2ac0:	3c030000 	lui	v1,0x0
    2ac4:	64630000 	daddiu	v1,v1,0
    2ac8:	0060f809 	jalr	v1
    2acc:	64a50000 	daddiu	a1,a1,0
    2ad0:	1040ffe6 	beqz	v0,2a6c <kpatch_module_notify_going+0x26c>
    2ad4:	3c020000 	lui	v0,0x0
kpatch_module_notify_going():
/home/loongson/kpatch/kmod/core/core.c:1119
	list_for_each_entry(func, &object->funcs, list)
		hash_del_rcu(&func->node);
	/* run user-defined pre-unpatch callback */
	post_unpatch_callback(object);

	kpatch_unlink_object(object);
    2ad8:	08000000 	j	0 <kpatch_get_func>
    2adc:	64420000 	daddiu	v0,v0,0
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2ae0:	3c050000 	lui	a1,0x0
    2ae4:	02e0f809 	jalr	s7
    2ae8:	64a50000 	daddiu	a1,a1,0
    2aec:	1440ffcc 	bnez	v0,2a20 <kpatch_module_notify_going+0x220>
    2af0:	00000000 	nop
kpatch_module_notify_going():
/home/loongson/kpatch/kmod/core/core.c:361
}

static inline void pre_unpatch_callback(struct kpatch_object *object)
{
	if (kpatch_object_linked(object) &&
	    object->pre_unpatch_callback &&
    2af4:	08000000 	j	0 <kpatch_get_func>
    2af8:	de230058 	ld	v1,88(s1)
kpatch_object_linked():
/home/loongson/kpatch/kmod/core/core.c:212
	return NULL;
}

static inline bool kpatch_object_linked(struct kpatch_object *object)
{
	return object->mod || !strcmp(object->name, "vmlinux");
    2afc:	3c020000 	lui	v0,0x0
    2b00:	02e0f809 	jalr	s7
    2b04:	64450000 	daddiu	a1,v0,0
    2b08:	dfa30010 	ld	v1,16(sp)
    2b0c:	dfaa0000 	ld	a6,0(sp)
    2b10:	1440ffac 	bnez	v0,29c4 <kpatch_module_notify_going+0x1c4>
    2b14:	dfab0008 	ld	a7,8(sp)
    2b18:	08000000 	j	0 <kpatch_get_func>
    2b1c:	de240010 	ld	a0,16(s1)
kpatch_module_notify_going():
/home/loongson/kpatch/kmod/core/core.c:1096
printk("kpmod: %s\n", kpmod->mod->name);
		list_for_each_entry(object, &kpmod->objects, list) {
if (object)
printk("object: %s\n", object->name);
if (object->mod)
printk("yes\n");
    2b20:	ffa30010 	sd	v1,16(sp)
    2b24:	ffaa0000 	sd	a6,0(sp)
    2b28:	0260f809 	jalr	s3
    2b2c:	ffab0008 	sd	a7,8(sp)
    2b30:	dfab0008 	ld	a7,8(sp)
    2b34:	dfaa0000 	ld	a6,0(sp)
    2b38:	08000000 	j	0 <kpatch_get_func>
    2b3c:	dfa30010 	ld	v1,16(sp)

0000000000002b40 <init_module>:
kpatch_init():
/home/loongson/kpatch/kmod/core/core.c:1430
	.notifier_call = kpatch_module_notify_going,
	.priority = INT_MAX, /* called first */
};

static int kpatch_init(void)
{
    2b40:	67bdffd0 	daddiu	sp,sp,-48
    2b44:	ffbf0028 	sd	ra,40(sp)
    2b48:	ffb30020 	sd	s3,32(sp)
    2b4c:	ffb20018 	sd	s2,24(sp)
    2b50:	ffb10010 	sd	s1,16(sp)
    2b54:	ffb00008 	sd	s0,8(sp)
    2b58:	3c030000 	lui	v1,0x0
    2b5c:	64630000 	daddiu	v1,v1,0
    2b60:	03e0082d 	move	at,ra
    2b64:	0060f809 	jalr	v1
    2b68:	67ac0028 	daddiu	t0,sp,40
/home/loongson/kpatch/kmod/core/core.c:1433
	int ret;

	kpatch_set_memory_rw = (void *)kallsyms_lookup_name("set_memory_rw");
    2b6c:	3c040000 	lui	a0,0x0
    2b70:	3c100000 	lui	s0,0x0
    2b74:	66100000 	daddiu	s0,s0,0
    2b78:	0200f809 	jalr	s0
    2b7c:	64840000 	daddiu	a0,a0,0
    2b80:	3c030000 	lui	v1,0x0
/home/loongson/kpatch/kmod/core/core.c:1434
	if (!kpatch_set_memory_rw) {
    2b84:	1040004b 	beqz	v0,2cb4 <init_module+0x174>
    2b88:	fc620000 	sd	v0,0(v1)
/home/loongson/kpatch/kmod/core/core.c:1439
		pr_err("can't find set_memory_rw symbol\n");
		return -ENXIO;
	}

	kpatch_set_memory_ro = (void *)kallsyms_lookup_name("set_memory_ro");
    2b8c:	3c040000 	lui	a0,0x0
    2b90:	0200f809 	jalr	s0
    2b94:	64840000 	daddiu	a0,a0,0
    2b98:	3c030000 	lui	v1,0x0
/home/loongson/kpatch/kmod/core/core.c:1440
	if (!kpatch_set_memory_ro) {
    2b9c:	1040003e 	beqz	v0,2c98 <init_module+0x158>
    2ba0:	fc620000 	sd	v0,0(v1)
/home/loongson/kpatch/kmod/core/core.c:1445
		pr_err("can't find set_memory_ro symbol\n");
		return -ENXIO;
	}

	kpatch_root_kobj = kobject_create_and_add("kpatch", kernel_kobj);
    2ba4:	3c020000 	lui	v0,0x0
    2ba8:	dc450000 	ld	a1,0(v0)
    2bac:	3c040000 	lui	a0,0x0
    2bb0:	3c020000 	lui	v0,0x0
    2bb4:	64840000 	daddiu	a0,a0,0
    2bb8:	64420000 	daddiu	v0,v0,0
    2bbc:	0040f809 	jalr	v0
    2bc0:	3c120000 	lui	s2,0x0
/home/loongson/kpatch/kmod/core/core.c:1446
	if (!kpatch_root_kobj)
    2bc4:	10400032 	beqz	v0,2c90 <init_module+0x150>
    2bc8:	fe420000 	sd	v0,0(s2)
/home/loongson/kpatch/kmod/core/core.c:1449
		return -ENOMEM;

	ret = register_module_notifier(&kpatch_module_nb_coming);
    2bcc:	3c130000 	lui	s3,0x0
    2bd0:	3c110000 	lui	s1,0x0
    2bd4:	66310000 	daddiu	s1,s1,0
    2bd8:	0220f809 	jalr	s1
    2bdc:	66640000 	daddiu	a0,s3,0
/home/loongson/kpatch/kmod/core/core.c:1450
	if (ret)
    2be0:	1040000f 	beqz	v0,2c20 <init_module+0xe0>
    2be4:	0040802d 	move	s0,v0
/home/loongson/kpatch/kmod/core/core.c:1461
	return 0;

err_unregister_coming:
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_coming));
err_root_kobj:
	kobject_put(kpatch_root_kobj);
    2be8:	3c020000 	lui	v0,0x0
    2bec:	64420000 	daddiu	v0,v0,0
    2bf0:	0040f809 	jalr	v0
    2bf4:	de440000 	ld	a0,0(s2)
/home/loongson/kpatch/kmod/core/core.c:1462
	return ret;
    2bf8:	0200102d 	move	v0,s0
/home/loongson/kpatch/kmod/core/core.c:1463
}
    2bfc:	dfbf0028 	ld	ra,40(sp)
    2c00:	dfb30020 	ld	s3,32(sp)
    2c04:	dfb20018 	ld	s2,24(sp)
    2c08:	00000000 	nop
    2c0c:	dfb10010 	ld	s1,16(sp)
    2c10:	dfb00008 	ld	s0,8(sp)
    2c14:	03e00008 	jr	ra
    2c18:	67bd0030 	daddiu	sp,sp,48
    2c1c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1452
		return -ENOMEM;

	ret = register_module_notifier(&kpatch_module_nb_coming);
	if (ret)
		goto err_root_kobj;
	ret = register_module_notifier(&kpatch_module_nb_going);
    2c20:	3c040000 	lui	a0,0x0
    2c24:	0220f809 	jalr	s1
    2c28:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:1453
	if (ret)
    2c2c:	1440000a 	bnez	v0,2c58 <init_module+0x118>
    2c30:	0040802d 	move	s0,v0
/home/loongson/kpatch/kmod/core/core.c:1463
err_unregister_coming:
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_coming));
err_root_kobj:
	kobject_put(kpatch_root_kobj);
	return ret;
}
    2c34:	dfbf0028 	ld	ra,40(sp)
    2c38:	dfb30020 	ld	s3,32(sp)
    2c3c:	dfb20018 	ld	s2,24(sp)
    2c40:	00000000 	nop
    2c44:	dfb10010 	ld	s1,16(sp)
    2c48:	dfb00008 	ld	s0,8(sp)
/home/loongson/kpatch/kmod/core/core.c:1456
		goto err_root_kobj;
	ret = register_module_notifier(&kpatch_module_nb_going);
	if (ret)
		goto err_unregister_coming;

	return 0;
    2c4c:	0000102d 	move	v0,zero
/home/loongson/kpatch/kmod/core/core.c:1463
err_unregister_coming:
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_coming));
err_root_kobj:
	kobject_put(kpatch_root_kobj);
	return ret;
}
    2c50:	03e00008 	jr	ra
    2c54:	67bd0030 	daddiu	sp,sp,48
/home/loongson/kpatch/kmod/core/core.c:1459
		goto err_unregister_coming;

	return 0;

err_unregister_coming:
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_coming));
    2c58:	3c020000 	lui	v0,0x0
    2c5c:	64420000 	daddiu	v0,v0,0
    2c60:	0040f809 	jalr	v0
    2c64:	66640000 	daddiu	a0,s3,0
    2c68:	1040ffdf 	beqz	v0,2be8 <init_module+0xa8>
    2c6c:	3c040000 	lui	a0,0x0
/home/loongson/kpatch/kmod/core/core.c:1459 (discriminator 1)
    2c70:	3c020000 	lui	v0,0x0
    2c74:	64840000 	daddiu	a0,a0,0
    2c78:	64420000 	daddiu	v0,v0,0
    2c7c:	0040f809 	jalr	v0
    2c80:	240505b3 	li	a1,1459
/home/loongson/kpatch/kmod/core/core.c:1461 (discriminator 1)
err_root_kobj:
	kobject_put(kpatch_root_kobj);
    2c84:	08000000 	j	0 <kpatch_get_func>
    2c88:	3c020000 	lui	v0,0x0
    2c8c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1447
		return -ENXIO;
	}

	kpatch_root_kobj = kobject_create_and_add("kpatch", kernel_kobj);
	if (!kpatch_root_kobj)
		return -ENOMEM;
    2c90:	08000000 	j	0 <kpatch_get_func>
    2c94:	2402fff4 	li	v0,-12
/home/loongson/kpatch/kmod/core/core.c:1441
		return -ENXIO;
	}

	kpatch_set_memory_ro = (void *)kallsyms_lookup_name("set_memory_ro");
	if (!kpatch_set_memory_ro) {
		pr_err("can't find set_memory_ro symbol\n");
    2c98:	3c040000 	lui	a0,0x0
    2c9c:	3c020000 	lui	v0,0x0
    2ca0:	64420000 	daddiu	v0,v0,0
    2ca4:	0040f809 	jalr	v0
/home/loongson/kpatch/kmod/core/core.c:1442
		return -ENXIO;
    2ca8:	64840000 	daddiu	a0,a0,0
    2cac:	08000000 	j	0 <kpatch_get_func>
    2cb0:	2402fffa 	li	v0,-6
/home/loongson/kpatch/kmod/core/core.c:1435
{
	int ret;

	kpatch_set_memory_rw = (void *)kallsyms_lookup_name("set_memory_rw");
	if (!kpatch_set_memory_rw) {
		pr_err("can't find set_memory_rw symbol\n");
    2cb4:	3c040000 	lui	a0,0x0
    2cb8:	3c020000 	lui	v0,0x0
    2cbc:	64420000 	daddiu	v0,v0,0
    2cc0:	0040f809 	jalr	v0
    2cc4:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:1436
		return -ENXIO;
    2cc8:	08000000 	j	0 <kpatch_get_func>
    2ccc:	2402fffa 	li	v0,-6

0000000000002cd0 <cleanup_module>:
kpatch_exit():
/home/loongson/kpatch/kmod/core/core.c:1466
	kobject_put(kpatch_root_kobj);
	return ret;
}

static void kpatch_exit(void)
{
    2cd0:	67bdfff0 	daddiu	sp,sp,-16
    2cd4:	ffbf0008 	sd	ra,8(sp)
    2cd8:	ffb00000 	sd	s0,0(sp)
    2cdc:	3c030000 	lui	v1,0x0
    2ce0:	64630000 	daddiu	v1,v1,0
    2ce4:	03e0082d 	move	at,ra
    2ce8:	0060f809 	jalr	v1
    2cec:	67ac0008 	daddiu	t0,sp,8
/home/loongson/kpatch/kmod/core/core.c:1467
	rcu_barrier();
    2cf0:	3c020000 	lui	v0,0x0
    2cf4:	64420000 	daddiu	v0,v0,0
    2cf8:	0040f809 	jalr	v0
    2cfc:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1469

	WARN_ON(kpatch_num_patched != 0);
    2d00:	3c020000 	lui	v0,0x0
    2d04:	8c420000 	lw	v0,0(v0)
    2d08:	14400015 	bnez	v0,2d60 <cleanup_module+0x90>
    2d0c:	3c040000 	lui	a0,0x0
/home/loongson/kpatch/kmod/core/core.c:1470 (discriminator 3)
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_coming));
    2d10:	3c040000 	lui	a0,0x0
    2d14:	3c100000 	lui	s0,0x0
    2d18:	66100000 	daddiu	s0,s0,0
    2d1c:	0200f809 	jalr	s0
    2d20:	64840000 	daddiu	a0,a0,0
    2d24:	1440001a 	bnez	v0,2d90 <cleanup_module+0xc0>
    2d28:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1471 (discriminator 3)
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_going));
    2d2c:	3c040000 	lui	a0,0x0
    2d30:	0200f809 	jalr	s0
    2d34:	64840000 	daddiu	a0,a0,0
    2d38:	14400021 	bnez	v0,2dc0 <cleanup_module+0xf0>
    2d3c:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:1473 (discriminator 3)
	kobject_put(kpatch_root_kobj);
}
    2d40:	dfbf0008 	ld	ra,8(sp)
    2d44:	dfb00000 	ld	s0,0(sp)
/home/loongson/kpatch/kmod/core/core.c:1472 (discriminator 3)
	rcu_barrier();

	WARN_ON(kpatch_num_patched != 0);
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_coming));
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_going));
	kobject_put(kpatch_root_kobj);
    2d48:	3c190000 	lui	t9,0x0
    2d4c:	dc440000 	ld	a0,0(v0)
    2d50:	67390000 	daddiu	t9,t9,0
    2d54:	03200008 	jr	t9
    2d58:	67bd0010 	daddiu	sp,sp,16
    2d5c:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:1469 (discriminator 1)

static void kpatch_exit(void)
{
	rcu_barrier();

	WARN_ON(kpatch_num_patched != 0);
    2d60:	3c020000 	lui	v0,0x0
    2d64:	64840000 	daddiu	a0,a0,0
    2d68:	240505bd 	li	a1,1469
    2d6c:	64420000 	daddiu	v0,v0,0
    2d70:	0040f809 	jalr	v0
    2d74:	3c100000 	lui	s0,0x0
/home/loongson/kpatch/kmod/core/core.c:1470 (discriminator 1)
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_coming));
    2d78:	3c040000 	lui	a0,0x0
    2d7c:	66100000 	daddiu	s0,s0,0
    2d80:	0200f809 	jalr	s0
    2d84:	64840000 	daddiu	a0,a0,0
    2d88:	1040ffe8 	beqz	v0,2d2c <cleanup_module+0x5c>
    2d8c:	00000000 	nop
    2d90:	3c040000 	lui	a0,0x0
    2d94:	3c020000 	lui	v0,0x0
    2d98:	64840000 	daddiu	a0,a0,0
    2d9c:	64420000 	daddiu	v0,v0,0
    2da0:	0040f809 	jalr	v0
    2da4:	240505be 	li	a1,1470
/home/loongson/kpatch/kmod/core/core.c:1471 (discriminator 1)
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_going));
    2da8:	3c040000 	lui	a0,0x0
    2dac:	0200f809 	jalr	s0
    2db0:	64840000 	daddiu	a0,a0,0
    2db4:	1040ffe2 	beqz	v0,2d40 <cleanup_module+0x70>
    2db8:	3c020000 	lui	v0,0x0
    2dbc:	00000000 	nop
    2dc0:	3c040000 	lui	a0,0x0
    2dc4:	3c020000 	lui	v0,0x0
    2dc8:	64840000 	daddiu	a0,a0,0
    2dcc:	64420000 	daddiu	v0,v0,0
    2dd0:	0040f809 	jalr	v0
    2dd4:	240505bf 	li	a1,1471
/home/loongson/kpatch/kmod/core/core.c:1472 (discriminator 1)
	kobject_put(kpatch_root_kobj);
    2dd8:	3c020000 	lui	v0,0x0
/home/loongson/kpatch/kmod/core/core.c:1473 (discriminator 1)
}
    2ddc:	dfbf0008 	ld	ra,8(sp)
    2de0:	dfb00000 	ld	s0,0(sp)
/home/loongson/kpatch/kmod/core/core.c:1472 (discriminator 1)
	rcu_barrier();

	WARN_ON(kpatch_num_patched != 0);
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_coming));
	WARN_ON(unregister_module_notifier(&kpatch_module_nb_going));
	kobject_put(kpatch_root_kobj);
    2de4:	3c190000 	lui	t9,0x0
    2de8:	dc440000 	ld	a0,0(v0)
    2dec:	67390000 	daddiu	t9,t9,0
    2df0:	03200008 	jr	t9
    2df4:	67bd0010 	daddiu	sp,sp,16
    2df8:	00000000 	nop
    2dfc:	00000000 	nop

Disassembly of section .text.unlikely:

0000000000000000 <kpatch_find_object_symbol>:
kpatch_find_object_symbol():
/home/loongson/kpatch/kmod/core/core.c:695
	return 0;
}

static int kpatch_find_object_symbol(const char *objname, const char *name,
				     unsigned long sympos, unsigned long *addr)
{
   0:	67bdff90 	daddiu	sp,sp,-112
   4:	ffbf0068 	sd	ra,104(sp)
   8:	ffb60060 	sd	s6,96(sp)
   c:	ffb50058 	sd	s5,88(sp)
  10:	ffb40050 	sd	s4,80(sp)
  14:	ffb30048 	sd	s3,72(sp)
  18:	ffb20040 	sd	s2,64(sp)
  1c:	ffb10038 	sd	s1,56(sp)
  20:	ffb00030 	sd	s0,48(sp)
  24:	3c030000 	lui	v1,0x0
  28:	64630000 	daddiu	v1,v1,0
  2c:	03e0082d 	move	at,ra
  30:	0060f809 	jalr	v1
  34:	67ac0068 	daddiu	t0,sp,104
  38:	3c120000 	lui	s2,0x0
  3c:	00a0982d 	move	s3,a1
  40:	00c0802d 	move	s0,a2
/home/loongson/kpatch/kmod/core/core.c:703
		.name = name,
		.addr = 0,
		.count = 0,
		.pos = sympos,
	};
printk("objname: %s name: %s sympos: %lx addr: %lx", objname, name, sympos, addr);
  44:	0080282d 	move	a1,a0
/home/loongson/kpatch/kmod/core/core.c:695
	return 0;
}

static int kpatch_find_object_symbol(const char *objname, const char *name,
				     unsigned long sympos, unsigned long *addr)
{
  48:	0080a02d 	move	s4,a0
  4c:	00e0a82d 	move	s5,a3
/home/loongson/kpatch/kmod/core/core.c:703
		.name = name,
		.addr = 0,
		.count = 0,
		.pos = sympos,
	};
printk("objname: %s name: %s sympos: %lx addr: %lx", objname, name, sympos, addr);
  50:	3c040000 	lui	a0,0x0
  54:	3c110000 	lui	s1,0x0
  58:	0260302d 	move	a2,s3
  5c:	0200382d 	move	a3,s0
  60:	02a0402d 	move	a4,s5
/home/loongson/kpatch/kmod/core/core.c:695
	return 0;
}

static int kpatch_find_object_symbol(const char *objname, const char *name,
				     unsigned long sympos, unsigned long *addr)
{
  64:	de420000 	ld	v0,0(s2)
/home/loongson/kpatch/kmod/core/core.c:703
		.name = name,
		.addr = 0,
		.count = 0,
		.pos = sympos,
	};
printk("objname: %s name: %s sympos: %lx addr: %lx", objname, name, sympos, addr);
  68:	64840000 	daddiu	a0,a0,0
  6c:	66310000 	daddiu	s1,s1,0
/home/loongson/kpatch/kmod/core/core.c:704
	mutex_lock(&module_mutex);
  70:	3c160000 	lui	s6,0x0
/home/loongson/kpatch/kmod/core/core.c:695
	return 0;
}

static int kpatch_find_object_symbol(const char *objname, const char *name,
				     unsigned long sympos, unsigned long *addr)
{
  74:	ffa20028 	sd	v0,40(sp)
/home/loongson/kpatch/kmod/core/core.c:696
	struct kpatch_kallsyms_args args = {
  78:	ffb40000 	sd	s4,0(sp)
  7c:	ffb30008 	sd	s3,8(sp)
  80:	ffb00020 	sd	s0,32(sp)
  84:	ffa00010 	sd	zero,16(sp)
/home/loongson/kpatch/kmod/core/core.c:703
		.name = name,
		.addr = 0,
		.count = 0,
		.pos = sympos,
	};
printk("objname: %s name: %s sympos: %lx addr: %lx", objname, name, sympos, addr);
  88:	0220f809 	jalr	s1
  8c:	ffa00018 	sd	zero,24(sp)
/home/loongson/kpatch/kmod/core/core.c:704
	mutex_lock(&module_mutex);
  90:	3c020000 	lui	v0,0x0
  94:	64420000 	daddiu	v0,v0,0
  98:	0040f809 	jalr	v0
  9c:	66c40000 	daddiu	a0,s6,0
/home/loongson/kpatch/kmod/core/core.c:705
	kallsyms_on_each_symbol(kpatch_kallsyms_callback, &args);
  a0:	3c040000 	lui	a0,0x0
  a4:	3c020000 	lui	v0,0x0
  a8:	64840000 	daddiu	a0,a0,0
  ac:	64420000 	daddiu	v0,v0,0
  b0:	0040f809 	jalr	v0
  b4:	03a0282d 	move	a1,sp
/home/loongson/kpatch/kmod/core/core.c:706
	mutex_unlock(&module_mutex);
  b8:	3c020000 	lui	v0,0x0
  bc:	66c40000 	daddiu	a0,s6,0
  c0:	64420000 	daddiu	v0,v0,0
  c4:	0040f809 	jalr	v0
  c8:	0220b02d 	move	s6,s1
/home/loongson/kpatch/kmod/core/core.c:712

	/*
	 * Ensure an address was found. If sympos is 0, ensure symbol is unique;
	 * otherwise ensure the symbol position count matches sympos.
	 */
	if (args.addr == 0)
  cc:	dfa30010 	ld	v1,16(sp)
  d0:	14600007 	bnez	v1,f0 <kpatch_find_object_symbol+0xf0>
  d4:	dfa20018 	ld	v0,24(sp)
/home/loongson/kpatch/kmod/core/core.c:713
		pr_err("symbol '%s' not found in symbol table\n", name);
  d8:	3c040000 	lui	a0,0x0
  dc:	64840000 	daddiu	a0,a0,0
  e0:	0220f809 	jalr	s1
  e4:	0260282d 	move	a1,s3
  e8:	08000000 	j	0 <kpatch_find_object_symbol>
  ec:	fea00000 	sd	zero,0(s5)
/home/loongson/kpatch/kmod/core/core.c:714
	else if (args.count > 1 && sympos == 0) {
  f0:	2c440002 	sltiu	a0,v0,2
  f4:	14800009 	bnez	a0,11c <kpatch_find_object_symbol+0x11c>
  f8:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:714 (discriminator 1)
  fc:	1600001a 	bnez	s0,168 <kpatch_find_object_symbol+0x168>
 100:	3c040000 	lui	a0,0x0
/home/loongson/kpatch/kmod/core/core.c:715
		pr_err("unresolvable ambiguity for symbol '%s' in object '%s'\n",
 104:	64840000 	daddiu	a0,a0,0
 108:	0260282d 	move	a1,s3
 10c:	0220f809 	jalr	s1
 110:	0280302d 	move	a2,s4
 114:	08000000 	j	0 <kpatch_find_object_symbol>
 118:	fea00000 	sd	zero,0(s5)
/home/loongson/kpatch/kmod/core/core.c:717
		       name, objname);
	} else if (sympos != args.count && sympos > 0) {
 11c:	12020014 	beq	s0,v0,170 <kpatch_find_object_symbol+0x170>
 120:	00000000 	nop
/home/loongson/kpatch/kmod/core/core.c:717 (discriminator 1)
 124:	12000012 	beqz	s0,170 <kpatch_find_object_symbol+0x170>
 128:	3c040000 	lui	a0,0x0
/home/loongson/kpatch/kmod/core/core.c:718
		pr_err("symbol position %lu for symbol '%s' in object '%s' not found\n",
 12c:	0200282d 	move	a1,s0
 130:	0260302d 	move	a2,s3
 134:	0280382d 	move	a3,s4
 138:	02c0f809 	jalr	s6
 13c:	64840000 	daddiu	a0,a0,0
/home/loongson/kpatch/kmod/core/core.c:720
		       sympos, name, objname);
		printk("%lx %s %s %d %lx\n", sympos, name, objname, args.count, args.addr);
 140:	dfa80018 	ld	a4,24(sp)
 144:	dfa90010 	ld	a5,16(sp)
 148:	3c040000 	lui	a0,0x0
 14c:	64840000 	daddiu	a0,a0,0
 150:	0200282d 	move	a1,s0
 154:	0260302d 	move	a2,s3
 158:	02c0f809 	jalr	s6
 15c:	0280382d 	move	a3,s4
 160:	08000000 	j	0 <kpatch_find_object_symbol>
 164:	fea00000 	sd	zero,0(s5)
/home/loongson/kpatch/kmod/core/core.c:717
	if (args.addr == 0)
		pr_err("symbol '%s' not found in symbol table\n", name);
	else if (args.count > 1 && sympos == 0) {
		pr_err("unresolvable ambiguity for symbol '%s' in object '%s'\n",
		       name, objname);
	} else if (sympos != args.count && sympos > 0) {
 168:	1602fff0 	bne	s0,v0,12c <kpatch_find_object_symbol+0x12c>
 16c:	3c040000 	lui	a0,0x0
/home/loongson/kpatch/kmod/core/core.c:722
		pr_err("symbol position %lu for symbol '%s' in object '%s' not found\n",
		       sympos, name, objname);
		printk("%lx %s %s %d %lx\n", sympos, name, objname, args.count, args.addr);
	} else {
		*addr = args.addr;
 170:	fea30000 	sd	v1,0(s5)
/home/loongson/kpatch/kmod/core/core.c:723
		return 0;
 174:	08000000 	j	0 <kpatch_find_object_symbol>
 178:	0000102d 	move	v0,zero
/home/loongson/kpatch/kmod/core/core.c:727
	}

	*addr = 0;
	return -EINVAL;
 17c:	2402ffea 	li	v0,-22
/home/loongson/kpatch/kmod/core/core.c:728
}
 180:	dfa40028 	ld	a0,40(sp)
 184:	de430000 	ld	v1,0(s2)
 188:	10830005 	beq	a0,v1,1a0 <kpatch_find_object_symbol+0x1a0>
 18c:	dfbf0068 	ld	ra,104(sp)
 190:	3c020000 	lui	v0,0x0
 194:	64420000 	daddiu	v0,v0,0
 198:	0040f809 	jalr	v0
 19c:	00000000 	nop
 1a0:	dfb60060 	ld	s6,96(sp)
 1a4:	dfb50058 	ld	s5,88(sp)
 1a8:	dfb40050 	ld	s4,80(sp)
 1ac:	00000000 	nop
 1b0:	dfb30048 	ld	s3,72(sp)
 1b4:	dfb20040 	ld	s2,64(sp)
 1b8:	dfb10038 	ld	s1,56(sp)
 1bc:	00000000 	nop
 1c0:	dfb00030 	ld	s0,48(sp)
 1c4:	03e00008 	jr	ra
 1c8:	67bd0070 	daddiu	sp,sp,112
