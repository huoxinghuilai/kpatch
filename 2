
kpatch-0001-make-patch.ko:     file format elf64-tradlittlemips


Disassembly of section .text:

0000000000000000 <patch_kobj_free>:
patch_func_kobj_show():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:95
	&patch_checksum_attr.attr,
	NULL,
};

static void patch_kobj_free(struct kobject *kobj)
{
   0:	3c030000 	lui	v1,0x0
   4:	64630000 	daddiu	v1,v1,0
   8:	03e0082d 	move	at,ra
   c:	0060f809 	jalr	v1
patch_checksum_show():
  10:	0000602d 	move	t0,zero
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:96
}
  14:	03e00008 	jr	ra
  18:	00000000 	nop
  1c:	00000000 	nop

0000000000000020 <patch_func_kobj_show>:
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:136
	NULL,
};

static ssize_t patch_func_kobj_show(struct kobject *kobj,
				    struct attribute *attr, char *buf)
{
  20:	3c030000 	lui	v1,0x0
  24:	64630000 	daddiu	v1,v1,0
  28:	03e0082d 	move	at,ra
  2c:	0060f809 	jalr	v1
  30:	0000602d 	move	t0,zero
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:140
	struct kobj_attribute *func_attr =
		container_of(attr, struct kobj_attribute, attr);

	return func_attr->show(kobj, func_attr, buf);
  34:	dcb90010 	ld	t9,16(a1)
  38:	03200008 	jr	t9
  3c:	00000000 	nop

0000000000000040 <patch_checksum_show>:
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:79
	return count;
}

static ssize_t patch_checksum_show(struct kobject *kobj,
				   struct kobj_attribute *attr, char *buf)
{
  40:	67bdfff0 	daddiu	sp,sp,-16
  44:	ffbf0008 	sd	ra,8(sp)
  48:	3c030000 	lui	v1,0x0
  4c:	64630000 	daddiu	v1,v1,0
  50:	03e0082d 	move	at,ra
  54:	0060f809 	jalr	v1
__list_del_entry():
  58:	67ac0008 	daddiu	t0,sp,8
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:80
	return snprintf(buf, PAGE_SIZE, "%s\n", __kpatch_checksum);
  5c:	3c070000 	lui	a3,0x0
__list_del():
  60:	00c0202d 	move	a0,a2
__write_once_size():
  64:	3c020000 	lui	v0,0x0
patch_enabled_store():
  68:	3c060000 	lui	a2,0x0
  6c:	24054000 	li	a1,16384
  70:	64c60000 	daddiu	a2,a2,0
  74:	64420000 	daddiu	v0,v0,0
  78:	0040f809 	jalr	v0
  7c:	64e70000 	daddiu	a3,a3,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:81
}
  80:	dfbf0008 	ld	ra,8(sp)
  84:	03e00008 	jr	ra
  88:	67bd0010 	daddiu	sp,sp,16
  8c:	00000000 	nop

0000000000000090 <patch_enabled_store>:
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:56
}

static ssize_t patch_enabled_store(struct kobject *kobj,
				   struct kobj_attribute *attr, const char *buf,
				   size_t count)
{
  90:	67bdffd0 	daddiu	sp,sp,-48
  94:	ffbf0028 	sd	ra,40(sp)
  98:	ffb10020 	sd	s1,32(sp)
  9c:	ffb00018 	sd	s0,24(sp)
  a0:	3c030000 	lui	v1,0x0
__list_del_entry():
  a4:	64630000 	daddiu	v1,v1,0
  a8:	03e0082d 	move	at,ra
__list_del():
  ac:	0060f809 	jalr	v1
__write_once_size():
  b0:	67ac0028 	daddiu	t0,sp,40
list_del():
  b4:	3c100000 	lui	s0,0x0
  b8:	de030000 	ld	v1,0(s0)
kstrtoul():
/home/loongson/linux-4.19-loongson/./include/linux/kernel.h:375
	 * We want to shortcut function call, but
	 * __builtin_types_compatible_p(unsigned long, unsigned long long) = 0.
	 */
	if (sizeof(unsigned long) == sizeof(unsigned long long) &&
	    __alignof__(unsigned long) == __alignof__(unsigned long long))
		return kstrtoull(s, base, (unsigned long long *)res);
  bc:	00c0202d 	move	a0,a2
patch_enabled_store():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:56
  c0:	ffa30008 	sd	v1,8(sp)
kstrtoul():
/home/loongson/linux-4.19-loongson/./include/linux/kernel.h:375
  c4:	3c030000 	lui	v1,0x0
  c8:	2405000a 	li	a1,10
  cc:	03a0302d 	move	a2,sp
  d0:	64630000 	daddiu	v1,v1,0
  d4:	0060f809 	jalr	v1
  d8:	00e0882d 	move	s1,a3
patch_enabled_store():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:61
	int ret;
	unsigned long val;

	ret = kstrtoul(buf, 10, &val);
	if (ret)
  dc:	1440000c 	bnez	v0,110 <patch_enabled_store+0x80>
  e0:	dfa30000 	ld	v1,0(sp)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:64
		return ret;

	val = !!val;
  e4:	0003182b 	sltu	v1,zero,v1
__list_del():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:66

	if (val)
  e8:	10600011 	beqz	v1,130 <patch_enabled_store+0xa0>
__write_once_size():
  ec:	ffa30000 	sd	v1,0(sp)
kmalloc():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:67
		ret = kpatch_register(&kpmod, replace);
  f0:	3c020000 	lui	v0,0x0
  f4:	90450000 	lbu	a1,0(v0)
  f8:	3c040000 	lui	a0,0x0
  fc:	3c020000 	lui	v0,0x0
 100:	64420000 	daddiu	v0,v0,0
 104:	0040f809 	jalr	v0
 108:	64840000 	daddiu	a0,a0,0
patch_enabled_store():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:72
	else
		ret = kpatch_unregister(&kpmod);

	if (ret)
		return ret;
 10c:	0222100a 	movz	v0,s1,v0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:75

	return count;
}
 110:	dfa40008 	ld	a0,8(sp)
 114:	de030000 	ld	v1,0(s0)
 118:	1483000c 	bne	a0,v1,14c <patch_enabled_store+0xbc>
 11c:	dfbf0028 	ld	ra,40(sp)
 120:	dfb10020 	ld	s1,32(sp)
 124:	dfb00018 	ld	s0,24(sp)
 128:	03e00008 	jr	ra
patch_free_objects():
 12c:	67bd0030 	daddiu	sp,sp,48
patch_enabled_show():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:69
	val = !!val;

	if (val)
		ret = kpatch_register(&kpmod, replace);
	else
		ret = kpatch_unregister(&kpmod);
 130:	3c040000 	lui	a0,0x0
 134:	3c020000 	lui	v0,0x0
 138:	64420000 	daddiu	v0,v0,0
 13c:	0040f809 	jalr	v0
 140:	64840000 	daddiu	a0,a0,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:72

	if (ret)
		return ret;
 144:	08000000 	j	0 <patch_kobj_free>
 148:	0222100a 	movz	v0,s1,v0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:75

	return count;
}
 14c:	3c020000 	lui	v0,0x0
 150:	64420000 	daddiu	v0,v0,0
 154:	0040f809 	jalr	v0
 158:	00000000 	nop
 15c:	00000000 	nop

0000000000000160 <patch_enabled_show>:
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:49

static struct kpatch_module kpmod;

static ssize_t patch_enabled_show(struct kobject *kobj,
				  struct kobj_attribute *attr, char *buf)
{
 160:	67bdfff0 	daddiu	sp,sp,-16
 164:	ffbf0008 	sd	ra,8(sp)
 168:	3c030000 	lui	v1,0x0
 16c:	64630000 	daddiu	v1,v1,0
 170:	03e0082d 	move	at,ra
 174:	0060f809 	jalr	v1
 178:	67ac0008 	daddiu	t0,sp,8
__list_add():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:50
	return sprintf(buf, "%d\n", kpmod.enabled);
 17c:	3c020000 	lui	v0,0x0
 180:	90420000 	lbu	v0,0(v0)
 184:	00c0202d 	move	a0,a2
__write_once_size():
 188:	3c050000 	lui	a1,0x0
patch_func_new_addr_show():
 18c:	0040302d 	move	a2,v0
 190:	3c020000 	lui	v0,0x0
 194:	64420000 	daddiu	v0,v0,0
 198:	0040f809 	jalr	v0
 19c:	64a50000 	daddiu	a1,a1,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:51
}
 1a0:	dfbf0008 	ld	ra,8(sp)
 1a4:	03e00008 	jr	ra
 1a8:	67bd0010 	daddiu	sp,sp,16
 1ac:	00000000 	nop

00000000000001b0 <patch_func_new_addr_show>:
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:115
	return sprintf(buf, "0x%lx\n", func->old_addr);
}

static ssize_t patch_func_new_addr_show(struct kobject *kobj,
					struct kobj_attribute *attr, char *buf)
{
 1b0:	67bdfff0 	daddiu	sp,sp,-16
 1b4:	ffbf0008 	sd	ra,8(sp)
 1b8:	3c030000 	lui	v1,0x0
 1bc:	64630000 	daddiu	v1,v1,0
 1c0:	03e0082d 	move	at,ra
 1c4:	0060f809 	jalr	v1
patch_func_old_addr_show():
 1c8:	67ac0008 	daddiu	t0,sp,8
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:119
	struct kpatch_func *func =
		container_of(kobj, struct kpatch_func, kobj);

	return sprintf(buf, "0x%lx\n", func->new_addr);
 1cc:	dc82ffa0 	ld	v0,-96(a0)
 1d0:	3c050000 	lui	a1,0x0
 1d4:	00c0202d 	move	a0,a2
 1d8:	0040302d 	move	a2,v0
 1dc:	3c020000 	lui	v0,0x0
 1e0:	64420000 	daddiu	v0,v0,0
 1e4:	0040f809 	jalr	v0
 1e8:	64a50000 	daddiu	a1,a1,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:120
}
 1ec:	dfbf0008 	ld	ra,8(sp)
kmalloc():
 1f0:	03e00008 	jr	ra
 1f4:	67bd0010 	daddiu	sp,sp,16

00000000000001f8 <patch_func_old_addr_show>:
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:106
        .default_attrs = patch_attrs,
};

static ssize_t patch_func_old_addr_show(struct kobject *kobj,
					struct kobj_attribute *attr, char *buf)
{
 1f8:	67bdfff0 	daddiu	sp,sp,-16
 1fc:	ffbf0008 	sd	ra,8(sp)
 200:	3c030000 	lui	v1,0x0
 204:	64630000 	daddiu	v1,v1,0
 208:	03e0082d 	move	at,ra
patch_func_old_addr_show():
 20c:	0060f809 	jalr	v1
patch_func_kobj_free():
 210:	67ac0008 	daddiu	t0,sp,8
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:110
	struct kpatch_func *func =
		container_of(kobj, struct kpatch_func, kobj);

	return sprintf(buf, "0x%lx\n", func->old_addr);
 214:	dc82ffb0 	ld	v0,-80(a0)
 218:	3c050000 	lui	a1,0x0
 21c:	00c0202d 	move	a0,a2
 220:	0040302d 	move	a2,v0
 224:	3c020000 	lui	v0,0x0
 228:	64420000 	daddiu	v0,v0,0
 22c:	0040f809 	jalr	v0
 230:	64a50000 	daddiu	a1,a1,0
patch_find_or_add_object():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:111
}
 234:	dfbf0008 	ld	ra,8(sp)
__write_once_size():
 238:	03e00008 	jr	ra
patch_object_kobj_free():
 23c:	67bd0010 	daddiu	sp,sp,16

0000000000000240 <patch_func_kobj_free>:
__write_once_size():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:148
static const struct sysfs_ops patch_func_sysfs_ops = {
	.show	= patch_func_kobj_show,
};

static void patch_func_kobj_free(struct kobject *kobj)
{
 240:	3c030000 	lui	v1,0x0
patch_object_kobj_free():
 244:	64630000 	daddiu	v1,v1,0
 248:	03e0082d 	move	at,ra
__write_once_size():
 24c:	0060f809 	jalr	v1
INIT_LIST_HEAD():
 250:	0000602d 	move	t0,zero
__list_add():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:151
	struct kpatch_func *func =
		container_of(kobj, struct kpatch_func, kobj);
	kfree(func);
 254:	3c190000 	lui	t9,0x0
 258:	67390000 	daddiu	t9,t9,0
 25c:	03200008 	jr	t9
__write_once_size():
 260:	6484ffa0 	daddiu	a0,a0,-96
patch_make_dynrelas_list():
 264:	00000000 	nop

0000000000000268 <patch_object_kobj_free>:
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:161
	.sysfs_ops	= &patch_func_sysfs_ops,
	.default_attrs	= patch_func_kobj_attrs,
};

static void patch_object_kobj_free(struct kobject *kobj)
{
 268:	3c030000 	lui	v1,0x0
 26c:	64630000 	daddiu	v1,v1,0
 270:	03e0082d 	move	at,ra
 274:	0060f809 	jalr	v1
 278:	0000602d 	move	t0,zero
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:164
	struct kpatch_object *obj =
		container_of(kobj, struct kpatch_object, kobj);
	kfree(obj);
 27c:	3c190000 	lui	t9,0x0
 280:	67390000 	daddiu	t9,t9,0
 284:	03200008 	jr	t9
 288:	6484ff88 	daddiu	a0,a0,-120
__list_add():
???:151
 28c:	00000000 	nop

Disassembly of section .text.unlikely:

0000000000000000 <patch_free_objects>:
patch_make_dynrelas_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:211

	return object;
}

static void patch_free_objects(void)
{
   0:	67bdffb0 	daddiu	sp,sp,-80
   4:	ffbf0048 	sd	ra,72(sp)
   8:	ffbe0040 	sd	s8,64(sp)
   c:	ffb70038 	sd	s7,56(sp)
  10:	ffb60030 	sd	s6,48(sp)
  14:	ffb50028 	sd	s5,40(sp)
  18:	ffb40020 	sd	s4,32(sp)
  1c:	ffb30018 	sd	s3,24(sp)
  20:	ffb20010 	sd	s2,16(sp)
  24:	ffb10008 	sd	s1,8(sp)
  28:	ffb00000 	sd	s0,0(sp)
  2c:	3c030000 	lui	v1,0x0
  30:	64630000 	daddiu	v1,v1,0
  34:	03e0082d 	move	at,ra
  38:	0060f809 	jalr	v1
  3c:	67ac0048 	daddiu	t0,sp,72
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:216
	struct kpatch_object *object, *object_safe;
	struct kpatch_func *func, *func_safe;
	struct kpatch_dynrela *dynrela, *dynrela_safe;

	list_for_each_entry_safe(object, object_safe, &kpmod.objects, list) {
  40:	3c020000 	lui	v0,0x0
  44:	dc540000 	ld	s4,0(v0)
  48:	64570000 	daddiu	s7,v0,0
  4c:	de960000 	ld	s6,0(s4)
list_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:126
}

static inline void list_del(struct list_head *entry)
{
	__list_del_entry(entry);
	entry->next = LIST_POISON1;
  50:	24110100 	li	s1,256
/home/loongson/linux-4.19-loongson/./include/linux/list.h:127
	entry->prev = LIST_POISON2;
  54:	24100200 	li	s0,512
patch_make_dynrelas_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:220
		list_for_each_entry_safe(func, func_safe, &object->funcs,
					 list) {
			list_del(&func->list);
			kobject_put(&func->kobj);
  58:	3c120000 	lui	s2,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:225
		}
		list_for_each_entry_safe(dynrela, dynrela_safe,
					 &object->dynrelas, list) {
			list_del(&dynrela->list);
			kfree(dynrela);
  5c:	3c150000 	lui	s5,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:216 (discriminator 11)
{
	struct kpatch_object *object, *object_safe;
	struct kpatch_func *func, *func_safe;
	struct kpatch_dynrela *dynrela, *dynrela_safe;

	list_for_each_entry_safe(object, object_safe, &kpmod.objects, list) {
  60:	12970035 	beq	s4,s7,138 <patch_free_objects+0x138>
  64:	66930018 	daddiu	s3,s4,24
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:217
		list_for_each_entry_safe(func, func_safe, &object->funcs,
  68:	de820018 	ld	v0,24(s4)
  6c:	dc5e0000 	ld	s8,0(v0)
__write_once_size():
  70:	6442ffd0 	daddiu	v0,v0,-48
patch_init():
  74:	67deffd0 	daddiu	s8,s8,-48
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:217 (discriminator 11)
  78:	64430030 	daddiu	v1,v0,48
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:220 (discriminator 11)
					 list) {
			list_del(&func->list);
			kobject_put(&func->kobj);
  7c:	64440060 	daddiu	a0,v0,96
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:217 (discriminator 11)
	struct kpatch_object *object, *object_safe;
	struct kpatch_func *func, *func_safe;
	struct kpatch_dynrela *dynrela, *dynrela_safe;

	list_for_each_entry_safe(object, object_safe, &kpmod.objects, list) {
		list_for_each_entry_safe(func, func_safe, &object->funcs,
  80:	1073000c 	beq	v1,s3,b4 <patch_free_objects+0xb4>
  84:	66460000 	daddiu	a2,s2,0
list_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:120 (discriminator 12)
static inline void __list_del_entry(struct list_head *entry)
{
	if (!__list_del_entry_valid(entry))
		return;

	__list_del(entry->prev, entry->next);
  88:	dc430038 	ld	v1,56(v0)
  8c:	dc450030 	ld	a1,48(v0)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:105 (discriminator 12)
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 */
static inline void __list_del(struct list_head * prev, struct list_head * next)
{
	next->prev = prev;
  90:	fca30008 	sd	v1,8(a1)
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220 (discriminator 12)
{
	switch (size) {
	case 1: *(volatile __u8 *)p = *(__u8 *)res; break;
	case 2: *(volatile __u16 *)p = *(__u16 *)res; break;
	case 4: *(volatile __u32 *)p = *(__u32 *)res; break;
	case 8: *(volatile __u64 *)p = *(__u64 *)res; break;
  94:	fc650000 	sd	a1,0(v1)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:126 (discriminator 12)
}

static inline void list_del(struct list_head *entry)
{
	__list_del_entry(entry);
	entry->next = LIST_POISON1;
  98:	fc510030 	sd	s1,48(v0)
patch_make_insns_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:220 (discriminator 12)
					 list) {
			list_del(&func->list);
			kobject_put(&func->kobj);
  9c:	00c0f809 	jalr	a2
  a0:	fc500038 	sd	s0,56(v0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:217 (discriminator 12)
	struct kpatch_object *object, *object_safe;
	struct kpatch_func *func, *func_safe;
	struct kpatch_dynrela *dynrela, *dynrela_safe;

	list_for_each_entry_safe(object, object_safe, &kpmod.objects, list) {
		list_for_each_entry_safe(func, func_safe, &object->funcs,
  a4:	dfc30030 	ld	v1,48(s8)
  a8:	03c0102d 	move	v0,s8
  ac:	08000000 	j	0 <patch_free_objects>
  b0:	647effd0 	daddiu	s8,v1,-48
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:222
					 list) {
			list_del(&func->list);
			kobject_put(&func->kobj);
		}
		list_for_each_entry_safe(dynrela, dynrela_safe,
  b4:	de820028 	ld	v0,40(s4)
  b8:	66930028 	daddiu	s3,s4,40
  bc:	dc5e0000 	ld	s8,0(v0)
  c0:	6442ffd0 	daddiu	v0,v0,-48
  c4:	67deffd0 	daddiu	s8,s8,-48
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:222 (discriminator 11)
  c8:	64430030 	daddiu	v1,v0,48
  cc:	1073000e 	beq	v1,s3,108 <patch_free_objects+0x108>
  d0:	0040202d 	move	a0,v0
/home/loongson/linux-4.19-loongson/./include/linux/list.h:120 (discriminator 12)
static inline void __list_del_entry(struct list_head *entry)
{
	if (!__list_del_entry_valid(entry))
		return;

	__list_del(entry->prev, entry->next);
  d4:	dc430038 	ld	v1,56(v0)
  d8:	dc450030 	ld	a1,48(v0)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:105 (discriminator 12)
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 */
static inline void __list_del(struct list_head * prev, struct list_head * next)
{
	next->prev = prev;
  dc:	fca30008 	sd	v1,8(a1)
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220 (discriminator 12)
  e0:	fc650000 	sd	a1,0(v1)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:126 (discriminator 12)
}

static inline void list_del(struct list_head *entry)
{
	__list_del_entry(entry);
	entry->next = LIST_POISON1;
  e4:	fc510030 	sd	s1,48(v0)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:127 (discriminator 12)
	entry->prev = LIST_POISON2;
  e8:	fc500038 	sd	s0,56(v0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:225 (discriminator 12)
					 &object->dynrelas, list) {
			list_del(&dynrela->list);
			kfree(dynrela);
  ec:	66a20000 	daddiu	v0,s5,0
  f0:	0040f809 	jalr	v0
  f4:	00000000 	nop
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:222 (discriminator 12)
		list_for_each_entry_safe(func, func_safe, &object->funcs,
					 list) {
			list_del(&func->list);
			kobject_put(&func->kobj);
		}
		list_for_each_entry_safe(dynrela, dynrela_safe,
  f8:	dfc30030 	ld	v1,48(s8)
  fc:	03c0102d 	move	v0,s8
 100:	08000000 	j	0 <patch_free_objects>
 104:	647effd0 	daddiu	s8,v1,-48
__list_del_entry():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:120
static inline void __list_del_entry(struct list_head *entry)
{
	if (!__list_del_entry_valid(entry))
		return;

	__list_del(entry->prev, entry->next);
 108:	de820008 	ld	v0,8(s4)
 10c:	de830000 	ld	v1,0(s4)
patch_make_insns_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:228
					 &object->dynrelas, list) {
			list_del(&dynrela->list);
			kfree(dynrela);
		}
		list_del(&object->list);
		kobject_put(&object->kobj);
 110:	66840078 	daddiu	a0,s4,120
 114:	66450000 	daddiu	a1,s2,0
__list_del_entry():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:105
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 */
static inline void __list_del(struct list_head * prev, struct list_head * next)
{
	next->prev = prev;
 118:	fc620008 	sd	v0,8(v1)
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
 11c:	fc430000 	sd	v1,0(v0)
list_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:126
}

static inline void list_del(struct list_head *entry)
{
	__list_del_entry(entry);
	entry->next = LIST_POISON1;
 120:	fe910000 	sd	s1,0(s4)
patch_make_insns_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:228
 124:	00a0f809 	jalr	a1
 128:	fe900008 	sd	s0,8(s4)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:216
{
	struct kpatch_object *object, *object_safe;
	struct kpatch_func *func, *func_safe;
	struct kpatch_dynrela *dynrela, *dynrela_safe;

	list_for_each_entry_safe(object, object_safe, &kpmod.objects, list) {
 12c:	02c0a02d 	move	s4,s6
 130:	08000000 	j	0 <patch_free_objects>
 134:	ded60000 	ld	s6,0(s6)
__list_add():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:230
			kfree(dynrela);
		}
		list_del(&object->list);
		kobject_put(&object->kobj);
	}
}
 138:	dfbf0048 	ld	ra,72(sp)
 13c:	dfbe0040 	ld	s8,64(sp)
 140:	dfb70038 	ld	s7,56(sp)
__write_once_size():
 144:	00000000 	nop
patch_make_insns_list():
 148:	dfb60030 	ld	s6,48(sp)
 14c:	dfb50028 	ld	s5,40(sp)
patch_init():
 150:	dfb40020 	ld	s4,32(sp)
 154:	00000000 	nop
 158:	dfb30018 	ld	s3,24(sp)
 15c:	dfb20010 	ld	s2,16(sp)
 160:	dfb10008 	ld	s1,8(sp)
 164:	00000000 	nop
 168:	dfb00000 	ld	s0,0(sp)
 16c:	03e00008 	jr	ra
 170:	67bd0050 	daddiu	sp,sp,80

0000000000000174 <patch_find_or_add_object.constprop.6>:
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:172
static struct kobj_type patch_object_ktype = {
	.release = patch_object_kobj_free,
	.sysfs_ops = &kobj_sysfs_ops,
};

static struct kpatch_object *patch_find_or_add_object(struct list_head *head,
 174:	67bdffc0 	daddiu	sp,sp,-64
 178:	ffbf0038 	sd	ra,56(sp)
 17c:	ffb60030 	sd	s6,48(sp)
 180:	ffb50028 	sd	s5,40(sp)
 184:	ffb40020 	sd	s4,32(sp)
 188:	ffb30018 	sd	s3,24(sp)
 18c:	ffb20010 	sd	s2,16(sp)
 190:	ffb10008 	sd	s1,8(sp)
 194:	ffb00000 	sd	s0,0(sp)
 198:	3c030000 	lui	v1,0x0
 19c:	64630000 	daddiu	v1,v1,0
 1a0:	03e0082d 	move	at,ra
 1a4:	0060f809 	jalr	v1
 1a8:	67ac0038 	daddiu	t0,sp,56
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:178
						      const char *name)
{
	struct kpatch_object *object;
	int ret;

printk("patch_find_or_add_object\n");
 1ac:	3c100000 	lui	s0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:172
static struct kobj_type patch_object_ktype = {
	.release = patch_object_kobj_free,
	.sysfs_ops = &kobj_sysfs_ops,
};

static struct kpatch_object *patch_find_or_add_object(struct list_head *head,
 1b0:	0080982d 	move	s3,a0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:178
						      const char *name)
{
	struct kpatch_object *object;
	int ret;

printk("patch_find_or_add_object\n");
 1b4:	3c040000 	lui	a0,0x0
 1b8:	66100000 	daddiu	s0,s0,0
 1bc:	64840000 	daddiu	a0,a0,0
 1c0:	0200f809 	jalr	s0
 1c4:	0200882d 	move	s1,s0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:179
	list_for_each_entry(object, head, list) {
 1c8:	3c020000 	lui	v0,0x0
 1cc:	64420000 	daddiu	v0,v0,0
 1d0:	dc550008 	ld	s5,8(v0)
 1d4:	0040802d 	move	s0,v0
 1d8:	3c120000 	lui	s2,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:180
printk("name: %s\n", name);
 1dc:	3c020000 	lui	v0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:179
{
	struct kpatch_object *object;
	int ret;

printk("patch_find_or_add_object\n");
	list_for_each_entry(object, head, list) {
 1e0:	66520000 	daddiu	s2,s2,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:180
printk("name: %s\n", name);
 1e4:	64540000 	daddiu	s4,v0,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:181
		if (!strcmp(object->name, name))
 1e8:	3c160000 	lui	s6,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:179
{
	struct kpatch_object *object;
	int ret;

printk("patch_find_or_add_object\n");
	list_for_each_entry(object, head, list) {
 1ec:	12b2000c 	beq	s5,s2,220 <patch_find_or_add_object.constprop.6+0xac>
 1f0:	3c020000 	lui	v0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:180
printk("name: %s\n", name);
 1f4:	0280202d 	move	a0,s4
 1f8:	0220f809 	jalr	s1
 1fc:	0260282d 	move	a1,s3
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:181
		if (!strcmp(object->name, name))
 200:	dea40010 	ld	a0,16(s5)
 204:	66c20000 	daddiu	v0,s6,0
 208:	0040f809 	jalr	v0
 20c:	0260282d 	move	a1,s3
 210:	1040003b 	beqz	v0,300 <patch_find_or_add_object.constprop.6+0x18c>
 214:	02a0182d 	move	v1,s5
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:179
{
	struct kpatch_object *object;
	int ret;

printk("patch_find_or_add_object\n");
	list_for_each_entry(object, head, list) {
 218:	08000000 	j	0 <patch_free_objects>
 21c:	deb50000 	ld	s5,0(s5)
/home/loongson/linux-4.19-loongson/./include/linux/slab.h:515
			unsigned int index = kmalloc_index(size);

			if (!index)
				return ZERO_SIZE_PTR;

			return kmem_cache_alloc_trace(kmalloc_caches[index],
 220:	dc440000 	ld	a0,0(v0)
 224:	3c050060 	lui	a1,0x60
 228:	3c020000 	lui	v0,0x0
 22c:	34a580c0 	ori	a1,a1,0x80c0
 230:	64420000 	daddiu	v0,v0,0
 234:	0040f809 	jalr	v0
 238:	240600b8 	li	a2,184
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:187
			return object;
	}

	object = kzalloc(sizeof(*object), GFP_KERNEL);
	if (!object)
		return NULL;
 23c:	0000182d 	move	v1,zero
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:186
		if (!strcmp(object->name, name))
			return object;
	}

	object = kzalloc(sizeof(*object), GFP_KERNEL);
	if (!object)
 240:	1040002f 	beqz	v0,300 <patch_find_or_add_object.constprop.6+0x18c>
 244:	0040902d 	move	s2,v0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:189
		return NULL;

printk("first object name: %s\n", name);
 248:	3c040000 	lui	a0,0x0
 24c:	0260282d 	move	a1,s3
 250:	0220f809 	jalr	s1
 254:	64840000 	daddiu	a0,a0,0
list_add_tail():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:93
 * Insert a new entry before the specified head.
 * This is useful for implementing queues.
 */
static inline void list_add_tail(struct list_head *new, struct list_head *head)
{
	__list_add(new, head->prev, head);
 258:	de020010 	ld	v0,16(s0)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:195
	object->name = name;
	INIT_LIST_HEAD(&object->funcs);
	INIT_LIST_HEAD(&object->dynrelas);
	
	//MIPS, 需要初始insns链表头
	INIT_LIST_HEAD(&object->insns);
 25c:	66430038 	daddiu	v1,s2,56
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:191
	if (!object)
		return NULL;

printk("first object name: %s\n", name);
	object->name = name;
	INIT_LIST_HEAD(&object->funcs);
 260:	66450018 	daddiu	a1,s2,24
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:192
	INIT_LIST_HEAD(&object->dynrelas);
 264:	66440028 	daddiu	a0,s2,40
INIT_LIST_HEAD():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
 268:	fe450018 	sd	a1,24(s2)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:190
	object = kzalloc(sizeof(*object), GFP_KERNEL);
	if (!object)
		return NULL;

printk("first object name: %s\n", name);
	object->name = name;
 26c:	fe530010 	sd	s3,16(s2)
INIT_LIST_HEAD():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
 270:	fe440028 	sd	a0,40(s2)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:29
	struct list_head name = LIST_HEAD_INIT(name)

static inline void INIT_LIST_HEAD(struct list_head *list)
{
	WRITE_ONCE(list->next, list);
	list->prev = list;
 274:	fe450020 	sd	a1,32(s2)
 278:	fe440030 	sd	a0,48(s2)
patch_init():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
 27c:	fe430038 	sd	v1,56(s2)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:29
 280:	fe430040 	sd	v1,64(s2)
list_add_tail():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:65
	if (!__list_add_valid(new, prev, next))
		return;

	next->prev = new;
	new->next = next;
	new->prev = prev;
 284:	fe420008 	sd	v0,8(s2)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:63
			      struct list_head *next)
{
	if (!__list_add_valid(new, prev, next))
		return;

	next->prev = new;
 288:	fe120010 	sd	s2,16(s0)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:64
	new->next = next;
 28c:	fe550000 	sd	s5,0(s2)
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
 290:	fc520000 	sd	s2,0(v0)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:199
	//MIPS, 需要初始insns链表头
	INIT_LIST_HEAD(&object->insns);

	list_add_tail(&object->list, head);

	ret = kobject_init_and_add(&object->kobj, &patch_object_ktype,
 294:	de480010 	ld	a4,16(s2)
 298:	3c050000 	lui	a1,0x0
 29c:	3c060000 	lui	a2,0x0
 2a0:	3c070000 	lui	a3,0x0
 2a4:	3c020000 	lui	v0,0x0
 2a8:	66440078 	daddiu	a0,s2,120
 2ac:	64a50000 	daddiu	a1,a1,0
 2b0:	64c60000 	daddiu	a2,a2,0
 2b4:	64420000 	daddiu	v0,v0,0
 2b8:	0040f809 	jalr	v0
 2bc:	64e70000 	daddiu	a3,a3,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:201
				   &kpmod.kobj, "%s", object->name);
	if (ret) {
 2c0:	1040000f 	beqz	v0,300 <patch_find_or_add_object.constprop.6+0x18c>
 2c4:	0240182d 	move	v1,s2
__list_del_entry():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:120
static inline void __list_del_entry(struct list_head *entry)
{
	if (!__list_del_entry_valid(entry))
		return;

	__list_del(entry->prev, entry->next);
 2c8:	de420008 	ld	v0,8(s2)
 2cc:	de450000 	ld	a1,0(s2)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:203
		list_del(&object->list);
		kfree(object);
 2d0:	0240202d 	move	a0,s2
__list_del_entry():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:105
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 */
static inline void __list_del(struct list_head * prev, struct list_head * next)
{
	next->prev = prev;
 2d4:	fca20008 	sd	v0,8(a1)
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
 2d8:	fc450000 	sd	a1,0(v0)
list_del():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:126
}

static inline void list_del(struct list_head *entry)
{
	__list_del_entry(entry);
	entry->next = LIST_POISON1;
 2dc:	24020100 	li	v0,256
 2e0:	fe420000 	sd	v0,0(s2)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:127
	entry->prev = LIST_POISON2;
 2e4:	24020200 	li	v0,512
 2e8:	fe420008 	sd	v0,8(s2)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:203
 2ec:	3c020000 	lui	v0,0x0
 2f0:	64420000 	daddiu	v0,v0,0
 2f4:	0040f809 	jalr	v0
 2f8:	00000000 	nop
 2fc:	0000182d 	move	v1,zero
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:208
		return NULL;
	}

	return object;
}
 300:	dfbf0038 	ld	ra,56(sp)
 304:	dfb60030 	ld	s6,48(sp)
 308:	dfb50028 	ld	s5,40(sp)
 30c:	00000000 	nop
 310:	dfb40020 	ld	s4,32(sp)
 314:	dfb30018 	ld	s3,24(sp)
 318:	dfb20010 	ld	s2,16(sp)
 31c:	00000000 	nop
patch_find_or_add_object.constprop.6():
 320:	dfb10008 	ld	s1,8(sp)
 324:	dfb00000 	ld	s0,0(sp)
 328:	0060102d 	move	v0,v1
 32c:	03e00008 	jr	ra
 330:	67bd0040 	daddiu	sp,sp,64

Disassembly of section .init.text:

0000000000000000 <init_module>:
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:434
	}
	return 0;
}

static int __init patch_init(void)
{
   0:	67bdffa0 	daddiu	sp,sp,-96
   4:	ffbf0058 	sd	ra,88(sp)
   8:	ffbe0050 	sd	s8,80(sp)
   c:	ffb70048 	sd	s7,72(sp)
  10:	ffb60040 	sd	s6,64(sp)
  14:	ffb50038 	sd	s5,56(sp)
  18:	ffb40030 	sd	s4,48(sp)
  1c:	ffb30028 	sd	s3,40(sp)
  20:	ffb20020 	sd	s2,32(sp)
  24:	ffb10018 	sd	s1,24(sp)
  28:	ffb00010 	sd	s0,16(sp)
  2c:	3c030000 	lui	v1,0x0
  30:	64630000 	daddiu	v1,v1,0
  34:	03e0082d 	move	at,ra
  38:	0060f809 	jalr	v1
  3c:	67ac0058 	daddiu	t0,sp,88
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:436
	int ret;
printk("start to patch_init\n");
  40:	3c040000 	lui	a0,0x0
  44:	3c110000 	lui	s1,0x0
  48:	64840000 	daddiu	a0,a0,0
  4c:	66310000 	daddiu	s1,s1,0
  50:	0220f809 	jalr	s1
  54:	3c120000 	lui	s2,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:437
	ret = kobject_init_and_add(&kpmod.kobj, &patch_ktype,
  58:	3c020000 	lui	v0,0x0
  5c:	dc460000 	ld	a2,0(v0)
  60:	3c100000 	lui	s0,0x0
  64:	3c050000 	lui	a1,0x0
  68:	3c070000 	lui	a3,0x0
  6c:	3c080000 	lui	a4,0x0
  70:	66100000 	daddiu	s0,s0,0
  74:	66440000 	daddiu	a0,s2,0
  78:	64a50000 	daddiu	a1,a1,0
  7c:	64e70000 	daddiu	a3,a3,0
  80:	0200f809 	jalr	s0
  84:	65080000 	daddiu	a4,a4,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:440
				   kpatch_root_kobj, "%s",
				   THIS_MODULE->name);
	if (ret)
  88:	14400151 	bnez	v0,5d0 <init_module+0x5d0>
  8c:	2403fff4 	li	v1,-12
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:443
		return -ENOMEM;

	kpmod.mod = THIS_MODULE;
  90:	3c130000 	lui	s3,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:446
	INIT_LIST_HEAD(&kpmod.objects);

printk("start to patch_make_funcs_list\n");
  94:	3c040000 	lui	a0,0x0
INIT_LIST_HEAD():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:28
#define LIST_HEAD(name) \
	struct list_head name = LIST_HEAD_INIT(name)

static inline void INIT_LIST_HEAD(struct list_head *list)
{
	WRITE_ONCE(list->next, list);
  98:	3c020000 	lui	v0,0x0
  9c:	64420000 	daddiu	v0,v0,0
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
  a0:	66650000 	daddiu	a1,s3,0
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:446
  a4:	64840000 	daddiu	a0,a0,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:443
				   kpatch_root_kobj, "%s",
				   THIS_MODULE->name);
	if (ret)
		return -ENOMEM;

	kpmod.mod = THIS_MODULE;
  a8:	3c030000 	lui	v1,0x0
  ac:	64630000 	daddiu	v1,v1,0
__write_once_size():
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
  b0:	fca20008 	sd	v0,8(a1)
INIT_LIST_HEAD():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:29
	list->prev = list;
  b4:	fca20010 	sd	v0,16(a1)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:443
  b8:	fe630000 	sd	v1,0(s3)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:446
	INIT_LIST_HEAD(&kpmod.objects);

printk("start to patch_make_funcs_list\n");
  bc:	0220f809 	jalr	s1
  c0:	3c170000 	lui	s7,0x0
patch_make_funcs_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:250
	struct kpatch_func *func;
	int ret;

	for (p_func = __kpatch_funcs; p_func < __kpatch_funcs_end; p_func++) {

printk("p_func->objname: %s p_func->name: %s\n", p_func->objname, p_func->name);
  c4:	3c160000 	lui	s6,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:248
	struct kpatch_object *object;
	struct kpatch_patch_func *p_func;
	struct kpatch_func *func;
	int ret;

	for (p_func = __kpatch_funcs; p_func < __kpatch_funcs_end; p_func++) {
  c8:	3c030000 	lui	v1,0x0
patch_is_func_forced():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:235
}

static int patch_is_func_forced(unsigned long addr)
{
	unsigned long *a;
	for (a = __kpatch_force_funcs; a < __kpatch_force_funcs_end; a++)
  cc:	3c150000 	lui	s5,0x0
patch_make_funcs_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:269
		func->sympos = p_func->sympos;
		func->name = p_func->name;
		func->force = patch_is_func_forced(func->new_addr);
		list_add_tail(&func->list, &object->funcs);

		ret = kobject_init_and_add(&func->kobj, &patch_func_ktype,
  d0:	3c140000 	lui	s4,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:248
	struct kpatch_object *object;
	struct kpatch_patch_func *p_func;
	struct kpatch_func *func;
	int ret;

	for (p_func = __kpatch_funcs; p_func < __kpatch_funcs_end; p_func++) {
  d4:	647e0000 	daddiu	s8,v1,0
  d8:	66f70000 	daddiu	s7,s7,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:250

printk("p_func->objname: %s p_func->name: %s\n", p_func->objname, p_func->name);
  dc:	66d60000 	daddiu	s6,s6,0
patch_is_func_forced():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:235
}

static int patch_is_func_forced(unsigned long addr)
{
	unsigned long *a;
	for (a = __kpatch_force_funcs; a < __kpatch_force_funcs_end; a++)
  e0:	66b50000 	daddiu	s5,s5,0
patch_make_funcs_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:269
		func->sympos = p_func->sympos;
		func->name = p_func->name;
		func->force = patch_is_func_forced(func->new_addr);
		list_add_tail(&func->list, &object->funcs);

		ret = kobject_init_and_add(&func->kobj, &patch_func_ktype,
  e4:	66940000 	daddiu	s4,s4,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:248
	struct kpatch_object *object;
	struct kpatch_patch_func *p_func;
	struct kpatch_func *func;
	int ret;

	for (p_func = __kpatch_funcs; p_func < __kpatch_funcs_end; p_func++) {
  e8:	03d7102b 	sltu	v0,s8,s7
  ec:	1040005d 	beqz	v0,264 <init_module+0x264>
  f0:	3c040000 	lui	a0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:250

printk("p_func->objname: %s p_func->name: %s\n", p_func->objname, p_func->name);
  f4:	dfc50030 	ld	a1,48(s8)
  f8:	dfc60028 	ld	a2,40(s8)
  fc:	0220f809 	jalr	s1
 100:	02c0202d 	move	a0,s6
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:252

		object = patch_find_or_add_object(&kpmod.objects,
 104:	3c030000 	lui	v1,0x0
 108:	64620000 	daddiu	v0,v1,0
 10c:	0040f809 	jalr	v0
 110:	dfc40030 	ld	a0,48(s8)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:254
						  p_func->objname);
		if (!object)
 114:	1040012c 	beqz	v0,5c8 <init_module+0x5c8>
 118:	0040982d 	move	s3,v0
/home/loongson/linux-4.19-loongson/./include/linux/slab.h:515
 11c:	3c020000 	lui	v0,0x0
 120:	dc440000 	ld	a0,0(v0)
 124:	3c050060 	lui	a1,0x60
 128:	3c020000 	lui	v0,0x0
 12c:	34a580c0 	ori	a1,a1,0x80c0
 130:	64420000 	daddiu	v0,v0,0
 134:	0040f809 	jalr	v0
 138:	240600a0 	li	a2,160
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:258
			return -ENOMEM;

		func = kzalloc(sizeof(*func), GFP_KERNEL);
		if (!func)
 13c:	10400122 	beqz	v0,5c8 <init_module+0x5c8>
 140:	0040202d 	move	a0,v0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:265

		func->new_addr = p_func->new_addr;
		func->new_size = p_func->new_size;
		func->old_size = p_func->old_size;
		func->sympos = p_func->sympos;
		func->name = p_func->name;
 144:	dfc50028 	ld	a1,40(s8)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:261

		func = kzalloc(sizeof(*func), GFP_KERNEL);
		if (!func)
			return -ENOMEM;

		func->new_addr = p_func->new_addr;
 148:	dfc20000 	ld	v0,0(s8)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:262
		func->new_size = p_func->new_size;
 14c:	dfc90008 	ld	a5,8(s8)
 150:	00000000 	nop
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:263
		func->old_size = p_func->old_size;
 154:	dfc80018 	ld	a4,24(s8)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:264
		func->sympos = p_func->sympos;
 158:	dfc60020 	ld	a2,32(s8)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:265
		func->name = p_func->name;
 15c:	fc850028 	sd	a1,40(a0)
patch_is_func_forced():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:235
}

static int patch_is_func_forced(unsigned long addr)
{
	unsigned long *a;
	for (a = __kpatch_force_funcs; a < __kpatch_force_funcs_end; a++)
 160:	3c050000 	lui	a1,0x0
patch_make_funcs_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:261

		func = kzalloc(sizeof(*func), GFP_KERNEL);
		if (!func)
			return -ENOMEM;

		func->new_addr = p_func->new_addr;
 164:	fc820000 	sd	v0,0(a0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:262
		func->new_size = p_func->new_size;
 168:	fc890008 	sd	a5,8(a0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:263
		func->old_size = p_func->old_size;
 16c:	fc880018 	sd	a4,24(a0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:264
		func->sympos = p_func->sympos;
 170:	fc860020 	sd	a2,32(a0)
patch_is_func_forced():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:235
}

static int patch_is_func_forced(unsigned long addr)
{
	unsigned long *a;
	for (a = __kpatch_force_funcs; a < __kpatch_force_funcs_end; a++)
 174:	64a50000 	daddiu	a1,a1,0
 178:	00b5302b 	sltu	a2,a1,s5
 17c:	10c00006 	beqz	a2,198 <init_module+0x198>
 180:	00000000 	nop
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:236
		if (*a == addr)
 184:	dca60000 	ld	a2,0(a1)
 188:	1446fffb 	bne	v0,a2,178 <init_module+0x178>
 18c:	64a50008 	daddiu	a1,a1,8
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:237
			return 1;
 190:	08000000 	j	0 <init_module>
 194:	24020001 	li	v0,1
patch_is_func_forced():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:238
	return 0;
 198:	0000102d 	move	v0,zero
patch_make_funcs_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:266
		func->new_addr = p_func->new_addr;
		func->new_size = p_func->new_size;
		func->old_size = p_func->old_size;
		func->sympos = p_func->sympos;
		func->name = p_func->name;
		func->force = patch_is_func_forced(func->new_addr);
 19c:	ac820040 	sw	v0,64(a0)
list_add_tail():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:93
 * Insert a new entry before the specified head.
 * This is useful for implementing queues.
 */
static inline void list_add_tail(struct list_head *new, struct list_head *head)
{
	__list_add(new, head->prev, head);
 1a0:	de620020 	ld	v0,32(s3)
patch_make_funcs_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:267
		list_add_tail(&func->list, &object->funcs);
 1a4:	64850030 	daddiu	a1,a0,48
 1a8:	66660018 	daddiu	a2,s3,24
list_add_tail():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:63
			      struct list_head *next)
{
	if (!__list_add_valid(new, prev, next))
		return;

	next->prev = new;
 1ac:	fe650020 	sd	a1,32(s3)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:64
	new->next = next;
 1b0:	fc860030 	sd	a2,48(a0)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:65
	new->prev = prev;
 1b4:	fc820038 	sd	v0,56(a0)
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
 1b8:	fc450000 	sd	a1,0(v0)
patch_make_funcs_list():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:271

		ret = kobject_init_and_add(&func->kobj, &patch_func_ktype,
					   &object->kobj, "%s,%lu",
					   func->name, func->sympos ? func->sympos : 1);
 1bc:	dc890020 	ld	a5,32(a0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:269
		func->sympos = p_func->sympos;
		func->name = p_func->name;
		func->force = patch_is_func_forced(func->new_addr);
		list_add_tail(&func->list, &object->funcs);

		ret = kobject_init_and_add(&func->kobj, &patch_func_ktype,
 1c0:	dc880028 	ld	a4,40(a0)
 1c4:	3c070000 	lui	a3,0x0
 1c8:	24020001 	li	v0,1
 1cc:	64840060 	daddiu	a0,a0,96
 1d0:	0280282d 	move	a1,s4
 1d4:	66660078 	daddiu	a2,s3,120
 1d8:	64e70000 	daddiu	a3,a3,0
 1dc:	0200f809 	jalr	s0
 1e0:	0049480a 	movz	a5,v0,a5
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:272
					   &object->kobj, "%s,%lu",
					   func->name, func->sympos ? func->sympos : 1);
		if (ret)
 1e4:	14400014 	bnez	v0,238 <init_module+0x238>
 1e8:	67de0038 	daddiu	s8,s8,56
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:248
	struct kpatch_object *object;
	struct kpatch_patch_func *p_func;
	struct kpatch_func *func;
	int ret;

	for (p_func = __kpatch_funcs; p_func < __kpatch_funcs_end; p_func++) {
 1ec:	08000000 	j	0 <init_module>
 1f0:	03d7102b 	sltu	v0,s8,s7
patch_set_callbacks():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:374
				object->name);
			return -EINVAL;
		}

		object->pre_patch_callback =
			(int (*)(struct kpatch_object *)) p_pre_patch_callback->callback;
 1f4:	de030000 	ld	v1,0(s0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:361
	struct kpatch_post_unpatch_callback *p_post_unpatch_callback;
	struct kpatch_object *object;

	for (p_pre_patch_callback = __kpatch_callbacks_pre_patch;
	     p_pre_patch_callback < __kpatch_callbacks_pre_patch_end;
	     p_pre_patch_callback++) {
 1f8:	66100010 	daddiu	s0,s0,16
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:373
			pr_err("extra pre-patch callback for object: %s\n",
				object->name);
			return -EINVAL;
		}

		object->pre_patch_callback =
 1fc:	fc430048 	sd	v1,72(v0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:359
	struct kpatch_post_patch_callback *p_post_patch_callback;
	struct kpatch_pre_unpatch_callback *p_pre_unpatch_callback;
	struct kpatch_post_unpatch_callback *p_post_unpatch_callback;
	struct kpatch_object *object;

	for (p_pre_patch_callback = __kpatch_callbacks_pre_patch;
 200:	0214102b 	sltu	v0,s0,s4
 204:	10400099 	beqz	v0,46c <init_module+0x46c>
 208:	66a30000 	daddiu	v1,s5,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:363
	     p_pre_patch_callback < __kpatch_callbacks_pre_patch_end;
	     p_pre_patch_callback++) {

		object = patch_find_or_add_object(objects, p_pre_patch_callback->objname);
 20c:	0060f809 	jalr	v1
 210:	de040008 	ld	a0,8(s0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:364
		if (!object)
 214:	104000ec 	beqz	v0,5c8 <init_module+0x5c8>
 218:	00000000 	nop
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:367
			return -ENOMEM;

		if (object->pre_patch_callback) {
 21c:	dc430048 	ld	v1,72(v0)
 220:	1060fff4 	beqz	v1,1f4 <init_module+0x1f4>
 224:	3c040000 	lui	a0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:368
			pr_err("extra pre-patch callback for object: %s\n",
 228:	dc450010 	ld	a1,16(v0)
 22c:	0220f809 	jalr	s1
 230:	64840000 	daddiu	a0,a0,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:370
				object->name);
			return -EINVAL;
 234:	2402ffea 	li	v0,-22
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:477
		goto err_objects;

	return 0;

err_objects:
	patch_free_objects();
 238:	3c030000 	lui	v1,0x0
 23c:	64630000 	daddiu	v1,v1,0
 240:	0060f809 	jalr	v1
 244:	ffa20008 	sd	v0,8(sp)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:478
	kobject_put(&kpmod.kobj);
 248:	3c030000 	lui	v1,0x0
 24c:	64630000 	daddiu	v1,v1,0
 250:	0060f809 	jalr	v1
 254:	66440000 	daddiu	a0,s2,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:479
	return ret;
 258:	dfa20008 	ld	v0,8(sp)
 25c:	08000000 	j	0 <init_module>
 260:	0040182d 	move	v1,v0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:451
printk("start to patch_make_funcs_list\n");
	ret = patch_make_funcs_list(&kpmod.objects);
	if (ret)
		goto err_objects;

printk("start to patch_make_dynrelas_list\n");
 264:	64840000 	daddiu	a0,a0,0
 268:	0220f809 	jalr	s1
 26c:	3c160000 	lui	s6,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:290
	for (p_dynrela = __kpatch_dynrelas; p_dynrela < __kpatch_dynrelas_end;
	     p_dynrela++) {


		object = patch_find_or_add_object(objects, p_dynrela->objname);
printk("objname: %s\n", p_dynrela->objname);
 270:	3c150000 	lui	s5,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:285
{
	struct kpatch_object *object;
	struct kpatch_patch_dynrela *p_dynrela;
	struct kpatch_dynrela *dynrela;

	for (p_dynrela = __kpatch_dynrelas; p_dynrela < __kpatch_dynrelas_end;
 274:	3c030000 	lui	v1,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:304
		dynrela->type = p_dynrela->type;
		dynrela->sympos = p_dynrela->sympos;
		dynrela->name = p_dynrela->name;
		dynrela->external = p_dynrela->external;
		dynrela->addend = p_dynrela->addend;
printk("dest: %lx type: %d sympos %lu name: %s external: %lu addend: %lx\n", p_dynrela->dest, p_dynrela->type, p_dynrela->sympos, p_dynrela->name, p_dynrela->external, p_dynrela->addend);
 278:	3c140000 	lui	s4,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:285
{
	struct kpatch_object *object;
	struct kpatch_patch_dynrela *p_dynrela;
	struct kpatch_dynrela *dynrela;

	for (p_dynrela = __kpatch_dynrelas; p_dynrela < __kpatch_dynrelas_end;
 27c:	64730000 	daddiu	s3,v1,0
 280:	66d60000 	daddiu	s6,s6,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:290
	     p_dynrela++) {


		object = patch_find_or_add_object(objects, p_dynrela->objname);
printk("objname: %s\n", p_dynrela->objname);
 284:	66b50000 	daddiu	s5,s5,0
kmalloc():
/home/loongson/linux-4.19-loongson/./include/linux/slab.h:515
 288:	3c1e0000 	lui	s8,0x0
 28c:	3c170000 	lui	s7,0x0
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:304
		dynrela->type = p_dynrela->type;
		dynrela->sympos = p_dynrela->sympos;
		dynrela->name = p_dynrela->name;
		dynrela->external = p_dynrela->external;
		dynrela->addend = p_dynrela->addend;
printk("dest: %lx type: %d sympos %lu name: %s external: %lu addend: %lx\n", p_dynrela->dest, p_dynrela->type, p_dynrela->sympos, p_dynrela->name, p_dynrela->external, p_dynrela->addend);
 290:	66940000 	daddiu	s4,s4,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:285
{
	struct kpatch_object *object;
	struct kpatch_patch_dynrela *p_dynrela;
	struct kpatch_dynrela *dynrela;

	for (p_dynrela = __kpatch_dynrelas; p_dynrela < __kpatch_dynrelas_end;
 294:	0276102b 	sltu	v0,s3,s6
 298:	10400034 	beqz	v0,36c <init_module+0x36c>
 29c:	3c040000 	lui	a0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:289
	     p_dynrela++) {


		object = patch_find_or_add_object(objects, p_dynrela->objname);
 2a0:	3c030000 	lui	v1,0x0
 2a4:	64620000 	daddiu	v0,v1,0
 2a8:	0040f809 	jalr	v0
 2ac:	de640028 	ld	a0,40(s3)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:290
printk("objname: %s\n", p_dynrela->objname);
 2b0:	de650028 	ld	a1,40(s3)
 2b4:	02a0202d 	move	a0,s5
 2b8:	0220f809 	jalr	s1
 2bc:	0040802d 	move	s0,v0
kmalloc():
/home/loongson/linux-4.19-loongson/./include/linux/slab.h:515
 2c0:	3c050060 	lui	a1,0x60
 2c4:	67c40000 	daddiu	a0,s8,0
 2c8:	34a580c0 	ori	a1,a1,0x80c0
 2cc:	24060040 	li	a2,64
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:291
		if (!object)
 2d0:	120000bd 	beqz	s0,5c8 <init_module+0x5c8>
 2d4:	66e20000 	daddiu	v0,s7,0
kmalloc():
/home/loongson/linux-4.19-loongson/./include/linux/slab.h:515
 2d8:	0040f809 	jalr	v0
 2dc:	dc840030 	ld	a0,48(a0)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:295
			return -ENOMEM;

		dynrela = kzalloc(sizeof(*dynrela), GFP_KERNEL);
		if (!dynrela)
 2e0:	104000b9 	beqz	v0,5c8 <init_module+0x5c8>
 2e4:	0040582d 	move	a7,v0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:298
			return -ENOMEM;

		dynrela->dest = p_dynrela->dest;
 2e8:	de780000 	ld	t8,0(s3)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:299
		dynrela->type = p_dynrela->type;
 2ec:	de6f0010 	ld	t3,16(s3)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:300
		dynrela->sympos = p_dynrela->sympos;
 2f0:	de6e0018 	ld	t2,24(s3)
 2f4:	00000000 	nop
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:301
		dynrela->name = p_dynrela->name;
 2f8:	de6d0020 	ld	t1,32(s3)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:302
		dynrela->external = p_dynrela->external;
 2fc:	8e6c0030 	lw	t0,48(s3)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:303
		dynrela->addend = p_dynrela->addend;
 300:	de620038 	ld	v0,56(s3)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:304
printk("dest: %lx type: %d sympos %lu name: %s external: %lu addend: %lx\n", p_dynrela->dest, p_dynrela->type, p_dynrela->sympos, p_dynrela->name, p_dynrela->external, p_dynrela->addend);
 304:	0280202d 	move	a0,s4
 308:	0300282d 	move	a1,t8
 30c:	01e0302d 	move	a2,t3
 310:	01c0382d 	move	a3,t2
 314:	01a0402d 	move	a4,t1
 318:	0180482d 	move	a5,t0
 31c:	0040502d 	move	a6,v0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:298

		dynrela = kzalloc(sizeof(*dynrela), GFP_KERNEL);
		if (!dynrela)
			return -ENOMEM;

		dynrela->dest = p_dynrela->dest;
 320:	fd780000 	sd	t8,0(a7)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:299
		dynrela->type = p_dynrela->type;
 324:	fd6f0010 	sd	t3,16(a7)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:300
		dynrela->sympos = p_dynrela->sympos;
 328:	fd6e0018 	sd	t2,24(a7)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:301
		dynrela->name = p_dynrela->name;
 32c:	fd6d0020 	sd	t1,32(a7)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:302
		dynrela->external = p_dynrela->external;
 330:	ad6c002c 	sw	t0,44(a7)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:303
		dynrela->addend = p_dynrela->addend;
 334:	ad620028 	sw	v0,40(a7)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:304
printk("dest: %lx type: %d sympos %lu name: %s external: %lu addend: %lx\n", p_dynrela->dest, p_dynrela->type, p_dynrela->sympos, p_dynrela->name, p_dynrela->external, p_dynrela->addend);
 338:	0220f809 	jalr	s1
 33c:	ffab0008 	sd	a7,8(sp)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:305
		list_add_tail(&dynrela->list, &object->dynrelas);
 340:	dfab0008 	ld	a7,8(sp)
list_add_tail():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:93
 * Insert a new entry before the specified head.
 * This is useful for implementing queues.
 */
static inline void list_add_tail(struct list_head *new, struct list_head *head)
{
	__list_add(new, head->prev, head);
 344:	de020030 	ld	v0,48(s0)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:305
 348:	65640030 	daddiu	a0,a7,48
 34c:	66050028 	daddiu	a1,s0,40
__list_add():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:63
			      struct list_head *next)
{
	if (!__list_add_valid(new, prev, next))
		return;

	next->prev = new;
 350:	fe040030 	sd	a0,48(s0)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:286
	struct kpatch_object *object;
	struct kpatch_patch_dynrela *p_dynrela;
	struct kpatch_dynrela *dynrela;

	for (p_dynrela = __kpatch_dynrelas; p_dynrela < __kpatch_dynrelas_end;
	     p_dynrela++) {
 354:	66730040 	daddiu	s3,s3,64
__list_add():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:64
	new->next = next;
 358:	fd650030 	sd	a1,48(a7)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:65
	new->prev = prev;
 35c:	fd620038 	sd	v0,56(a7)
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
 360:	fc440000 	sd	a0,0(v0)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:285
{
	struct kpatch_object *object;
	struct kpatch_patch_dynrela *p_dynrela;
	struct kpatch_dynrela *dynrela;

	for (p_dynrela = __kpatch_dynrelas; p_dynrela < __kpatch_dynrelas_end;
 364:	08000000 	j	0 <init_module>
 368:	0276102b 	sltu	v0,s3,s6
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:458
	if (ret)
		goto err_objects;


//MIPS，创建struct kpatch_insn结构体链表
printk("start to patch_make_insns_list\n");
 36c:	64840000 	daddiu	a0,a0,0
 370:	0220f809 	jalr	s1
 374:	3c150000 	lui	s5,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:334
			return -ENOMEM;

		insn->old_addr = p_insn->old_addr;
		insn->new_addr = p_insn->new_addr;
		insn->offset = p_insn->offset - p_insn->new_addr;
printk("old_addr: %lx new_addr: %lx offset: %lx name: %s\n", insn->old_addr, insn->new_addr, insn->offset, p_insn->objname);
 378:	3c140000 	lui	s4,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:321
	struct kpatch_patch_insn *p_insn;
	struct kpatch_insn *insn;
	struct kpatch_func *func;


	for (p_insn = __kpatch_insns; p_insn < __kpatch_insns_end; p_insn++) {
 37c:	3c030000 	lui	v1,0x0
 380:	64730000 	daddiu	s3,v1,0
 384:	66b50000 	daddiu	s5,s5,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:323
		
		object = patch_find_or_add_object(objects, p_insn->objname);
 388:	3c1e0000 	lui	s8,0x0
kmalloc():
/home/loongson/linux-4.19-loongson/./include/linux/slab.h:515
 38c:	3c170000 	lui	s7,0x0
 390:	3c160000 	lui	s6,0x0
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:334
			return -ENOMEM;

		insn->old_addr = p_insn->old_addr;
		insn->new_addr = p_insn->new_addr;
		insn->offset = p_insn->offset - p_insn->new_addr;
printk("old_addr: %lx new_addr: %lx offset: %lx name: %s\n", insn->old_addr, insn->new_addr, insn->offset, p_insn->objname);
 394:	66940000 	daddiu	s4,s4,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:321
	struct kpatch_patch_insn *p_insn;
	struct kpatch_insn *insn;
	struct kpatch_func *func;


	for (p_insn = __kpatch_insns; p_insn < __kpatch_insns_end; p_insn++) {
 398:	0275102b 	sltu	v0,s3,s5
 39c:	1040002a 	beqz	v0,448 <init_module+0x448>
 3a0:	67c50000 	daddiu	a1,s8,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:323
		
		object = patch_find_or_add_object(objects, p_insn->objname);
 3a4:	00a0f809 	jalr	a1
 3a8:	de640018 	ld	a0,24(s3)
kzalloc():
/home/loongson/linux-4.19-loongson/./include/linux/slab.h:515
 3ac:	3c050060 	lui	a1,0x60
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:323
 3b0:	0040802d 	move	s0,v0
kmalloc():
/home/loongson/linux-4.19-loongson/./include/linux/slab.h:515
 3b4:	66e40000 	daddiu	a0,s7,0
 3b8:	34a580c0 	ori	a1,a1,0x80c0
 3bc:	24060028 	li	a2,40
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:324
		if (!object)
 3c0:	12000081 	beqz	s0,5c8 <init_module+0x5c8>
 3c4:	66c20000 	daddiu	v0,s6,0
kmalloc():
/home/loongson/linux-4.19-loongson/./include/linux/slab.h:515
 3c8:	0040f809 	jalr	v0
 3cc:	dc840030 	ld	a0,48(a0)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:328
			return -ENOMEM;
	
		insn = kzalloc(sizeof(*insn), GFP_KERNEL);
		if (!insn)
 3d0:	1040007d 	beqz	v0,5c8 <init_module+0x5c8>
 3d4:	0040482d 	move	a5,v0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:332
			return -ENOMEM;

		insn->old_addr = p_insn->old_addr;
		insn->new_addr = p_insn->new_addr;
 3d8:	de6b0008 	ld	a7,8(s3)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:333
		insn->offset = p_insn->offset - p_insn->new_addr;
 3dc:	de620010 	ld	v0,16(s3)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:331
	
		insn = kzalloc(sizeof(*insn), GFP_KERNEL);
		if (!insn)
			return -ENOMEM;

		insn->old_addr = p_insn->old_addr;
 3e0:	de6c0000 	ld	t0,0(s3)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:333
		insn->new_addr = p_insn->new_addr;
		insn->offset = p_insn->offset - p_insn->new_addr;
 3e4:	004b102f 	dsubu	v0,v0,a7
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:334
printk("old_addr: %lx new_addr: %lx offset: %lx name: %s\n", insn->old_addr, insn->new_addr, insn->offset, p_insn->objname);
 3e8:	de680018 	ld	a4,24(s3)
 3ec:	0180282d 	move	a1,t0
 3f0:	0160302d 	move	a2,a7
 3f4:	0280202d 	move	a0,s4
 3f8:	0040382d 	move	a3,v0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:331
	
		insn = kzalloc(sizeof(*insn), GFP_KERNEL);
		if (!insn)
			return -ENOMEM;

		insn->old_addr = p_insn->old_addr;
 3fc:	fd2c0000 	sd	t0,0(a5)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:332
		insn->new_addr = p_insn->new_addr;
 400:	fd2b0008 	sd	a7,8(a5)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:333
		insn->offset = p_insn->offset - p_insn->new_addr;
 404:	fd220010 	sd	v0,16(a5)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:334
printk("old_addr: %lx new_addr: %lx offset: %lx name: %s\n", insn->old_addr, insn->new_addr, insn->offset, p_insn->objname);
 408:	0220f809 	jalr	s1
 40c:	ffa90008 	sd	a5,8(sp)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:335
		list_add_tail(&insn->list, &object->insns);
 410:	dfa90008 	ld	a5,8(sp)
list_add_tail():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:93
 * Insert a new entry before the specified head.
 * This is useful for implementing queues.
 */
static inline void list_add_tail(struct list_head *new, struct list_head *head)
{
	__list_add(new, head->prev, head);
 414:	de020040 	ld	v0,64(s0)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:336
printk("patch_make_insn_list end\n");
 418:	3c040000 	lui	a0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:335

		insn->old_addr = p_insn->old_addr;
		insn->new_addr = p_insn->new_addr;
		insn->offset = p_insn->offset - p_insn->new_addr;
printk("old_addr: %lx new_addr: %lx offset: %lx name: %s\n", insn->old_addr, insn->new_addr, insn->offset, p_insn->objname);
		list_add_tail(&insn->list, &object->insns);
 41c:	65250018 	daddiu	a1,a5,24
 420:	66060038 	daddiu	a2,s0,56
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:336
printk("patch_make_insn_list end\n");
 424:	64840000 	daddiu	a0,a0,0
list_add_tail():
/home/loongson/linux-4.19-loongson/./include/linux/list.h:63
			      struct list_head *next)
{
	if (!__list_add_valid(new, prev, next))
		return;

	next->prev = new;
 428:	fe050040 	sd	a1,64(s0)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:64
	new->next = next;
 42c:	fd260018 	sd	a2,24(a5)
/home/loongson/linux-4.19-loongson/./include/linux/list.h:65
	new->prev = prev;
 430:	fd220020 	sd	v0,32(a5)
/home/loongson/linux-4.19-loongson/./include/linux/compiler.h:220
 434:	fc450000 	sd	a1,0(v0)
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:336
 438:	0220f809 	jalr	s1
 43c:	66730020 	daddiu	s3,s3,32
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:321
	struct kpatch_patch_insn *p_insn;
	struct kpatch_insn *insn;
	struct kpatch_func *func;


	for (p_insn = __kpatch_insns; p_insn < __kpatch_insns_end; p_insn++) {
 440:	08000000 	j	0 <init_module>
 444:	0275102b 	sltu	v0,s3,s5
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:464
	ret = patch_make_insns_list(&kpmod.objects);
	if (ret)
		goto err_objects;


printk("start to patch_set_callbacks\n");
 448:	3c040000 	lui	a0,0x0
 44c:	64840000 	daddiu	a0,a0,0
patch_set_callbacks():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:359
	struct kpatch_post_patch_callback *p_post_patch_callback;
	struct kpatch_pre_unpatch_callback *p_pre_unpatch_callback;
	struct kpatch_post_unpatch_callback *p_post_unpatch_callback;
	struct kpatch_object *object;

	for (p_pre_patch_callback = __kpatch_callbacks_pre_patch;
 450:	3c100000 	lui	s0,0x0
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:464
	ret = patch_make_insns_list(&kpmod.objects);
	if (ret)
		goto err_objects;


printk("start to patch_set_callbacks\n");
 454:	0220f809 	jalr	s1
 458:	3c140000 	lui	s4,0x0
patch_set_callbacks():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:359
	struct kpatch_post_patch_callback *p_post_patch_callback;
	struct kpatch_pre_unpatch_callback *p_pre_unpatch_callback;
	struct kpatch_post_unpatch_callback *p_post_unpatch_callback;
	struct kpatch_object *object;

	for (p_pre_patch_callback = __kpatch_callbacks_pre_patch;
 45c:	66100000 	daddiu	s0,s0,0
 460:	66940000 	daddiu	s4,s4,0
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:363
	     p_pre_patch_callback < __kpatch_callbacks_pre_patch_end;
	     p_pre_patch_callback++) {

		object = patch_find_or_add_object(objects, p_pre_patch_callback->objname);
 464:	08000000 	j	0 <init_module>
 468:	3c150000 	lui	s5,0x0
patch_set_callbacks():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:359
	struct kpatch_post_patch_callback *p_post_patch_callback;
	struct kpatch_pre_unpatch_callback *p_pre_unpatch_callback;
	struct kpatch_post_unpatch_callback *p_post_unpatch_callback;
	struct kpatch_object *object;

	for (p_pre_patch_callback = __kpatch_callbacks_pre_patch;
 46c:	3c100000 	lui	s0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:377

		object->pre_patch_callback =
			(int (*)(struct kpatch_object *)) p_pre_patch_callback->callback;
	}

	for (p_post_patch_callback = __kpatch_callbacks_post_patch;
 470:	3c140000 	lui	s4,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:359
	struct kpatch_post_patch_callback *p_post_patch_callback;
	struct kpatch_pre_unpatch_callback *p_pre_unpatch_callback;
	struct kpatch_post_unpatch_callback *p_post_unpatch_callback;
	struct kpatch_object *object;

	for (p_pre_patch_callback = __kpatch_callbacks_pre_patch;
 474:	66100000 	daddiu	s0,s0,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:377

		object->pre_patch_callback =
			(int (*)(struct kpatch_object *)) p_pre_patch_callback->callback;
	}

	for (p_post_patch_callback = __kpatch_callbacks_post_patch;
 478:	66940000 	daddiu	s4,s4,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:381
	     p_post_patch_callback < __kpatch_callbacks_post_patch_end;
	     p_post_patch_callback++) {

		object = patch_find_or_add_object(objects, p_post_patch_callback->objname);
 47c:	3c150000 	lui	s5,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:377

		object->pre_patch_callback =
			(int (*)(struct kpatch_object *)) p_pre_patch_callback->callback;
	}

	for (p_post_patch_callback = __kpatch_callbacks_post_patch;
 480:	0214102b 	sltu	v0,s0,s4
 484:	10400011 	beqz	v0,4cc <init_module+0x4cc>
 488:	66a20000 	daddiu	v0,s5,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:381
	     p_post_patch_callback < __kpatch_callbacks_post_patch_end;
	     p_post_patch_callback++) {

		object = patch_find_or_add_object(objects, p_post_patch_callback->objname);
 48c:	0040f809 	jalr	v0
 490:	de040008 	ld	a0,8(s0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:382
		if (!object)
 494:	1040004c 	beqz	v0,5c8 <init_module+0x5c8>
 498:	00000000 	nop
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:385
			return -ENOMEM;

		if (object->post_patch_callback) {
 49c:	dc430050 	ld	v1,80(v0)
 4a0:	10600006 	beqz	v1,4bc <init_module+0x4bc>
 4a4:	3c040000 	lui	a0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:386
			pr_err("extra post-patch callback for object: %s\n",
 4a8:	dc450010 	ld	a1,16(v0)
 4ac:	0220f809 	jalr	s1
 4b0:	64840000 	daddiu	a0,a0,0
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:388
				object->name);
			return -EINVAL;
 4b4:	08000000 	j	0 <init_module>
 4b8:	2402ffea 	li	v0,-22
patch_set_callbacks():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:392
		}

		object->post_patch_callback =
			(void (*)(struct kpatch_object *)) p_post_patch_callback->callback;
 4bc:	de030000 	ld	v1,0(s0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:379
			(int (*)(struct kpatch_object *)) p_pre_patch_callback->callback;
	}

	for (p_post_patch_callback = __kpatch_callbacks_post_patch;
	     p_post_patch_callback < __kpatch_callbacks_post_patch_end;
	     p_post_patch_callback++) {
 4c0:	66100010 	daddiu	s0,s0,16
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:391
			pr_err("extra post-patch callback for object: %s\n",
				object->name);
			return -EINVAL;
		}

		object->post_patch_callback =
 4c4:	08000000 	j	0 <init_module>
 4c8:	fc430050 	sd	v1,80(v0)
patch_set_callbacks():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:377

		object->pre_patch_callback =
			(int (*)(struct kpatch_object *)) p_pre_patch_callback->callback;
	}

	for (p_post_patch_callback = __kpatch_callbacks_post_patch;
 4cc:	3c100000 	lui	s0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:395

		object->post_patch_callback =
			(void (*)(struct kpatch_object *)) p_post_patch_callback->callback;
	}

	for (p_pre_unpatch_callback = __kpatch_callbacks_pre_unpatch;
 4d0:	3c140000 	lui	s4,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:377

		object->pre_patch_callback =
			(int (*)(struct kpatch_object *)) p_pre_patch_callback->callback;
	}

	for (p_post_patch_callback = __kpatch_callbacks_post_patch;
 4d4:	66100000 	daddiu	s0,s0,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:395

		object->post_patch_callback =
			(void (*)(struct kpatch_object *)) p_post_patch_callback->callback;
	}

	for (p_pre_unpatch_callback = __kpatch_callbacks_pre_unpatch;
 4d8:	66940000 	daddiu	s4,s4,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:399
	     p_pre_unpatch_callback < __kpatch_callbacks_pre_unpatch_end;
	     p_pre_unpatch_callback++) {

		object = patch_find_or_add_object(objects, p_pre_unpatch_callback->objname);
 4dc:	3c150000 	lui	s5,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:395

		object->post_patch_callback =
			(void (*)(struct kpatch_object *)) p_post_patch_callback->callback;
	}

	for (p_pre_unpatch_callback = __kpatch_callbacks_pre_unpatch;
 4e0:	0214102b 	sltu	v0,s0,s4
 4e4:	10400011 	beqz	v0,52c <init_module+0x52c>
 4e8:	66a20000 	daddiu	v0,s5,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:399
	     p_pre_unpatch_callback < __kpatch_callbacks_pre_unpatch_end;
	     p_pre_unpatch_callback++) {

		object = patch_find_or_add_object(objects, p_pre_unpatch_callback->objname);
 4ec:	0040f809 	jalr	v0
 4f0:	de040008 	ld	a0,8(s0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:400
		if (!object)
 4f4:	10400034 	beqz	v0,5c8 <init_module+0x5c8>
 4f8:	00000000 	nop
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:403
			return -ENOMEM;

		if (object->pre_unpatch_callback) {
 4fc:	dc430058 	ld	v1,88(v0)
 500:	10600006 	beqz	v1,51c <init_module+0x51c>
 504:	3c040000 	lui	a0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:404
			pr_err("extra pre-unpatch callback for object: %s\n",
 508:	dc450010 	ld	a1,16(v0)
 50c:	0220f809 	jalr	s1
 510:	64840000 	daddiu	a0,a0,0
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:406
				object->name);
			return -EINVAL;
 514:	08000000 	j	0 <init_module>
 518:	2402ffea 	li	v0,-22
patch_set_callbacks():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:410
		}

		object->pre_unpatch_callback =
			(void (*)(struct kpatch_object *)) p_pre_unpatch_callback->callback;
 51c:	de030000 	ld	v1,0(s0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:397
			(void (*)(struct kpatch_object *)) p_post_patch_callback->callback;
	}

	for (p_pre_unpatch_callback = __kpatch_callbacks_pre_unpatch;
	     p_pre_unpatch_callback < __kpatch_callbacks_pre_unpatch_end;
	     p_pre_unpatch_callback++) {
 520:	66100010 	daddiu	s0,s0,16
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:409
			pr_err("extra pre-unpatch callback for object: %s\n",
				object->name);
			return -EINVAL;
		}

		object->pre_unpatch_callback =
 524:	08000000 	j	0 <init_module>
 528:	fc430058 	sd	v1,88(v0)
patch_set_callbacks():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:395

		object->post_patch_callback =
			(void (*)(struct kpatch_object *)) p_post_patch_callback->callback;
	}

	for (p_pre_unpatch_callback = __kpatch_callbacks_pre_unpatch;
 52c:	3c100000 	lui	s0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:413

		object->pre_unpatch_callback =
			(void (*)(struct kpatch_object *)) p_pre_unpatch_callback->callback;
	}

	for (p_post_unpatch_callback = __kpatch_callbacks_post_unpatch;
 530:	3c140000 	lui	s4,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:395

		object->post_patch_callback =
			(void (*)(struct kpatch_object *)) p_post_patch_callback->callback;
	}

	for (p_pre_unpatch_callback = __kpatch_callbacks_pre_unpatch;
 534:	66100000 	daddiu	s0,s0,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:413

		object->pre_unpatch_callback =
			(void (*)(struct kpatch_object *)) p_pre_unpatch_callback->callback;
	}

	for (p_post_unpatch_callback = __kpatch_callbacks_post_unpatch;
 538:	66940000 	daddiu	s4,s4,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:417
	     p_post_unpatch_callback < __kpatch_callbacks_post_unpatch_end;
	     p_post_unpatch_callback++) {

		object = patch_find_or_add_object(objects, p_post_unpatch_callback->objname);
 53c:	3c150000 	lui	s5,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:413

		object->pre_unpatch_callback =
			(void (*)(struct kpatch_object *)) p_pre_unpatch_callback->callback;
	}

	for (p_post_unpatch_callback = __kpatch_callbacks_post_unpatch;
 540:	0214102b 	sltu	v0,s0,s4
 544:	10400011 	beqz	v0,58c <init_module+0x58c>
 548:	66a20000 	daddiu	v0,s5,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:417
	     p_post_unpatch_callback < __kpatch_callbacks_post_unpatch_end;
	     p_post_unpatch_callback++) {

		object = patch_find_or_add_object(objects, p_post_unpatch_callback->objname);
 54c:	0040f809 	jalr	v0
 550:	de040008 	ld	a0,8(s0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:418
		if (!object)
 554:	1040001c 	beqz	v0,5c8 <init_module+0x5c8>
 558:	00000000 	nop
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:421
			return -ENOMEM;

		if (object->post_unpatch_callback) {
 55c:	dc430060 	ld	v1,96(v0)
 560:	10600006 	beqz	v1,57c <init_module+0x57c>
 564:	3c040000 	lui	a0,0x0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:422
			pr_err("extra post-unpatch callback for object: %s\n",
 568:	dc450010 	ld	a1,16(v0)
 56c:	0220f809 	jalr	s1
 570:	64840000 	daddiu	a0,a0,0
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:424
				object->name);
			return -EINVAL;
 574:	08000000 	j	0 <init_module>
 578:	2402ffea 	li	v0,-22
patch_set_callbacks():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:428
		}

		object->post_unpatch_callback =
			(void (*)(struct kpatch_object *)) p_post_unpatch_callback->callback;
 57c:	de030000 	ld	v1,0(s0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:415
			(void (*)(struct kpatch_object *)) p_pre_unpatch_callback->callback;
	}

	for (p_post_unpatch_callback = __kpatch_callbacks_post_unpatch;
	     p_post_unpatch_callback < __kpatch_callbacks_post_unpatch_end;
	     p_post_unpatch_callback++) {
 580:	66100010 	daddiu	s0,s0,16
patch_init():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:427
			pr_err("extra post-unpatch callback for object: %s\n",
				object->name);
			return -EINVAL;
		}

		object->post_unpatch_callback =
 584:	08000000 	j	0 <init_module>
 588:	fc430060 	sd	v1,96(v0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:469
printk("start to patch_set_callbacks\n");
	ret = patch_set_callbacks(&kpmod.objects);
	if (ret)
		goto err_objects;

printk("start to kpatch_register\n");
 58c:	3c040000 	lui	a0,0x0
 590:	0220f809 	jalr	s1
 594:	64840000 	daddiu	a0,a0,0
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:470
	ret = kpatch_register(&kpmod, replace);
 598:	3c020000 	lui	v0,0x0
 59c:	90450000 	lbu	a1,0(v0)
 5a0:	3c020000 	lui	v0,0x0
 5a4:	64440000 	daddiu	a0,v0,0
 5a8:	3c020000 	lui	v0,0x0
 5ac:	64420000 	daddiu	v0,v0,0
 5b0:	0040f809 	jalr	v0
 5b4:	00000000 	nop
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:471
	if (ret)
 5b8:	1440ff1f 	bnez	v0,238 <init_module+0x238>
 5bc:	00000000 	nop
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:474
		goto err_objects;

	return 0;
 5c0:	08000000 	j	0 <init_module>
 5c4:	0000182d 	move	v1,zero
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:365
	     p_pre_patch_callback < __kpatch_callbacks_pre_patch_end;
	     p_pre_patch_callback++) {

		object = patch_find_or_add_object(objects, p_pre_patch_callback->objname);
		if (!object)
			return -ENOMEM;
 5c8:	08000000 	j	0 <init_module>
 5cc:	2402fff4 	li	v0,-12
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:480

err_objects:
	patch_free_objects();
	kobject_put(&kpmod.kobj);
	return ret;
}
 5d0:	dfbf0058 	ld	ra,88(sp)
 5d4:	dfbe0050 	ld	s8,80(sp)
 5d8:	dfb70048 	ld	s7,72(sp)
 5dc:	00000000 	nop
 5e0:	dfb60040 	ld	s6,64(sp)
 5e4:	dfb50038 	ld	s5,56(sp)
 5e8:	dfb40030 	ld	s4,48(sp)
 5ec:	00000000 	nop
 5f0:	dfb30028 	ld	s3,40(sp)
 5f4:	dfb20020 	ld	s2,32(sp)
 5f8:	dfb10018 	ld	s1,24(sp)
 5fc:	00000000 	nop
 600:	dfb00010 	ld	s0,16(sp)
 604:	0060102d 	move	v0,v1
 608:	03e00008 	jr	ra
 60c:	67bd0060 	daddiu	sp,sp,96

Disassembly of section .exit.text:

0000000000000000 <cleanup_module>:
patch_exit():
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:484

static void __exit patch_exit(void)
{
	WARN_ON(kpmod.enabled);
   0:	3c020000 	lui	v0,0x0
   4:	90420000 	lbu	v0,0(v0)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:483
	kobject_put(&kpmod.kobj);
	return ret;
}

static void __exit patch_exit(void)
{
   8:	67bdfff0 	daddiu	sp,sp,-16
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:484
	WARN_ON(kpmod.enabled);
   c:	10400007 	beqz	v0,2c <cleanup_module+0x2c>
  10:	ffbf0008 	sd	ra,8(sp)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:484 (discriminator 1)
  14:	3c040000 	lui	a0,0x0
  18:	3c020000 	lui	v0,0x0
  1c:	64840000 	daddiu	a0,a0,0
  20:	64420000 	daddiu	v0,v0,0
  24:	0040f809 	jalr	v0
  28:	240501e4 	li	a1,484
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:486 (discriminator 3)

	patch_free_objects();
  2c:	3c020000 	lui	v0,0x0
  30:	64420000 	daddiu	v0,v0,0
  34:	0040f809 	jalr	v0
  38:	00000000 	nop
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:488 (discriminator 3)
	kobject_put(&kpmod.kobj);
}
  3c:	dfbf0008 	ld	ra,8(sp)
/home/loongson/.kpatch/tmp/patch/kpatch-patch-hook.c:487 (discriminator 3)
static void __exit patch_exit(void)
{
	WARN_ON(kpmod.enabled);

	patch_free_objects();
	kobject_put(&kpmod.kobj);
  40:	3c040000 	lui	a0,0x0
  44:	3c190000 	lui	t9,0x0
  48:	64840000 	daddiu	a0,a0,0
  4c:	67390000 	daddiu	t9,t9,0
  50:	03200008 	jr	t9
  54:	67bd0010 	daddiu	sp,sp,16

Disassembly of section .text.find_filesystem:

0000000000000000 <find_filesystem>:
find_filesystem():
/home/loongson/linux-4.19-loongson/fs/filesystems.c:49
{
	module_put(fs->owner);
}

static struct file_system_type **find_filesystem(const char *name, unsigned len)
{
   0:	67bdffe0 	daddiu	sp,sp,-32
   4:	ffbf0018 	sd	ra,24(sp)
   8:	ffb20010 	sd	s2,16(sp)
   c:	ffb10008 	sd	s1,8(sp)
  10:	ffb00000 	sd	s0,0(sp)
  14:	03e0082d 	move	at,ra
  18:	0c000000 	jal	0 <find_filesystem>
  1c:	67ac0018 	daddiu	t0,sp,24
  20:	0080902d 	move	s2,a0
/home/loongson/linux-4.19-loongson/fs/filesystems.c:51
	struct file_system_type **p;
	for (p = &file_systems; *p; p = &(*p)->next)
  24:	3c040000 	lui	a0,0x0
/home/loongson/linux-4.19-loongson/fs/filesystems.c:49
{
	module_put(fs->owner);
}

static struct file_system_type **find_filesystem(const char *name, unsigned len)
{
  28:	00a0882d 	move	s1,a1
/home/loongson/linux-4.19-loongson/fs/filesystems.c:51
	struct file_system_type **p;
	for (p = &file_systems; *p; p = &(*p)->next)
  2c:	64840000 	daddiu	a0,a0,0
  30:	0240282d 	move	a1,s2
  34:	0c000000 	jal	0 <find_filesystem>
  38:	3c100000 	lui	s0,0x0
/home/loongson/linux-4.19-loongson/fs/filesystems.c:52
		if (strncmp((*p)->name, name, len) == 0 &&
  3c:	de070000 	ld	a3,0(s0)
  40:	10e00027 	beqz	a3,e0 <find_filesystem+0xe0>
  44:	7e31f803 	dext	s1,s1,0x0,0x20
  48:	66100000 	daddiu	s0,s0,0
  4c:	00000000 	nop
/home/loongson/linux-4.19-loongson/fs/filesystems.c:53
		    !(*p)->name[len])
  50:	dce40000 	ld	a0,0(a3)
  54:	0240282d 	move	a1,s2
  58:	0c000000 	jal	0 <find_filesystem>
  5c:	0220302d 	move	a2,s1
  60:	14400006 	bnez	v0,7c <find_filesystem+0x7c>
  64:	de030000 	ld	v1,0(s0)
/home/loongson/linux-4.19-loongson/fs/filesystems.c:54 (discriminator 1)
			break;
  68:	dc620000 	ld	v0,0(v1)
  6c:	0051102d 	daddu	v0,v0,s1
/home/loongson/linux-4.19-loongson/fs/filesystems.c:53 (discriminator 1)
static struct file_system_type **find_filesystem(const char *name, unsigned len)
{
	struct file_system_type **p;
	for (p = &file_systems; *p; p = &(*p)->next)
		if (strncmp((*p)->name, name, len) == 0 &&
		    !(*p)->name[len])
  70:	80420000 	lb	v0,0(v0)
  74:	1040000e 	beqz	v0,b0 <find_filesystem+0xb0>
  78:	00000000 	nop
/home/loongson/linux-4.19-loongson/fs/filesystems.c:52 (discriminator 2)

static struct file_system_type **find_filesystem(const char *name, unsigned len)
{
	struct file_system_type **p;
	for (p = &file_systems; *p; p = &(*p)->next)
		if (strncmp((*p)->name, name, len) == 0 &&
  7c:	dc670028 	ld	a3,40(v1)
  80:	14e0fff3 	bnez	a3,50 <find_filesystem+0x50>
  84:	64700028 	daddiu	s0,v1,40
/home/loongson/linux-4.19-loongson/fs/filesystems.c:59
			break;
	return p;
}

/**
 *	register_filesystem - register a new filesystem
  88:	3c040000 	lui	a0,0x0
  8c:	0c000000 	jal	0 <find_filesystem>
  90:	64840000 	daddiu	a0,a0,0
/home/loongson/linux-4.19-loongson/fs/filesystems.c:61
 *	@fs: the file system structure
 *
  94:	dfbf0018 	ld	ra,24(sp)
  98:	0200102d 	move	v0,s0
  9c:	dfb20010 	ld	s2,16(sp)
  a0:	dfb10008 	ld	s1,8(sp)
  a4:	dfb00000 	ld	s0,0(sp)
  a8:	03e00008 	jr	ra
  ac:	67bd0020 	daddiu	sp,sp,32
/home/loongson/linux-4.19-loongson/fs/filesystems.c:56
	for (p = &file_systems; *p; p = &(*p)->next)
		if (strncmp((*p)->name, name, len) == 0 &&
		    !(*p)->name[len])
			break;
	return p;
}
  b0:	1060fff5 	beqz	v1,88 <find_filesystem+0x88>
  b4:	00000000 	nop
/home/loongson/linux-4.19-loongson/fs/filesystems.c:57

  b8:	3c040000 	lui	a0,0x0
  bc:	0c000000 	jal	0 <find_filesystem>
  c0:	64840000 	daddiu	a0,a0,0
/home/loongson/linux-4.19-loongson/fs/filesystems.c:61
/**
 *	register_filesystem - register a new filesystem
 *	@fs: the file system structure
 *
  c4:	dfbf0018 	ld	ra,24(sp)
  c8:	0200102d 	move	v0,s0
  cc:	dfb20010 	ld	s2,16(sp)
  d0:	dfb10008 	ld	s1,8(sp)
  d4:	dfb00000 	ld	s0,0(sp)
  d8:	03e00008 	jr	ra
  dc:	67bd0020 	daddiu	sp,sp,32
/home/loongson/linux-4.19-loongson/fs/filesystems.c:52

static struct file_system_type **find_filesystem(const char *name, unsigned len)
{
	struct file_system_type **p;
	for (p = &file_systems; *p; p = &(*p)->next)
		if (strncmp((*p)->name, name, len) == 0 &&
  e0:	08000000 	j	0 <find_filesystem>
  e4:	66100000 	daddiu	s0,s0,0
get_fs_type():
/home/loongson/linux-4.19-loongson/fs/filesystems.c:191
SYSCALL_DEFINE3(sysfs, int, option, unsigned long, arg1, unsigned long, arg2)
{
	int retval = -EINVAL;

	switch (option) {
		case 1:
  e8:	3c030000 	lui	v1,0x0
  ec:	64630000 	daddiu	v1,v1,0
  f0:	0060f809 	jalr	v1
  f4:	00000000 	nop
  f8:	08000000 	j	0 <find_filesystem>
  fc:	00000000 	nop
 100:	3c030000 	lui	v1,0x0
 104:	64630000 	daddiu	v1,v1,0
/home/loongson/linux-4.19-loongson/fs/filesystems.c:181
	read_lock(&file_systems_lock);
	for (tmp = file_systems, index = 0 ; tmp ; tmp = tmp->next, index++)
		;
	read_unlock(&file_systems_lock);
	return index;
}
 108:	0060f809 	jalr	v1
 10c:	00000000 	nop
 110:	08000000 	j	0 <find_filesystem>
/home/loongson/linux-4.19-loongson/fs/filesystems.c:182

 114:	00000000 	nop
 118:	3c030000 	lui	v1,0x0
 11c:	64630000 	daddiu	v1,v1,0
 120:	0060f809 	jalr	v1
 124:	00000000 	nop
 128:	08000000 	j	0 <find_filesystem>
 12c:	00000000 	nop
__se_sys_sysfs():
 130:	3c030000 	lui	v1,0x0
 134:	64630000 	daddiu	v1,v1,0
 138:	0060f809 	jalr	v1
/home/loongson/linux-4.19-loongson/fs/filesystems.c:184
/*
 * Whee.. Weird sysv syscall. 
 13c:	00000000 	nop
 140:	08000000 	j	0 <find_filesystem>
/home/loongson/linux-4.19-loongson/fs/filesystems.c:191
SYSCALL_DEFINE3(sysfs, int, option, unsigned long, arg1, unsigned long, arg2)
{
	int retval = -EINVAL;

	switch (option) {
		case 1:
 144:	00000000 	nop
 148:	3c030000 	lui	v1,0x0
 14c:	64630000 	daddiu	v1,v1,0
 150:	0060f809 	jalr	v1
 154:	00000000 	nop
 158:	08000000 	j	0 <find_filesystem>
 15c:	00000000 	nop
 160:	3c030000 	lui	v1,0x0
 164:	64630000 	daddiu	v1,v1,0
/home/loongson/linux-4.19-loongson/fs/filesystems.c:161
	read_lock(&file_systems_lock);
	for (tmp = file_systems; tmp; tmp = tmp->next, index--)
		if (index <= 0 && try_module_get(tmp->owner))
			break;
	read_unlock(&file_systems_lock);
	if (!tmp)
 168:	0060f809 	jalr	v1
 16c:	00000000 	nop
 170:	08000000 	j	0 <find_filesystem>
 174:	00000000 	nop
